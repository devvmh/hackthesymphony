%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 14KWS-70thLogo.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Chris McCorkindale
%%CreationDate: 15-01-20
%%BoundingBox: 0 0 629 384
%%HiResBoundingBox: 0 0 628.4112 383.7056
%%CropBox: 0 0 628.4112 383.7056
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.4 x691 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 80 8%%BeginData: 6592 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4552A8FD7EFF7D527DFF7D272752275227522752A8FD72FF7D2752FF%52272727F8272727F8A8FD72FF7DF82727FF5227F827F827F8277DFD72FF%7DFD0427FF52272027272720A8FD72FF7DF827F82752FF2727F827F8277D%FD71FF7DA8A87DA87D7EFFA82727F82727A8FD04FF7DFFA8A8FFA8A8FF7D%A87DA8FFAF7DA8FFA8A8FF7DFFA8A87DFFA8A8FFFF7EFF7DA8A8FF84A8A8%FD04FFA87DA8A8A87DFD04FFA97DA87DFFA8A87DFFA8A8A8FFFFA8A8FFFF%FF7DA8FFFFFFA87DFFFFFF7EA87DA87DA87DA87DA87DA8FFFF7D52272727%7DFD07FF527DFFA8527D5252A852F827F8277DFFFFFFA8527D7DA8FF527D%A87D277DA8A852A87DFF527DA852A8A8277D7DFF277DA87DFF52527DFF7D%5253A8FFFFFF53FD04527DFF7D52FF7D7D527DA87D527DFF7D527D7DFF52%7DFFFF527D7D7DFF7D7DA852FFA827F827F827F827F827F827F8FF27FD06%F8207DFD06FF5227A87D2727207D7D27202727A8FD04FF5252A9FFFF8484%FFFF7DFFFF52A8FFFFFFA853A852FFFF527DFFFFA8527DA8FF7D52A8FF7E%5253FF7D7D84FF527D52A8A8FF5252FFFFFF7DFFFF7D52A8FFA85252FFFF%7D84FFA852FFFF52FF52FFFF52A8FF272720272727202727272027FD0AF8%7DFD05FF7DF827A852F827F8A82727F82784FD04FF525252A8FF5284FFFF%2EA8FF7D52FF7DFF527DFF52A8A8527E7DFF7DFF277DFF7D527DA87D5252%A8FFA8FFFF7D275252FF7D7D527DFFA852FFFF7D527EA8A852527DFF527D%7DFF52A87D53FF527DA852FFA8FD087D52F827FD05F87D7D27FD04F8A8FD%04FF7D272752A82727277D7D2727F8A8FD04FF7DA87DA8FF7D7DFFA87D7E%FFFFA87D7DFF7D7DFF7DFFA87D7DA8A87DFFA9A8FF7D7D7DFF7DA87D7DFD%04FFA8A8A8FFFF7DA8A87DFF7D7DA8FF7D7D7DFF7DA8A87DA87D7D7DFFFF%7D7DA8FFA87D52A8FD0AFF2727FD04F84BFD04FF7DF8F8F84BFD04FF7DF8%27F8527D27F8527D27F8277DFD0BFFA8FD17FFA8FD2BFFA8FD0DFF5227FD%05F8FD06FF27F8F8F8FFFFFF7DFD05A8FF5227207E272720A8FD5CFFA827%2027F8F8F87DFD06FFA8F8F8F876FFFF5352FFAF2E5252A8F8275252F827%7DFD06FFA87DAFFFA8A8FFA8A8FFFFFD07A8FD07FFA8A9A8A8A8FFA8A8A8%FFFFA8A8FFA8FFFFA8A8A9A8A8FFFFFFA884A8A8FFFFA8A8FD05FFFD09A8%FFFFA9A8A8A8FD08FF53F827FD04F87DFFA8A87DFFA8FFF8F8F851A8A8FF%5227A85927277D522752522727A8FD05FF52525927525252F84C7DFFFFFF%5227527D2752A8FD05FFA827277D7D52F85252277DFF7D52F852A8FF7D52%27527DFFA852527D52527DFF7D27F8A8FFFFFFA85227527D272727A8FFFF%7D27277DFD07FFA8F8272752F8F8F87D7D7D527EA97D7D52525227527DFF%7DF827A852F8525227277DF8277DFD04FF5227FFFFFFF87DA827F8FD04FF%5252FFFF27F87DFD05FF52F87DFFFF53277DFF522752FF52277DFFFFFF7D%277DFF7D2752FFFFFF7D277DFFA827F8A8FFFFFFA827FFFF7DF852FD04FF%217DFD08FF5227F85352F8F8207D5284527DA82752275227275252FF7D27%207D7D27277D2727525227A8FD04FF2752FFFFFFA87DFF7D2753FFFFFF27%FFFFFF522727FD04FFA827277DFFFF7D20A8FFFF2727FF7D20A8FFFFFFA8%27A8FF2727FD05FF5227A8FF272727FD04FF52FFFFFF5320A8FFFF7D7DFD%08FFA8272027A87DF8F8F8A87DFF527D52A87D4BF827277D27FF7DF827F8%7D52275252F853272784FD04FF7DF852A8FFFFA8FFFF5227A8FF27A8FFFF%A8527D277DFFFFFF527D277DFFFF7D27A8FFFF27F8FF7D27A8FFFFFF7D27%A8A8F87DFD05FF7DF87DFF527D2752FFFFFF52FFFFFFA82721FFA827A8FD%08FF52F82752FF7DF8F8F87DFFFFAFA8A8FFFFF8F8F852FFFFFF7DFD0427%7D275252275252F8A8FD05FF52F8277DFD05FFF8527D7DFD04FF52FF2728%FFFFA852FF277DFFFF7D27A8FF7D277DFF7D277D7D7E7D53F8A87D277DFD%05FF842752FF52FF532753FFA852FD04FF7D2752527DFD08FFA8F82727A8%FFFFF8F8F852FD06FFA1F8F8F87DFFFFFF7DF827F8275252F852F8525227%7DFD06FF7DF82727A8FFFFFF84F827A8FFFFFFA852FF7DF87EFF527DFFF8%7DFFFF52275252277DFFFF5227527D7D7E5227847DF87DFD05FFA8F852A8%52FFFF28277DFF52FD05FF522752FD09FF5227F852FFFFFF27F8F8F8FFFF%FFA8FFFF27F8F8F8FD04FF7D272727205252275252275920A8FD08FF5227%27FD04FF2752FD05FF28FFFF2752FF27FFFF277DFFFF7D27A8FD05FF7D27%AFFFFFFFA820A884277DFD05FF7D277DFF52FFFFFF27277D7DFD05FFA820%A8FD08FFA8272027A8FFFFFF7DF8F8F827FD04FF76F8F8F852FD04FF7DF8%27F827F853F852272752277DFD04FF7DA9FFFFFF5227A8FFFFFFF852FD05%FF52A8FF5227277DFFFFF87DFFFF5327A8FD05FF5327A8FFFFFF7D277DFF%F852FD05FF7DF8A8A852FFFFFFAFF82752FD05FF7D277DFD08FF52F82752%FD05FF27FD04F8525227F8F8F820FD05FF7D27F827272752522752F85227%A8FD04FF527DFFFFFF7D27FD04FF2752FD05FF52FFFFFF2727A9FFA8277D%FFFF7DF8AFFD05FF7DF8FD04FFA827A8FF7D27A8FFFFFFA8F87DFFFF52FD%04FFA82752FD05FFA827A8FD07FFA8F82727A8FD06FF26FD09F8A8FD05FF%7DF827F827F8272727522727277DFD04FF52F87D7D7DF87DFFFFA87DF827%7DFFFFFF592752FFFF5252FFA853F8287DA8272752A8FFFFFFA8272752FF%FFA8272752A8FF7D277D7D7D277DFFFF52277DFD04FF7D27FD04FFA85227%52A8FD06FF2727F853FD08FF27FD06F827A8FFA8FD04FF7D2720FD042752%2752205227A8FD04FFA8FF7D7D53A9FD04FF7DA87DA8FFFFA8A87DA8A8FD%05FF7DA87DA87EA87EA8A8FFFFFF7DA87EA8A8FFFD05A8FFFFFF7D7D7DA8%FFFFA8A87DA8A8FD04FFA8FD04FFFD05A8FD06FFA8A8A8FD0AFFA87D4B52%52A8FD08FF7DF827F827F8FD07277EFD72FF7D272727F827275227522752%27A8FD72FF7DF827F827F8FD07277DFD72FFA8FFA8FFA8FFA87D7E7DA87D%A8FD7AFFA8FFA8FFA8FD17FFA8537D7D7D7E7DA87D7D7DFFA85359A8A87D%52A87D7E7DA87D7D527D537DFFA8A87D7D7DA8A853A8A87D7DFF59FD057D%52A87DA8527D52A8527EFD45FF277D527D7D527DA85252A8A85252527D7D%A87D52527D52A87D59525952FF7DFF525252FD057D52A8A87D527D527D7D%7D527DA87E7D527D527DFD44FFA87D7D7DA8FFFD05A8FFA87DA8A87DFFA8%FF84A8A8A87DFF7D7DA8A8FFFD05A87DFD05A87DFF7DFD05A87DA87DFFA8%A97DA8A8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD7FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-01-20T09:58:57-05:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-01-20T09:58:57-05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-01-20T09:58:57-05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Aknmr8yb38lvOtn5ZhM2s&#xA;+Ubi0S9W1uXDXVr608qMsE9AXUelyCyV6/aHXFNJV5+/Nj81tIsrbzN5Z12HV/Jeomlrf/U4BLby&#xA;97a7UJ8Ei+NAGxVg3/Qzn5vf9XKD/pEg/wCacVp67/zjp+a/nXztrOsWvmG6juIbO3jlgWOGOKjM&#xA;5UklAK7YqXu2KHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq+b/AMy/JEX5qa7JriapHoF5odh9V1XRL2GZ7yFYJ55PV4IKujJICGQMvgTim2M/l9a+RfLM&#xA;17Y6j5903U/LGrxNb6xpBt7xVkUj4JYyUoksbbq2KvLPPflOXyr5nu9IMouLZOM1hdrQrPazKJIJ&#xA;QRt8SMK+9cUh7H/zh7/ykfmH/mDh/wCTpxQX0f5t8y2vljy9e67d289zaWCercR2wjMvCoBYCV4l&#xA;NK1+1XFCho3m39LX9zaQaTexLZqBcXUn1X0FnKhmtg0c7lpUrxfiCqnYtiqC038wF1HTLm+tNA1S&#xA;SS1v5NLayVbRpmnhkMUxBW5MSxxsp5O8ijwrtirvLv5h2etWzX36Kv8ATtLSK7mbUrxbb6uPqE3o&#xA;TozQTzsrBgxXko5BSRWmKq2i+eE1eTT2g0bUotO1Xk1jqk0cAgdFjMquyrM08ayKp4GSNa/SMVQE&#xA;n5o2UWg6nrUmiaklvpN7+jrqE/UjL6wkETFALoqVWRlUnl32BFaKojzD+YcWh6jaafcaJqM895Zz&#xA;30ZhNlwWO0VWuFdpLmMBow617Gvwk4qu1f8AMfRdGu9Eh1a2u7GHXUDQXk6RpFbueP7u6rJ6kLBp&#xA;EUkpx5EDliq+98+RWen+Yr+bR7/0PLLEXoH1QtIqQLcvJCPrG6rDIrnlxO9AC1QFVln5/judJ1TU&#xA;jompQppMMdxLBItrzljli9b90yXDxFkjIZlZwwqNtxVVW8peetM8yyzwW9tc2VzBb2t41vdiLkbe&#xA;9QvBIDDJMnxBTsWqO4xVV83+cLbyvbWl1dWF1d293cR2nq2xtwsUkzBIvVa4mgCqzGnLoO9MVY5Y&#xA;/nNp19JNFbeXtYaa3uI7OeErYq6XMtw1ssLA3Yo/KNmIPRPjPw74qymTzbo0fm2Lyq0jDVprN75F&#xA;oOHpo4Qryr9vflxp0FcVSW+/Mr6pqUWnnyzrMtxcreSWQRLNTcRWDKs0kccl1HKAfUUoHRWYHYYq&#xA;u1n8yoNL1WTTToOq3c0dpFf8rdLT4oppBEoVJLmOUyeq3D0+HIt0B2xVf5o/MnT/AC5qk9heaZfz&#xA;C3sJdVmu4PqphFpbsiTP+8njkJRpFHEJU9q4qjdb862elS6Iosbu+i1+dLWyuLYQCNZJI2lT1PWl&#xA;hdQY0ZtlPTxoMVRHmHzTaaLNYWhtri/1HU5GjsbC0VDLJ6a8pHrK8UapGu7MzjFUFF+YWhjTtZvN&#xA;QjuNLbQCBqtpdovrRB1Dxkei0ySCQH4CjGvTriq6w88QTatYaVf6Vf6PdapHJJpv15YOMxiX1HjB&#xA;gmnKSLGOfGQKae4pirDPN/8Azkl5G8q+ZL3y/qNjqct5YMqTSW8Vu0RLIrjiXnjbo3dcU0k//Q3X&#xA;5bf9W3Wf+RFr/wBlOK07/obr8tv+rbrP/Ii1/wCynFaZBqP/ADkb+Wem+TrDzPf3M8C6osr2GkFE&#xA;fUJBDM8DH0kdkVecTUZ3C+9dsUPNpP8AnODy4LgrH5XvGtuVBI1xEr8fHgFYV9uX04pet/lr+d3k&#xA;D8w/Ui0K7eHUohzk0u8VYboJ/OqhnR1Hcoxp3pUYoZ7ir5U/5yf13VtD/NzRdV0i6e0v7bSYGhni&#xA;NCCLq5qD2IPQqdj0OKQwDzra6f5n0P8Ax7o9tHaT+qIPNWmw/Ygu5d47qJT0hud9v2X274qhdTuP&#xA;0/8Altp929X1LytP+jp26ltPu+UtqT3pFMsif7JcVenf84e/8pH5h/5g4f8Ak6cVL6E/MLy7f+ZP&#xA;JuqaDYyRQ3Gow+gJpy3BFYjk1FDEmnQYoSryR5W82eWrieyEtm/luT97a6eJZ3ktJnTlKkMjpvA0&#xA;xJVW3UHr2xVG+RPL+v6FpuqQ6kbSa6vdQvNSiNs8gj5XsrTGNuaVUKzU5b7dsVQ3lTyVqFp5FvfK&#xA;muyQSR3hv0aazZ94tRlllcUkUcWUzso69BiqI8t6X5506LSNLu7iwfS9MX0Z7qH1RcXUMcDRQqYm&#xA;XhE3Pg7sshrSgAGKsVuvyp1i70LW7ee10j9N6pqh1GDUqO7Qo8yztHzMIk+Ex8RQioY9KUJVMvPf&#xA;kLXfNOsaXeTW+lzWlhZXVu9rdNM9Z70RiR0dUBX0vRHpsKN32wKmd75V1vVb3TBri2Go6eNMudP1&#xA;uNhJGZmvGheQwxhWCqjWy8atXc9CAcVSy2/LjXLDyH5m8sW2opfTa008Npe3rOWjtJrSK0RZCqks&#xA;8MUfFf5qAk9cVXaJ5H8y6Z5c1nSYRpdrHf2witra1WVIfrDwiCa4lJWoqiKQiLQmtTvXCqH8k/ld&#xA;feX1uNOufqdzoGp29uNTsw0xkW7tk9P1IZCATHL6aOUanFieJp1VZNe+QPLc3lzVNCtrYWltqkRj&#xA;mZC5Ien7uQVatUajDfArHfJn5WX+ieYE1nUtWbUJJYlub6A/YfV2V4pLpARsot39NR17nfFVC7/L&#xA;zzXNrEHmVJrNfM0Oqm8E5nuvq/1H6uLcWnpBONWTZn4125b1IwqyPV/L+u3fn3Q9dha1GmaTb3Vu&#xA;8TtIJ3N76fNhRGT4PQXiO++4wKkvmzyH5g1bzmPMFtDpUq2trbwad9e9ZpIp7e4F2lwDGo4kSfDx&#xA;DbqNzuRiqF88flZrPmvV7a6urq3CWulvZQ3VZFmF6ZI7hbr0lX0yvqwBTGTQqx9hiqbeYvLvnjV4&#xA;PLMhk01b/RbwahesWn9KWaOKWBBGAlVVlmLNXodh44q3feVfNt1JoWuyXdlJ5o0R774GSRbKWC+a&#xA;hhBX94hjRIwr0bddwa4qh5vy1u9Y03zQddvI4tV80LbpI9kpMNstiP8ARQnqUaXi5LvypyrQccVR&#xA;UflbzRq+v6LqfmeSwEOgNLPaQ2HrMZrmSMxCWQyhfTVFYkIvL4t+XbFUs8z/APOP/wCXXmXXbvXN&#xA;UguXv71ledo52RSVUIKKBtsoxVKv+hXPym/5Zrz/AKSn/pitvlL8zP8ACdh5p1SHysjDRLJ/QtpH&#xA;kMplaP4WkDH9lnrx9qYskh/LnyHrn5iecbTy9YycHmrJdXbgultbIaySlajYcqKtRViBtXFi+uIv&#xA;+cPvyhXRPqDpfPfEb6v9ZInrxptGB6FK70MZPvir5a/MTyP5n/KD8wo7WC9YXFqUvtF1eEcDJFyI&#xA;V+NW4sGUq6Gv0qRVV90flT56h88+QdJ8yqqxz3cRS9hU7R3MLGOZaVJALryWu/EjFXlfm38wG/Kj&#xA;zyvlNru6l8o6vZfW0kJEt1pklzNNGWtmcNzjRo+XB6+3gVNPP9Z/Mbzzpnmo+WvPGtfpvyhqcfCa&#xA;ZY4fSn0+8UrFeQlEVqpUSCh2ZaYqwrQdNutN8x+YPKF4QXu7W809/wCRri1/0i2ZfHnNbIFPg2Kv&#xA;T/8AnD3/AJSPzD/zBw/8nTipfSnmTzBp/l3Qb7W9QLCz0+FppuA5MQvRVHix2GKHn3l7zV+c3mfQ&#xA;IvM2j2Wg2unXoeWw0u8N2900IYhOc8bLEGem3wU8adlWOSfnB+cD+U9a8zweXtOig0O/ew1HSZfr&#xA;DXcAiiieSUkOquoaXegFB4gE4qz38n/O2s+dPKq6/qLWKrO5jjtrFZQ0LxsQ6TGVm+KnFhTse+Kp&#xA;Lqnnb80JPzIufKHl+20e7hggW7uL2ZboC0ilZvSS44vRpGUAgJ19sVSF/wA9fNOg/mnB5L83Wump&#xA;aNJDFNqViJ1ANzEGib967UXm4DVG2+KvccVeM/mT+eOs6J+YWm+S/LNnaXl5dyQWtzPeep6aXN06&#xA;rHGDGy/ZV1Z/9YYqrfmn+Yv5n/l9oNprN1Fol9DcXK2bxxR3aMsjpJICOUhBXjEe9a9sVCn5j/NT&#xA;80fJ2j2XmHzHoGl3+g3Pp+vNpdxOskXriqclnT+BFdqjFVP8xfzo8z6D5W07zp5fi03UPK+sSxw2&#xA;SXCXCXaO8TOwl4yBDR4ZAadNuvXFXo2h3HnO88ri6vH05NauUWa09KOc2yI6IwWVWfmzCrVKsO2K&#xA;vO/Jn5n/AJneY/PmteUzbaLbtoLut7dBbpg4jlEf7pfUB3674qncv5oa15i81Xnlr8vbO1vf0Xtq&#xA;2v37SfUYXJIEUaw0eVqqaUYA0PbfFVnmXzr+Zvkm3TWfMljpmseXEdU1CfSEuILm2VyFEpjnkmV1&#xA;qezD6MVQn5ifmd500TywPO3liPSdY8oSCFkkf11uESUrHyajqrfvm40ABXuOuKs0/L3z9ovnjy3B&#xA;rWmPQn93eWrH44JwAWjb76qe43xVjev+aPzRsfPum+W7SHRms9ZW7nsbyZLrkkNpQssirJ8UgWRP&#xA;s0BPhirE/P35v/mr5I8xafper6fo31DUmRbfWVW7FuAWCyFx6nJTHyqw326Yq9hml1pPLzTfWLFd&#xA;VWHm1y6yCyDDdmI58wnH/LxVhH5Uec/zJ84QrrOqWWmWXlxpJEgkiW4FxcqgZRLEHcqqcwN2677d&#xA;8Vel4q8t/wCch/zD/wAI+RpbazlCazrXK0swD8aRkfv5h/qoeIPZmGKvjrUPK13/AMq7vfNUqlbJ&#xA;dQt9Ltj2eaSOSeQ/JFiUf7LFJZx/zjDrupeWH8w+Y7TTU1JKWmltHXhMs96ZTa8WJC+nJPCqSbVF&#xA;VI6HFD6T0Pz15xk8w6jZa3JaW9jos3paldW2mXTW1IrGK7mY3rXfCH4pGChom24+OKvBfze8yWn5&#xA;kW2ly60IrS4064vZbb0XWAmwurQ3NtHLLPyRZVktDHJ1FenXEpCc/lB5t1TyLpGoaLpVzBJ5esNQ&#xA;e51TU5oHvhA0traB4T9WliPpRSFx68aurEAjY4hSg/8AnLr/AMmTpv8A2xoP+oq5xUPO7S9OueTJ&#xA;9IuDzv8Ay/yvdIc/aa0dv9LtvcISJ18AJPHFVa41f0dY8q+bDu6rbfXWqW5TabIIW5dyXgSJm8Sx&#xA;xV69/wA4r2H6O8+ecdPrX6mn1etQa+lcMnUfLFS+hvM/l6x8x+XtQ0K+5C11GB4JGX7S8hs6+6tR&#xA;hih872mt/m/+SDDT9Us/8QeR43It7lK8Y0Zq/BKAWhP+RICtfs+OKXtP5ceZvJHnDRL7V/L8YCan&#xA;OZNasph+8FyYY4WEsZLJ8UUSD4fhbr15YoeM3NzrX5FfmFd2enWraj5X80pJJpFkDTjdrtHHUkUM&#xA;cjqjHujA9RTFL3D8vPKU3l7RXbUJBdeYdUkN9rt7QVkupRVkUj/dcQ+BB0oPfFDx/wDMryG3m/zB&#xA;+Z8drHz1bS4tDvtPoPiZo7Wf1Ih/xkStP8qmKsz/AC9/OCyvvyck816pIHvdDgaDU1J+KS4iAWL+&#xA;Y1uOSb/zE4q8z8z+W73R/MH5R3Wqnn5g13XpNV1mQjf6xc3Vgwj3AIEScUp2INMUhmX/ADl1/wCS&#xA;203/ALbMH/ULc4qFnn3U/OXm/wDLu18n+XvKWoibUYbWO6vr9IYbeOKL05OSP6rgklBv4dN8UBjn&#xA;54eUW8of84++VvLskommsdUi9eRa8TLNDdzS8a78Q8hA9sUh6vovmjz6mjWCR+SpJY1t4gkn6Rs1&#xA;5KEFGoTUVwoePeRdT1ODzv8AnDqf1drPU4dO1C4FqHEjxzIzuEDpUMQw6jArMf8AnEmzto/y7v7t&#xA;BW4udTlE71qaRwxcF+jkT9OKS9T882kF55L161uFDwzafdK6nwMLfiO2KHzb+W99d3P/ADjt5hs5&#xA;1LWlrrenrbuwPGkl7Zu8Y7bE8v8AZYpLIPN2hav+SnnQedPLMDXHkvVJBHrOlrXjDyP2RvsKkmJj&#xA;0Pwnbqq9Cudf0rzB+YX5c6xpM4uLC8stakhkH/GO1BVh2ZTsR2OKGRfmV5B03zz5UutEvAEmI9Sw&#xA;uj1huFB4Pt23ow7jFXiXkHXfPHmjT/8AlTupJJbT6VM8PmDU+f7waVAQptkPUtIxEYYbcMVfSFlZ&#xA;WtjZwWdpEsFrbIsUEKCioiDiqgewGKqruiIzuwVFBLMTQADckk4q+HvzT82aj+Zn5nGPTAZ7dpl0&#xA;zQ4RWjR8+Kv3/vHYuT4fLFL3L84fyrt7L/nHO58uaTEZZ9Bii1AFNjLJA/K6lYd6xvK1PkMUPCv+&#xA;cUfNuh6b54uPLmvLE2m+YlgFv64UoNQs5PVtCS3Q1Zwn+WVxV9h6h+XXkTUdQm1K/wBBsrm/uKie&#xA;6khRpHBTgeTEVNU+H5Yq+XP+cyvOelXnmnSfLellDd6NBJ+k7iKgIa54hLUkAH4I1LMK0+OnUHFX&#xA;pf8AzjN+WulTflRY3/mjSrbUbrUbx9RsmvYVmljgVI7eAAyKSFKW4ZR04kYqwD/nLr/yZOm/9saD&#xA;/qKucUh4/oGopp2sWt3Kpe3R+N1EP92W8gKTR/7OJmX6cUphf2zW+hX2nSkPJo+qmNHXofrEbpKa&#xA;eFbJMUPe/wDnGpxL+Ynm26Br9dtLa8J3NTdETk77/wC7MUPY/wA1bjULf8u9en05nW+jtWa2MVef&#xA;MEcePHfFUisfzp8rSaOI/NlneaFqxjKXujXljcsWJX4hHSN1kR/2e/iMVY9/zjr5Q1TTbvzR5ils&#xA;JdF0fXblX0bSJQVZLdXkdGKkAgBZQqe1fbFWO/8AOReqR6p5v8oR6ba3l5/h+7mk1R4bS4ZIw0tu&#xA;QFbhxc0gb7NcUvfNP1zTNQ0z9J2kjvZcWbm0UsbUT7X7t1V9v9XFDzLyR5v0eX82/OE4W7S21tdL&#xA;h0y4ks7qOOV7WKSOUcmjAWjSChagOKsU038m9VtPzqvNNiSRPIM8sWvzQ0/cSSRF/Rtz1FUndvh/&#xA;kHyxVv8APLzFHefmV5HksrO8vLTytqH1jVZoLS4YIRcwM6KeAVyq2xPwk4pC/wD5yW8xWHmfyXpu&#xA;l6DFd6hefpCO8ZY7O6AWFIZoyWZo1APKQbdcVD2TyPrun6v5cspLMyfuIIYp0mhlgdJFjFVKyqh2&#xA;9sUPJP8AnKjUU1Ty3Z+W9Nt7q81a31GK7uIoLad0SJbaVamQJwqfXXYHFIeq+WPNGjzeTbbUw8q2&#xA;tlBFFdc4J0kR0jTkvpMgkNOQ+ypxQ8S/LHVNOj/Nzzve6raXkWi+YvXjs5prO6CTLLPXi1I+S80b&#xA;9qmFU68h2Wrfkxr2raPrFtc3fknU5luNO1u2hknSCSnHjcpGHZCU4gmn7Ip7BU/8+/mN/ibQbvyx&#xA;+X9tca3rGrxNay3ccMkVraQTDhJJLPKiJXixAA+fahVY75p0PS/y+/KCDyNCtxqGt3U9ne3RtLee&#xA;VXdbyKaaXkqFVVVt+CgnkaDbFXskU/l7zboM0Zj+vaTeq0E8M8UkXNSPiUpKsbjr4Yq8T8j/AJZa&#xA;55F/O3T7BJJ7nym8WoXOjytVkiaaNBLG5GwkpGgJ25AA4q98v7+1sLOW8umKW8I5SMqs5ArT7KBm&#xA;P0DFXzx+WWvWlp+eXmzXLu3vbbStZWSPTrqSyugsjNPGyg0jJSoUn4qYq+jsVeWf85EeYvMFh5Jb&#xA;R/L9hdXmoa4WtpZLWGWX0bUD98SYw3EuCEFexPhirzr/AJxe/KzUrbWLvzbr1jLaNZA2ulwXMbRP&#xA;6si/vZuDhWoqNwU9+R8MUl9LuiOjI6hkYEMpFQQeoIxQ+K/zw/5xh8xeXtWuNa8l2UuqeW7hjKLK&#xA;3BlubIkkmP0xV5Il/YcVIGzdOTKsNi/Pj89rXTP0CPMF8sYHo0eGNrsduP1h4zc8vfnXFLJvyi/5&#xA;xp85+ctZj1bzfa3Ok+XjJ611Ld8o7y7JPIrGj/vRzrvKwp/LU4ofblra21paw2lrEsFtbosUEMYC&#xA;okaAKqqo2AUCgGKvmL/nKPyf5t1r8wNPutH0S/1K1TSYYnns7WaeMSC5uGKFo1YBgGBp74pDx7/l&#xA;WX5k/wDUp6z/ANw+6/6p4pTJvKfmy5W99HRNQl/SFpCluEtp2M17bSQrdKtF+KWNo5ua7laNUYoe&#xA;1/8AONGja1beZdXv7uwuLeyn0rT4ILqSGSOJ5IIkjkRHYBWZGQqwB2IOKvobFDsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQcejaTE8Tx2kSNBPNd&#xA;QsqAFJ7jn60i+DSeq/I96nFVe1tLW0hEFtEsMIZ3EaCg5SMXc0H8zMScVVcVdirsVdirsVeZeY/K&#xA;/n+58x67dWktzLpt09m2nwRapcWYEcTWhuI1Eb0iMiwzjkqftVrviqgPI35rKtjF/iVmjEKpqLCe&#xA;ZmMk5NvMYnPBj6FtxkjJpWUcticKpnB5W/MJPNH186w/6JOoerLYPPIym19a4deH8hVZI1Mf2WH+&#xA;ouKoG88p/mkPMmp6jaanW1E5ubS3kvp/RuY1uIZ4bX0AnC2CJC8buleYfeoJoqi4vJfnK4WW7u9T&#xA;uLbUbiyvHVINRu2t4L6e6aa3URlljaOGJxF9joOnTFUuHk/83/q4RNeX6ykkc6zyTzcSYwbloSi1&#xA;BV7q4aPfb0YkU7EjFV2qeSfPZkinsLy84vfzTz2x1a8IFs0cfpRhjKuyP6mw/piqYaD5T872Xl3z&#xA;LaanfyahealZsuncrmaUJK0cy8B67vwbky1ZWCHairxNVVbzP5S886jrt1eaZr89hpzvYGKxjchW&#xA;EUo9duQIaMemzllX+8PGtKbqoHT/AC1+Z73Gm3V/dJGba6tzc2q6ldNC0NtBHE8jBI42lMzq8gQs&#xA;FrTmJKniqmflHy75ysNcNzrVy1/bm2tkjnN/c0iZLVIpYvqfEwys06NIZmPL4vowKxqDyP8AmsdF&#xA;kgOqy29xI1uAjaldTuDFY3ENxMZiUdRPcSxuIlei8agg9Cqv/gv8zUuIok1WYrHZXdtHdm/uTGlx&#xA;JJdm3naJpGZwgmhoJPUYBeJZqciqjv8ABPnCbTbMRXt1pmox2d5EzHWL+9QXLwKtrM/qcBJxm5OV&#xA;KMPmKAKpdYeR/wAzxDpzz6tNEtrdTXEln+krq4kMLSWXGA3JMfqEiC5cerG6gPwoK8lVes4Fdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:01801174072068118083D50DB893805A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:01801174072068118083D50DB893805A</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:01801174072068118083FF33895E7702</stRef:instanceID>
            <stRef:documentID>xmp.did:01801174072068118083FF33895E7702</stRef:documentID>
            <stRef:originalDocumentID>uuid:8EA741CB56E811DC8578EAB469216B52</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118083FF33895E7702</stEvt:instanceID>
                  <stEvt:when>2014-11-28T15:10:46-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118083D50DB893805A</stEvt:instanceID>
                  <stEvt:when>2015-01-20T09:58:57-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:8EA741CB56E811DC8578EAB469216B52</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>9.756944</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=100 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=55 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>55.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=45 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>45.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=40 Y=30 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=85 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>85.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=5 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=5 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>5.000001</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE Rubine Red C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>14.999999</xmpG:yellow>
                           <xmpG:black>4.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 541 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>57.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>38.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -383.706 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 383.706 li
628.411 383.706 li
628.411 0 li
cp
clp
112.081 49.6899 mo
112.081 49.9272 112.014 50.0459 111.877 50.0459 cv
111.307 50.0459 110.626 50.019 109.835 49.9668 cv
109.079 49.9131 108.442 49.8877 107.923 49.8877 cv
107.42 49.8877 106.728 49.9131 105.843 49.9668 cv
104.917 50.019 104.168 50.0459 103.598 50.0459 cv
103.462 50.0459 103.394 49.9272 103.394 49.6899 cv
103.394 49.4766 103.453 49.3623 103.573 49.3457 cv
104.721 49.21 105.295 48.9316 105.295 48.5137 cv
105.295 48.2749 105.108 47.9668 104.733 47.5913 cv
99.6699 42.439 li
99.397 42.1665 99.1611 41.9888 98.9614 41.9023 cv
98.7617 41.8179 98.4878 41.7754 98.1387 41.7754 cv
98.1387 47.1875 li
98.1387 47.7749 98.2129 48.1904 98.3618 48.4331 cv
98.5103 48.6758 98.7744 48.8667 99.1528 49.0063 cv
99.5313 49.1479 100.074 49.2607 100.779 49.3457 cv
100.924 49.3623 100.996 49.4766 100.996 49.6899 cv
100.996 49.9272 100.928 50.0459 100.792 50.0459 cv
100.222 50.0459 99.542 50.019 98.751 49.9668 cv
97.9912 49.9131 97.3491 49.8877 96.8267 49.8877 cv
96.312 49.8877 95.6782 49.9131 94.9277 49.9668 cv
94.1367 50.019 93.457 50.0459 92.8862 50.0459 cv
92.7505 50.0459 92.6831 49.9272 92.6831 49.6899 cv
92.6831 49.4766 92.7505 49.3623 92.8862 49.3457 cv
93.916 49.2266 94.6147 49.0347 94.9849 48.7705 cv
95.355 48.5063 95.54 47.9785 95.54 47.1846 cv
95.54 35.1572 li
95.54 34.561 95.4653 34.1416 95.3169 33.8989 cv
95.167 33.6558 94.9058 33.4653 94.5317 33.3242 cv
94.1572 33.1826 93.6094 33.0698 92.8862 32.9849 cv
92.7505 32.9849 92.6831 32.8691 92.6831 32.6348 cv
92.6831 32.4019 92.7505 32.2847 92.8862 32.2847 cv
93.457 32.2847 94.1367 32.3115 94.9277 32.3638 cv
95.6782 32.417 96.312 32.4429 96.8267 32.4429 cv
97.3491 32.4429 97.9912 32.417 98.751 32.3638 cv
99.542 32.3115 100.222 32.2847 100.792 32.2847 cv
100.928 32.2847 100.996 32.4019 100.996 32.6348 cv
100.996 32.8691 100.928 32.9849 100.792 32.9849 cv
100.069 33.0698 99.52 33.1841 99.1455 33.3242 cv
98.7715 33.4653 98.5103 33.6572 98.3618 33.9004 cv
98.2129 34.1431 98.1387 34.564 98.1387 35.1616 cv
98.1387 40.9619 li
98.4707 40.9619 98.7383 40.9194 98.9424 40.835 cv
99.1465 40.75 99.3887 40.5708 99.6699 40.2979 cv
105.27 34.7676 li
105.728 34.3281 105.958 34.0103 105.958 33.811 cv
105.958 33.5796 105.849 33.4043 105.633 33.2886 cv
105.416 33.1729 104.98 33.0713 104.326 32.9849 cv
104.189 32.9849 104.122 32.8691 104.122 32.6348 cv
104.122 32.4019 104.198 32.2847 104.352 32.2847 cv
104.751 32.2847 105.278 32.3115 105.932 32.3638 cv
106.628 32.417 107.205 32.4429 107.664 32.4429 cv
108.123 32.4429 108.631 32.4116 109.191 32.3511 cv
109.659 32.3071 110.058 32.2847 110.389 32.2847 cv
110.508 32.2847 110.567 32.4019 110.567 32.6348 cv
110.567 32.8691 110.5 32.9849 110.364 32.9849 cv
109.55 33.0879 108.909 33.2563 108.443 33.4893 cv
107.976 33.7207 107.417 34.1514 106.764 34.7803 cv
100.934 40.3223 li
108.166 47.6802 li
108.669 48.2056 109.166 48.5854 109.656 48.8174 cv
110.146 49.0518 110.878 49.2266 111.851 49.3457 cv
112.004 49.3623 112.081 49.4766 112.081 49.6899 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
112.081 49.6899 mo
112.081 49.9272 112.014 50.0459 111.877 50.0459 cv
111.307 50.0459 110.626 50.019 109.835 49.9668 cv
109.079 49.9131 108.442 49.8877 107.923 49.8877 cv
107.42 49.8877 106.728 49.9131 105.843 49.9668 cv
104.917 50.019 104.168 50.0459 103.598 50.0459 cv
103.462 50.0459 103.394 49.9272 103.394 49.6899 cv
103.394 49.4766 103.453 49.3623 103.573 49.3457 cv
104.721 49.21 105.295 48.9316 105.295 48.5137 cv
105.295 48.2749 105.108 47.9668 104.733 47.5913 cv
99.6699 42.439 li
99.397 42.1665 99.1611 41.9888 98.9614 41.9023 cv
98.7617 41.8179 98.4878 41.7754 98.1387 41.7754 cv
98.1387 47.1875 li
98.1387 47.7749 98.2129 48.1904 98.3618 48.4331 cv
98.5103 48.6758 98.7744 48.8667 99.1528 49.0063 cv
99.5313 49.1479 100.074 49.2607 100.779 49.3457 cv
100.924 49.3623 100.996 49.4766 100.996 49.6899 cv
100.996 49.9272 100.928 50.0459 100.792 50.0459 cv
100.222 50.0459 99.542 50.019 98.751 49.9668 cv
97.9912 49.9131 97.3491 49.8877 96.8267 49.8877 cv
96.312 49.8877 95.6782 49.9131 94.9277 49.9668 cv
94.1367 50.019 93.457 50.0459 92.8862 50.0459 cv
92.7505 50.0459 92.6831 49.9272 92.6831 49.6899 cv
92.6831 49.4766 92.7505 49.3623 92.8862 49.3457 cv
93.916 49.2266 94.6147 49.0347 94.9849 48.7705 cv
95.355 48.5063 95.54 47.9785 95.54 47.1846 cv
95.54 35.1572 li
95.54 34.561 95.4653 34.1416 95.3169 33.8989 cv
95.167 33.6558 94.9058 33.4653 94.5317 33.3242 cv
94.1572 33.1826 93.6094 33.0698 92.8862 32.9849 cv
92.7505 32.9849 92.6831 32.8691 92.6831 32.6348 cv
92.6831 32.4019 92.7505 32.2847 92.8862 32.2847 cv
93.457 32.2847 94.1367 32.3115 94.9277 32.3638 cv
95.6782 32.417 96.312 32.4429 96.8267 32.4429 cv
97.3491 32.4429 97.9912 32.417 98.751 32.3638 cv
99.542 32.3115 100.222 32.2847 100.792 32.2847 cv
100.928 32.2847 100.996 32.4019 100.996 32.6348 cv
100.996 32.8691 100.928 32.9849 100.792 32.9849 cv
100.069 33.0698 99.52 33.1841 99.1455 33.3242 cv
98.7715 33.4653 98.5103 33.6572 98.3618 33.9004 cv
98.2129 34.1431 98.1387 34.564 98.1387 35.1616 cv
98.1387 40.9619 li
98.4707 40.9619 98.7383 40.9194 98.9424 40.835 cv
99.1465 40.75 99.3887 40.5708 99.6699 40.2979 cv
105.27 34.7676 li
105.728 34.3281 105.958 34.0103 105.958 33.811 cv
105.958 33.5796 105.849 33.4043 105.633 33.2886 cv
105.416 33.1729 104.98 33.0713 104.326 32.9849 cv
104.189 32.9849 104.122 32.8691 104.122 32.6348 cv
104.122 32.4019 104.198 32.2847 104.352 32.2847 cv
104.751 32.2847 105.278 32.3115 105.932 32.3638 cv
106.628 32.417 107.205 32.4429 107.664 32.4429 cv
108.123 32.4429 108.631 32.4116 109.191 32.3511 cv
109.659 32.3071 110.058 32.2847 110.389 32.2847 cv
110.508 32.2847 110.567 32.4019 110.567 32.6348 cv
110.567 32.8691 110.5 32.9849 110.364 32.9849 cv
109.55 33.0879 108.909 33.2563 108.443 33.4893 cv
107.976 33.7207 107.417 34.1514 106.764 34.7803 cv
100.934 40.3223 li
108.166 47.6802 li
108.669 48.2056 109.166 48.5854 109.656 48.8174 cv
110.146 49.0518 110.878 49.2266 111.851 49.3457 cv
112.004 49.3623 112.081 49.4766 112.081 49.6899 cv
cp
@
125.949 49.6899 mo
125.949 49.9272 125.881 50.0459 125.745 50.0459 cv
125.175 50.0459 124.499 50.019 123.717 49.9668 cv
122.969 49.9131 122.336 49.8877 121.818 49.8877 cv
121.3 49.8877 120.667 49.9131 119.919 49.9668 cv
119.128 50.019 118.444 50.0459 117.865 50.0459 cv
117.729 50.0459 117.661 49.9272 117.661 49.6899 cv
117.661 49.4766 117.729 49.3623 117.865 49.3457 cv
118.895 49.2266 119.593 49.0347 119.963 48.7705 cv
120.333 48.5063 120.519 47.9785 120.519 47.1846 cv
120.519 35.1572 li
120.519 34.561 120.444 34.1416 120.295 33.8989 cv
120.146 33.6558 119.884 33.4653 119.51 33.3242 cv
119.136 33.1826 118.588 33.0698 117.865 32.9849 cv
117.729 32.9849 117.661 32.8691 117.661 32.6348 cv
117.661 32.4019 117.729 32.2847 117.865 32.2847 cv
118.444 32.2847 119.128 32.3115 119.919 32.3638 cv
120.667 32.417 121.3 32.4429 121.818 32.4429 cv
122.336 32.4429 122.969 32.417 123.717 32.3638 cv
124.499 32.3115 125.175 32.2847 125.745 32.2847 cv
125.881 32.2847 125.949 32.4019 125.949 32.6348 cv
125.949 32.8691 125.881 32.9849 125.745 32.9849 cv
125.03 33.0698 124.486 33.1826 124.111 33.3242 cv
123.737 33.4653 123.479 33.6543 123.334 33.8931 cv
123.189 34.1318 123.117 34.5527 123.117 35.1572 cv
123.117 47.1846 li
123.117 47.7734 123.189 48.189 123.334 48.4316 cv
123.479 48.6748 123.736 48.8667 124.106 49.0063 cv
124.476 49.1479 125.018 49.2607 125.732 49.3457 cv
125.877 49.3623 125.949 49.4766 125.949 49.6899 cv
cp
f
125.949 49.6899 mo
125.949 49.9272 125.881 50.0459 125.745 50.0459 cv
125.175 50.0459 124.499 50.019 123.717 49.9668 cv
122.969 49.9131 122.336 49.8877 121.818 49.8877 cv
121.3 49.8877 120.667 49.9131 119.919 49.9668 cv
119.128 50.019 118.444 50.0459 117.865 50.0459 cv
117.729 50.0459 117.661 49.9272 117.661 49.6899 cv
117.661 49.4766 117.729 49.3623 117.865 49.3457 cv
118.895 49.2266 119.593 49.0347 119.963 48.7705 cv
120.333 48.5063 120.519 47.9785 120.519 47.1846 cv
120.519 35.1572 li
120.519 34.561 120.444 34.1416 120.295 33.8989 cv
120.146 33.6558 119.884 33.4653 119.51 33.3242 cv
119.136 33.1826 118.588 33.0698 117.865 32.9849 cv
117.729 32.9849 117.661 32.8691 117.661 32.6348 cv
117.661 32.4019 117.729 32.2847 117.865 32.2847 cv
118.444 32.2847 119.128 32.3115 119.919 32.3638 cv
120.667 32.417 121.3 32.4429 121.818 32.4429 cv
122.336 32.4429 122.969 32.417 123.717 32.3638 cv
124.499 32.3115 125.175 32.2847 125.745 32.2847 cv
125.881 32.2847 125.949 32.4019 125.949 32.6348 cv
125.949 32.8691 125.881 32.9849 125.745 32.9849 cv
125.03 33.0698 124.486 33.1826 124.111 33.3242 cv
123.737 33.4653 123.479 33.6543 123.334 33.8931 cv
123.189 34.1318 123.117 34.5527 123.117 35.1572 cv
123.117 47.1846 li
123.117 47.7734 123.189 48.189 123.334 48.4316 cv
123.479 48.6748 123.736 48.8667 124.106 49.0063 cv
124.476 49.1479 125.018 49.2607 125.732 49.3457 cv
125.877 49.3623 125.949 49.4766 125.949 49.6899 cv
cp
@
149.683 36.4932 mo
149.683 36.6558 149.53 36.7363 149.224 36.7363 cv
149.088 36.7363 149.002 36.6768 148.969 36.5566 cv
148.603 35.355 148.08 34.5049 147.399 34.0049 cv
146.719 33.5063 145.71 33.2563 144.375 33.2563 cv
143.175 33.2563 li
142.758 33.2563 142.473 33.3242 142.32 33.4609 cv
142.167 33.5967 142.09 33.8521 142.09 34.2266 cv
142.09 47.1875 li
142.09 47.7749 142.165 48.1904 142.313 48.4331 cv
142.462 48.6758 142.726 48.8667 143.104 49.0063 cv
143.483 49.1479 144.025 49.2607 144.731 49.3457 cv
144.867 49.3623 144.935 49.4766 144.935 49.6899 cv
144.935 49.9272 144.867 50.0459 144.731 50.0459 cv
144.161 50.0459 143.481 50.019 142.69 49.9668 cv
141.938 49.9131 141.31 49.8877 140.804 49.8877 cv
140.281 49.8877 139.639 49.9131 138.879 49.9668 cv
138.089 50.019 137.409 50.0459 136.838 50.0459 cv
136.703 50.0459 136.635 49.9272 136.635 49.6899 cv
136.635 49.4766 136.703 49.3623 136.838 49.3457 cv
137.868 49.2266 138.567 49.0347 138.937 48.7705 cv
139.307 48.5063 139.492 47.9785 139.492 47.1875 cv
139.492 34.2266 li
139.492 33.8521 139.416 33.5967 139.262 33.4609 cv
139.109 33.3242 138.821 33.2563 138.396 33.2563 cv
137.402 33.2563 li
136.205 33.2563 135.117 33.5615 134.141 34.1714 cv
133.163 34.7813 132.526 35.5723 132.229 36.5439 cv
132.187 36.6729 132.093 36.7363 131.949 36.7363 cv
131.659 36.7363 131.515 36.6431 131.515 36.4551 cv
131.992 35.167 132.444 33.7095 132.871 32.0811 cv
134.027 32.3228 136.674 32.4429 140.81 32.4429 cv
145.056 32.4429 147.757 32.3228 148.915 32.0811 cv
149.034 33.1899 149.291 34.6602 149.683 36.4932 cv
cp
f
149.683 36.4932 mo
149.683 36.6558 149.53 36.7363 149.224 36.7363 cv
149.088 36.7363 149.002 36.6768 148.969 36.5566 cv
148.603 35.355 148.08 34.5049 147.399 34.0049 cv
146.719 33.5063 145.71 33.2563 144.375 33.2563 cv
143.175 33.2563 li
142.758 33.2563 142.473 33.3242 142.32 33.4609 cv
142.167 33.5967 142.09 33.8521 142.09 34.2266 cv
142.09 47.1875 li
142.09 47.7749 142.165 48.1904 142.313 48.4331 cv
142.462 48.6758 142.726 48.8667 143.104 49.0063 cv
143.483 49.1479 144.025 49.2607 144.731 49.3457 cv
144.867 49.3623 144.935 49.4766 144.935 49.6899 cv
144.935 49.9272 144.867 50.0459 144.731 50.0459 cv
144.161 50.0459 143.481 50.019 142.69 49.9668 cv
141.938 49.9131 141.31 49.8877 140.804 49.8877 cv
140.281 49.8877 139.639 49.9131 138.879 49.9668 cv
138.089 50.019 137.409 50.0459 136.838 50.0459 cv
136.703 50.0459 136.635 49.9272 136.635 49.6899 cv
136.635 49.4766 136.703 49.3623 136.838 49.3457 cv
137.868 49.2266 138.567 49.0347 138.937 48.7705 cv
139.307 48.5063 139.492 47.9785 139.492 47.1875 cv
139.492 34.2266 li
139.492 33.8521 139.416 33.5967 139.262 33.4609 cv
139.109 33.3242 138.821 33.2563 138.396 33.2563 cv
137.402 33.2563 li
136.205 33.2563 135.117 33.5615 134.141 34.1714 cv
133.163 34.7813 132.526 35.5723 132.229 36.5439 cv
132.187 36.6729 132.093 36.7363 131.949 36.7363 cv
131.659 36.7363 131.515 36.6431 131.515 36.4551 cv
131.992 35.167 132.444 33.7095 132.871 32.0811 cv
134.027 32.3228 136.674 32.4429 140.81 32.4429 cv
145.056 32.4429 147.757 32.3228 148.915 32.0811 cv
149.034 33.1899 149.291 34.6602 149.683 36.4932 cv
cp
@
171.813 45.3232 mo
171.506 46.6846 171.208 48.1309 170.92 49.6616 cv
170.435 49.6616 169.555 49.7764 168.279 50.0063 cv
166.646 50.3032 165.439 50.4526 164.657 50.4526 cv
162.718 50.4526 161.017 50.0698 159.554 49.3057 cv
158.091 48.5405 156.951 47.4458 156.135 46.021 cv
155.318 44.5972 154.91 43.0142 154.91 41.271 cv
154.91 39.5537 155.342 37.9707 156.205 36.52 cv
157.069 35.0713 158.257 33.9424 159.772 33.1348 cv
161.287 32.3267 162.992 31.9229 164.89 31.9229 cv
165.689 31.9229 166.761 32.0063 168.105 32.1743 cv
169.152 32.3086 169.914 32.375 170.389 32.375 cv
170.5 33.5654 170.696 35.0117 170.977 36.7134 cv
170.977 36.8491 170.839 36.917 170.564 36.917 cv
170.392 36.917 170.288 36.8491 170.254 36.7134 cv
169.947 35.5581 169.288 34.6064 168.276 33.8579 cv
167.264 33.1108 166.099 32.7363 164.78 32.7363 cv
162.781 32.7363 161.104 33.5615 159.748 35.2109 cv
158.39 36.8604 157.712 38.8813 157.712 41.271 cv
157.712 43.5928 158.385 45.5674 159.729 47.1958 cv
161.072 48.8257 162.715 49.6392 164.654 49.6392 cv
167.692 49.6392 169.844 48.2017 171.111 45.3247 cv
171.17 45.1875 171.286 45.1196 171.456 45.1196 cv
171.694 45.1196 171.813 45.1875 171.813 45.3232 cv
cp
f
171.813 45.3232 mo
171.506 46.6846 171.208 48.1309 170.92 49.6616 cv
170.435 49.6616 169.555 49.7764 168.279 50.0063 cv
166.646 50.3032 165.439 50.4526 164.657 50.4526 cv
162.718 50.4526 161.017 50.0698 159.554 49.3057 cv
158.091 48.5405 156.951 47.4458 156.135 46.021 cv
155.318 44.5972 154.91 43.0142 154.91 41.271 cv
154.91 39.5537 155.342 37.9707 156.205 36.52 cv
157.069 35.0713 158.257 33.9424 159.772 33.1348 cv
161.287 32.3267 162.992 31.9229 164.89 31.9229 cv
165.689 31.9229 166.761 32.0063 168.105 32.1743 cv
169.152 32.3086 169.914 32.375 170.389 32.375 cv
170.5 33.5654 170.696 35.0117 170.977 36.7134 cv
170.977 36.8491 170.839 36.917 170.564 36.917 cv
170.392 36.917 170.288 36.8491 170.254 36.7134 cv
169.947 35.5581 169.288 34.6064 168.276 33.8579 cv
167.264 33.1108 166.099 32.7363 164.78 32.7363 cv
162.781 32.7363 161.104 33.5615 159.748 35.2109 cv
158.39 36.8604 157.712 38.8813 157.712 41.271 cv
157.712 43.5928 158.385 45.5674 159.729 47.1958 cv
161.072 48.8257 162.715 49.6392 164.654 49.6392 cv
167.692 49.6392 169.844 48.2017 171.111 45.3247 cv
171.17 45.1875 171.286 45.1196 171.456 45.1196 cv
171.694 45.1196 171.813 45.1875 171.813 45.3232 cv
cp
@
197.929 49.6899 mo
197.929 49.9272 197.861 50.0459 197.725 50.0459 cv
197.146 50.0459 196.462 50.019 195.671 49.9668 cv
194.923 49.9131 194.29 49.8877 193.771 49.8877 cv
193.252 49.8877 192.653 49.9131 191.973 49.9668 cv
191.259 50.019 190.618 50.0459 190.048 50.0459 cv
189.912 50.0459 189.844 49.9272 189.844 49.6899 cv
189.844 49.4766 189.916 49.3623 190.061 49.3457 cv
190.776 49.2607 191.308 49.1436 191.656 48.9937 cv
192.005 48.8457 192.228 48.6494 192.326 48.4063 cv
192.425 48.1631 192.473 47.7568 192.473 47.1846 cv
192.473 41.5044 li
182.734 41.5044 li
182.734 47.1846 li
182.734 47.7568 182.783 48.1631 182.88 48.4063 cv
182.978 48.6494 183.202 48.8457 183.551 48.9937 cv
183.9 49.1436 184.436 49.2607 185.16 49.3457 cv
185.295 49.3623 185.363 49.4766 185.363 49.6899 cv
185.363 49.9272 185.295 50.0459 185.16 50.0459 cv
184.589 50.0459 183.948 50.019 183.234 49.9668 cv
182.554 49.9131 181.954 49.8877 181.436 49.8877 cv
180.917 49.8877 180.28 49.9131 179.523 49.9668 cv
178.732 50.019 178.051 50.0459 177.482 50.0459 cv
177.345 50.0459 177.277 49.9272 177.277 49.6899 cv
177.277 49.4766 177.345 49.3623 177.482 49.3457 cv
178.51 49.2266 179.21 49.0347 179.58 48.7705 cv
179.95 48.5063 180.135 47.9785 180.135 47.1846 cv
180.135 35.1572 li
180.135 34.561 180.061 34.1416 179.911 33.8989 cv
179.763 33.6558 179.502 33.4653 179.127 33.3242 cv
178.753 33.1826 178.205 33.0698 177.482 32.9849 cv
177.345 32.9849 177.277 32.8691 177.277 32.6348 cv
177.277 32.4019 177.345 32.2847 177.482 32.2847 cv
178.051 32.2847 178.732 32.3115 179.523 32.3638 cv
180.28 32.417 180.917 32.4429 181.436 32.4429 cv
181.954 32.4429 182.554 32.417 183.234 32.3638 cv
183.948 32.3115 184.589 32.2847 185.16 32.2847 cv
185.295 32.2847 185.363 32.4019 185.363 32.6348 cv
185.363 32.8691 185.295 32.9849 185.16 32.9849 cv
184.496 33.0615 183.993 33.1646 183.652 33.2915 cv
183.312 33.4199 183.074 33.5923 182.938 33.8096 cv
182.802 34.0273 182.734 34.4766 182.734 35.1572 cv
182.734 40.6904 li
192.473 40.6904 li
192.473 35.1572 li
192.473 34.5864 192.425 34.1787 192.326 33.9312 cv
192.228 33.6841 192.007 33.4849 191.663 33.3369 cv
191.318 33.1885 190.779 33.0698 190.048 32.9849 cv
189.912 32.9849 189.844 32.8691 189.844 32.6348 cv
189.844 32.4019 189.912 32.2847 190.048 32.2847 cv
190.618 32.2847 191.259 32.3115 191.973 32.3638 cv
192.653 32.417 193.252 32.4429 193.771 32.4429 cv
194.29 32.4429 194.923 32.417 195.671 32.3638 cv
196.462 32.3115 197.146 32.2847 197.725 32.2847 cv
197.861 32.2847 197.929 32.4019 197.929 32.6348 cv
197.929 32.8691 197.861 32.9849 197.725 32.9849 cv
197.002 33.0698 196.454 33.1826 196.08 33.3242 cv
195.706 33.4653 195.444 33.6558 195.295 33.8989 cv
195.146 34.1416 195.072 34.561 195.072 35.1572 cv
195.072 47.1846 li
195.072 47.9785 195.256 48.5063 195.626 48.7705 cv
195.996 49.0347 196.696 49.2266 197.725 49.3457 cv
197.861 49.3623 197.929 49.4766 197.929 49.6899 cv
cp
f
197.929 49.6899 mo
197.929 49.9272 197.861 50.0459 197.725 50.0459 cv
197.146 50.0459 196.462 50.019 195.671 49.9668 cv
194.923 49.9131 194.29 49.8877 193.771 49.8877 cv
193.252 49.8877 192.653 49.9131 191.973 49.9668 cv
191.259 50.019 190.618 50.0459 190.048 50.0459 cv
189.912 50.0459 189.844 49.9272 189.844 49.6899 cv
189.844 49.4766 189.916 49.3623 190.061 49.3457 cv
190.776 49.2607 191.308 49.1436 191.656 48.9937 cv
192.005 48.8457 192.228 48.6494 192.326 48.4063 cv
192.425 48.1631 192.473 47.7568 192.473 47.1846 cv
192.473 41.5044 li
182.734 41.5044 li
182.734 47.1846 li
182.734 47.7568 182.783 48.1631 182.88 48.4063 cv
182.978 48.6494 183.202 48.8457 183.551 48.9937 cv
183.9 49.1436 184.436 49.2607 185.16 49.3457 cv
185.295 49.3623 185.363 49.4766 185.363 49.6899 cv
185.363 49.9272 185.295 50.0459 185.16 50.0459 cv
184.589 50.0459 183.948 50.019 183.234 49.9668 cv
182.554 49.9131 181.954 49.8877 181.436 49.8877 cv
180.917 49.8877 180.28 49.9131 179.523 49.9668 cv
178.732 50.019 178.051 50.0459 177.482 50.0459 cv
177.345 50.0459 177.277 49.9272 177.277 49.6899 cv
177.277 49.4766 177.345 49.3623 177.482 49.3457 cv
178.51 49.2266 179.21 49.0347 179.58 48.7705 cv
179.95 48.5063 180.135 47.9785 180.135 47.1846 cv
180.135 35.1572 li
180.135 34.561 180.061 34.1416 179.911 33.8989 cv
179.763 33.6558 179.502 33.4653 179.127 33.3242 cv
178.753 33.1826 178.205 33.0698 177.482 32.9849 cv
177.345 32.9849 177.277 32.8691 177.277 32.6348 cv
177.277 32.4019 177.345 32.2847 177.482 32.2847 cv
178.051 32.2847 178.732 32.3115 179.523 32.3638 cv
180.28 32.417 180.917 32.4429 181.436 32.4429 cv
181.954 32.4429 182.554 32.417 183.234 32.3638 cv
183.948 32.3115 184.589 32.2847 185.16 32.2847 cv
185.295 32.2847 185.363 32.4019 185.363 32.6348 cv
185.363 32.8691 185.295 32.9849 185.16 32.9849 cv
184.496 33.0615 183.993 33.1646 183.652 33.2915 cv
183.312 33.4199 183.074 33.5923 182.938 33.8096 cv
182.802 34.0273 182.734 34.4766 182.734 35.1572 cv
182.734 40.6904 li
192.473 40.6904 li
192.473 35.1572 li
192.473 34.5864 192.425 34.1787 192.326 33.9312 cv
192.228 33.6841 192.007 33.4849 191.663 33.3369 cv
191.318 33.1885 190.779 33.0698 190.048 32.9849 cv
189.912 32.9849 189.844 32.8691 189.844 32.6348 cv
189.844 32.4019 189.912 32.2847 190.048 32.2847 cv
190.618 32.2847 191.259 32.3115 191.973 32.3638 cv
192.653 32.417 193.252 32.4429 193.771 32.4429 cv
194.29 32.4429 194.923 32.417 195.671 32.3638 cv
196.462 32.3115 197.146 32.2847 197.725 32.2847 cv
197.861 32.2847 197.929 32.4019 197.929 32.6348 cv
197.929 32.8691 197.861 32.9849 197.725 32.9849 cv
197.002 33.0698 196.454 33.1826 196.08 33.3242 cv
195.706 33.4653 195.444 33.6558 195.295 33.8989 cv
195.146 34.1416 195.072 34.561 195.072 35.1572 cv
195.072 47.1846 li
195.072 47.9785 195.256 48.5063 195.626 48.7705 cv
195.996 49.0347 196.696 49.2266 197.725 49.3457 cv
197.861 49.3623 197.929 49.4766 197.929 49.6899 cv
cp
@
219.055 45.8359 mo
218.365 47.3076 217.804 48.71 217.37 50.0459 cv
214.165 49.9399 211.881 49.8877 210.52 49.8877 cv
209.176 49.8877 206.896 49.9399 203.682 50.0459 cv
203.545 50.0459 203.478 49.9272 203.478 49.6899 cv
203.478 49.4766 203.545 49.3623 203.682 49.3457 cv
204.388 49.2607 204.928 49.1479 205.302 49.0063 cv
205.676 48.8667 205.938 48.6758 206.086 48.4385 cv
206.236 48.1987 206.31 47.7822 206.31 47.1846 cv
206.31 35.1572 li
206.31 34.5698 206.24 34.1543 206.1 33.9116 cv
205.959 33.6685 205.702 33.4751 205.328 33.3296 cv
204.953 33.1855 204.405 33.0698 203.682 32.9849 cv
203.545 32.9849 203.478 32.8691 203.478 32.6348 cv
203.478 32.4019 203.545 32.2847 203.682 32.2847 cv
205.825 32.3906 208.02 32.4429 210.267 32.4429 cv
212.53 32.4429 214.73 32.3906 216.866 32.2847 cv
217.062 33.6021 217.347 34.9028 217.722 36.188 cv
217.722 36.3574 217.571 36.4424 217.27 36.4424 cv
217.124 36.4424 217.033 36.3833 216.999 36.2646 cv
216.369 34.2588 215.025 33.2563 212.966 33.2563 cv
210.389 33.2563 li
209.402 33.2563 208.909 33.7676 208.909 34.7871 cv
208.909 40.4648 li
212.129 40.4648 li
212.988 40.4648 213.57 40.27 213.875 39.8784 cv
214.18 39.4873 214.392 38.7939 214.513 37.7983 cv
214.513 37.6626 214.629 37.5947 214.863 37.5947 cv
215.097 37.5947 215.213 37.6626 215.213 37.7983 cv
215.213 38.2231 215.187 38.7588 215.134 39.4043 cv
215.081 40.0239 215.055 40.5298 215.055 40.9194 cv
215.055 41.3193 215.081 41.8291 215.134 42.4492 cv
215.187 43.1113 215.213 43.6553 215.213 44.0801 cv
215.213 44.2158 215.097 44.2837 214.863 44.2837 cv
214.629 44.2837 214.513 44.2158 214.513 44.0801 cv
214.383 43.0435 214.158 42.3179 213.836 41.9023 cv
213.514 41.4873 212.944 41.2783 212.129 41.2783 cv
208.909 41.2783 li
208.909 47.5659 li
208.909 48.5713 209.402 49.0742 210.39 49.0742 cv
213.172 49.0742 li
214.185 49.0742 215.188 48.7451 216.184 48.0859 cv
217.179 47.4277 217.91 46.6055 218.379 45.6182 cv
218.413 45.542 218.485 45.5039 218.595 45.5039 cv
218.715 45.5039 218.821 45.5366 218.914 45.6001 cv
219.008 45.6636 219.055 45.7427 219.055 45.8359 cv
cp
f
219.055 45.8359 mo
218.365 47.3076 217.804 48.71 217.37 50.0459 cv
214.165 49.9399 211.881 49.8877 210.52 49.8877 cv
209.176 49.8877 206.896 49.9399 203.682 50.0459 cv
203.545 50.0459 203.478 49.9272 203.478 49.6899 cv
203.478 49.4766 203.545 49.3623 203.682 49.3457 cv
204.388 49.2607 204.928 49.1479 205.302 49.0063 cv
205.676 48.8667 205.938 48.6758 206.086 48.4385 cv
206.236 48.1987 206.31 47.7822 206.31 47.1846 cv
206.31 35.1572 li
206.31 34.5698 206.24 34.1543 206.1 33.9116 cv
205.959 33.6685 205.702 33.4751 205.328 33.3296 cv
204.953 33.1855 204.405 33.0698 203.682 32.9849 cv
203.545 32.9849 203.478 32.8691 203.478 32.6348 cv
203.478 32.4019 203.545 32.2847 203.682 32.2847 cv
205.825 32.3906 208.02 32.4429 210.267 32.4429 cv
212.53 32.4429 214.73 32.3906 216.866 32.2847 cv
217.062 33.6021 217.347 34.9028 217.722 36.188 cv
217.722 36.3574 217.571 36.4424 217.27 36.4424 cv
217.124 36.4424 217.033 36.3833 216.999 36.2646 cv
216.369 34.2588 215.025 33.2563 212.966 33.2563 cv
210.389 33.2563 li
209.402 33.2563 208.909 33.7676 208.909 34.7871 cv
208.909 40.4648 li
212.129 40.4648 li
212.988 40.4648 213.57 40.27 213.875 39.8784 cv
214.18 39.4873 214.392 38.7939 214.513 37.7983 cv
214.513 37.6626 214.629 37.5947 214.863 37.5947 cv
215.097 37.5947 215.213 37.6626 215.213 37.7983 cv
215.213 38.2231 215.187 38.7588 215.134 39.4043 cv
215.081 40.0239 215.055 40.5298 215.055 40.9194 cv
215.055 41.3193 215.081 41.8291 215.134 42.4492 cv
215.187 43.1113 215.213 43.6553 215.213 44.0801 cv
215.213 44.2158 215.097 44.2837 214.863 44.2837 cv
214.629 44.2837 214.513 44.2158 214.513 44.0801 cv
214.383 43.0435 214.158 42.3179 213.836 41.9023 cv
213.514 41.4873 212.944 41.2783 212.129 41.2783 cv
208.909 41.2783 li
208.909 47.5659 li
208.909 48.5713 209.402 49.0742 210.39 49.0742 cv
213.172 49.0742 li
214.185 49.0742 215.188 48.7451 216.184 48.0859 cv
217.179 47.4277 217.91 46.6055 218.379 45.6182 cv
218.413 45.542 218.485 45.5039 218.595 45.5039 cv
218.715 45.5039 218.821 45.5366 218.914 45.6001 cv
219.008 45.6636 219.055 45.7427 219.055 45.8359 cv
cp
@
245.308 32.6406 mo
245.308 32.8535 245.24 32.9683 245.104 32.9849 cv
244.041 33.1035 243.312 33.3013 242.916 33.5728 cv
242.521 33.8467 242.314 34.3706 242.298 35.146 cv
242.026 50.1973 li
242.026 50.3682 241.922 50.4526 241.713 50.4526 cv
241.608 50.4526 241.469 50.3848 241.296 50.2495 cv
228.151 35.3789 li
227.971 47.1875 li
227.962 47.2568 227.958 47.3203 227.958 47.3794 cv
227.958 48.0264 228.162 48.4839 228.57 48.7524 cv
228.979 49.0205 229.715 49.2183 230.777 49.3457 cv
230.913 49.3623 230.981 49.4766 230.981 49.6899 cv
230.981 49.9272 230.913 50.0459 230.777 50.0459 cv
230.334 50.0459 229.727 50.019 228.953 49.9668 cv
228.23 49.9131 227.671 49.8877 227.277 49.8877 cv
226.85 49.8877 226.273 49.9131 225.552 49.9668 cv
224.854 50.019 224.314 50.0459 223.932 50.0459 cv
223.795 50.0459 223.728 49.9272 223.728 49.6899 cv
223.728 49.4766 223.804 49.3623 223.957 49.3457 cv
225.012 49.2183 225.734 49.019 226.126 48.751 cv
226.517 48.4824 226.726 47.9614 226.751 47.1846 cv
227.202 35.1572 li
227.202 35.043 li
227.202 34.3521 227.003 33.8721 226.603 33.5981 cv
226.203 33.3267 225.459 33.1206 224.37 32.9849 cv
224.251 32.9849 224.192 32.8691 224.192 32.6348 cv
224.192 32.4019 224.26 32.2847 224.396 32.2847 cv
224.693 32.2847 225.11 32.3115 225.646 32.3638 cv
226.122 32.417 226.479 32.4429 226.718 32.4429 cv
227.016 32.4429 227.373 32.417 227.791 32.3638 cv
228.217 32.3115 228.584 32.2847 228.891 32.2847 cv
241.168 46.0361 li
241.168 35.1475 li
241.168 34.4229 240.962 33.9131 240.549 33.6177 cv
240.137 33.3242 239.373 33.1133 238.259 32.9849 cv
238.123 32.9683 238.056 32.8535 238.056 32.6406 cv
238.056 32.4033 238.123 32.2847 238.259 32.2847 cv
238.718 32.2847 239.331 32.3115 240.097 32.3638 cv
240.811 32.417 241.364 32.4429 241.759 32.4429 cv
242.186 32.4429 242.761 32.417 243.483 32.3638 cv
244.181 32.3115 244.721 32.2847 245.104 32.2847 cv
245.24 32.2847 245.308 32.4033 245.308 32.6406 cv
cp
f
245.308 32.6406 mo
245.308 32.8535 245.24 32.9683 245.104 32.9849 cv
244.041 33.1035 243.312 33.3013 242.916 33.5728 cv
242.521 33.8467 242.314 34.3706 242.298 35.146 cv
242.026 50.1973 li
242.026 50.3682 241.922 50.4526 241.713 50.4526 cv
241.608 50.4526 241.469 50.3848 241.296 50.2495 cv
228.151 35.3789 li
227.971 47.1875 li
227.962 47.2568 227.958 47.3203 227.958 47.3794 cv
227.958 48.0264 228.162 48.4839 228.57 48.7524 cv
228.979 49.0205 229.715 49.2183 230.777 49.3457 cv
230.913 49.3623 230.981 49.4766 230.981 49.6899 cv
230.981 49.9272 230.913 50.0459 230.777 50.0459 cv
230.334 50.0459 229.727 50.019 228.953 49.9668 cv
228.23 49.9131 227.671 49.8877 227.277 49.8877 cv
226.85 49.8877 226.273 49.9131 225.552 49.9668 cv
224.854 50.019 224.314 50.0459 223.932 50.0459 cv
223.795 50.0459 223.728 49.9272 223.728 49.6899 cv
223.728 49.4766 223.804 49.3623 223.957 49.3457 cv
225.012 49.2183 225.734 49.019 226.126 48.751 cv
226.517 48.4824 226.726 47.9614 226.751 47.1846 cv
227.202 35.1572 li
227.202 35.043 li
227.202 34.3521 227.003 33.8721 226.603 33.5981 cv
226.203 33.3267 225.459 33.1206 224.37 32.9849 cv
224.251 32.9849 224.192 32.8691 224.192 32.6348 cv
224.192 32.4019 224.26 32.2847 224.396 32.2847 cv
224.693 32.2847 225.11 32.3115 225.646 32.3638 cv
226.122 32.417 226.479 32.4429 226.718 32.4429 cv
227.016 32.4429 227.373 32.417 227.791 32.3638 cv
228.217 32.3115 228.584 32.2847 228.891 32.2847 cv
241.168 46.0361 li
241.168 35.1475 li
241.168 34.4229 240.962 33.9131 240.549 33.6177 cv
240.137 33.3242 239.373 33.1133 238.259 32.9849 cv
238.123 32.9683 238.056 32.8535 238.056 32.6406 cv
238.056 32.4033 238.123 32.2847 238.259 32.2847 cv
238.718 32.2847 239.331 32.3115 240.097 32.3638 cv
240.811 32.417 241.364 32.4429 241.759 32.4429 cv
242.186 32.4429 242.761 32.417 243.483 32.3638 cv
244.181 32.3115 244.721 32.2847 245.104 32.2847 cv
245.24 32.2847 245.308 32.4033 245.308 32.6406 cv
cp
@
265.766 45.8359 mo
265.076 47.3076 264.516 48.71 264.082 50.0459 cv
260.875 49.9399 258.592 49.8877 257.23 49.8877 cv
255.888 49.8877 253.607 49.9399 250.393 50.0459 cv
250.257 50.0459 250.188 49.9272 250.188 49.6899 cv
250.188 49.4766 250.257 49.3623 250.393 49.3457 cv
251.099 49.2607 251.638 49.1479 252.013 49.0063 cv
252.387 48.8667 252.647 48.6758 252.798 48.4385 cv
252.945 48.1987 253.021 47.7822 253.021 47.1846 cv
253.021 35.1572 li
253.021 34.5698 252.95 34.1543 252.811 33.9116 cv
252.67 33.6685 252.412 33.4751 252.038 33.3296 cv
251.664 33.1855 251.115 33.0698 250.393 32.9849 cv
250.257 32.9849 250.188 32.8691 250.188 32.6348 cv
250.188 32.4019 250.257 32.2847 250.393 32.2847 cv
252.536 32.3906 254.73 32.4429 256.978 32.4429 cv
259.242 32.4429 261.441 32.3906 263.578 32.2847 cv
263.772 33.6021 264.058 34.9028 264.433 36.188 cv
264.433 36.3574 264.281 36.4424 263.98 36.4424 cv
263.833 36.4424 263.743 36.3833 263.709 36.2646 cv
263.079 34.2588 261.736 33.2563 259.677 33.2563 cv
257.1 33.2563 li
256.112 33.2563 255.619 33.7676 255.619 34.7871 cv
255.619 40.4648 li
258.84 40.4648 li
259.698 40.4648 260.28 40.27 260.585 39.8784 cv
260.891 39.4873 261.104 38.7939 261.224 37.7983 cv
261.224 37.6626 261.341 37.5947 261.574 37.5947 cv
261.807 37.5947 261.924 37.6626 261.924 37.7983 cv
261.924 38.2231 261.897 38.7588 261.845 39.4043 cv
261.793 40.0239 261.766 40.5298 261.766 40.9194 cv
261.766 41.3193 261.793 41.8291 261.845 42.4492 cv
261.897 43.1113 261.924 43.6553 261.924 44.0801 cv
261.924 44.2158 261.807 44.2837 261.574 44.2837 cv
261.341 44.2837 261.224 44.2158 261.224 44.0801 cv
261.095 43.0435 260.869 42.3179 260.547 41.9023 cv
260.225 41.4873 259.656 41.2783 258.84 41.2783 cv
255.619 41.2783 li
255.619 47.5659 li
255.619 48.5713 256.112 49.0742 257.1 49.0742 cv
259.882 49.0742 li
260.895 49.0742 261.898 48.7451 262.895 48.0859 cv
263.89 47.4277 264.621 46.6055 265.089 45.6182 cv
265.123 45.542 265.196 45.5039 265.307 45.5039 cv
265.425 45.5039 265.531 45.5366 265.626 45.6001 cv
265.719 45.6636 265.766 45.7427 265.766 45.8359 cv
cp
f
265.766 45.8359 mo
265.076 47.3076 264.516 48.71 264.082 50.0459 cv
260.875 49.9399 258.592 49.8877 257.23 49.8877 cv
255.888 49.8877 253.607 49.9399 250.393 50.0459 cv
250.257 50.0459 250.188 49.9272 250.188 49.6899 cv
250.188 49.4766 250.257 49.3623 250.393 49.3457 cv
251.099 49.2607 251.638 49.1479 252.013 49.0063 cv
252.387 48.8667 252.647 48.6758 252.798 48.4385 cv
252.945 48.1987 253.021 47.7822 253.021 47.1846 cv
253.021 35.1572 li
253.021 34.5698 252.95 34.1543 252.811 33.9116 cv
252.67 33.6685 252.412 33.4751 252.038 33.3296 cv
251.664 33.1855 251.115 33.0698 250.393 32.9849 cv
250.257 32.9849 250.188 32.8691 250.188 32.6348 cv
250.188 32.4019 250.257 32.2847 250.393 32.2847 cv
252.536 32.3906 254.73 32.4429 256.978 32.4429 cv
259.242 32.4429 261.441 32.3906 263.578 32.2847 cv
263.772 33.6021 264.058 34.9028 264.433 36.188 cv
264.433 36.3574 264.281 36.4424 263.98 36.4424 cv
263.833 36.4424 263.743 36.3833 263.709 36.2646 cv
263.079 34.2588 261.736 33.2563 259.677 33.2563 cv
257.1 33.2563 li
256.112 33.2563 255.619 33.7676 255.619 34.7871 cv
255.619 40.4648 li
258.84 40.4648 li
259.698 40.4648 260.28 40.27 260.585 39.8784 cv
260.891 39.4873 261.104 38.7939 261.224 37.7983 cv
261.224 37.6626 261.341 37.5947 261.574 37.5947 cv
261.807 37.5947 261.924 37.6626 261.924 37.7983 cv
261.924 38.2231 261.897 38.7588 261.845 39.4043 cv
261.793 40.0239 261.766 40.5298 261.766 40.9194 cv
261.766 41.3193 261.793 41.8291 261.845 42.4492 cv
261.897 43.1113 261.924 43.6553 261.924 44.0801 cv
261.924 44.2158 261.807 44.2837 261.574 44.2837 cv
261.341 44.2837 261.224 44.2158 261.224 44.0801 cv
261.095 43.0435 260.869 42.3179 260.547 41.9023 cv
260.225 41.4873 259.656 41.2783 258.84 41.2783 cv
255.619 41.2783 li
255.619 47.5659 li
255.619 48.5713 256.112 49.0742 257.1 49.0742 cv
259.882 49.0742 li
260.895 49.0742 261.898 48.7451 262.895 48.0859 cv
263.89 47.4277 264.621 46.6055 265.089 45.6182 cv
265.123 45.542 265.196 45.5039 265.307 45.5039 cv
265.425 45.5039 265.531 45.5366 265.626 45.6001 cv
265.719 45.6636 265.766 45.7427 265.766 45.8359 cv
cp
@
282.116 36.8745 mo
282.116 34.3877 281.031 33.1431 278.862 33.1431 cv
278.146 33.1431 277.604 33.2012 277.233 33.3154 cv
276.863 33.4312 276.616 33.6123 276.493 33.8594 cv
276.371 34.1064 276.309 34.54 276.309 35.1631 cv
276.309 40.8486 li
276.803 40.9165 277.423 40.9507 278.173 40.9507 cv
279.543 40.9507 280.541 40.627 281.171 39.9805 cv
281.801 39.332 282.116 38.2983 282.116 36.8745 cv
cp
288.624 49.6899 mo
288.624 49.9272 288.557 50.0459 288.419 50.0459 cv
288.104 50.0459 287.59 50.0146 286.874 49.9541 cv
286.354 49.9102 286.01 49.8877 285.839 49.8877 cv
285.594 49.8877 285.205 49.9131 284.678 49.9668 cv
284.149 50.019 283.762 50.0459 283.515 50.0459 cv
279.65 43.7344 li
279.106 42.8628 278.666 42.3037 278.331 42.0566 cv
277.995 41.8091 277.32 41.6851 276.309 41.6851 cv
276.309 47.1846 li
276.309 47.772 276.382 48.189 276.531 48.4316 cv
276.68 48.6748 276.944 48.8667 277.322 49.0063 cv
277.701 49.1479 278.243 49.2607 278.949 49.3457 cv
279.094 49.3623 279.166 49.4766 279.166 49.6899 cv
279.166 49.9272 279.098 50.0459 278.962 50.0459 cv
278.392 50.0459 277.713 50.019 276.922 49.9668 cv
276.164 49.9131 275.527 49.8877 275.009 49.8877 cv
274.491 49.8877 273.858 49.9131 273.111 49.9668 cv
272.328 50.019 271.652 50.0459 271.082 50.0459 cv
270.946 50.0459 270.878 49.9272 270.878 49.6899 cv
270.878 49.4766 270.946 49.3623 271.082 49.3457 cv
271.788 49.2607 272.327 49.1479 272.701 49.0063 cv
273.076 48.8667 273.337 48.6758 273.486 48.4385 cv
273.635 48.1987 273.71 47.7822 273.71 47.1846 cv
273.71 35.1572 li
273.71 34.5698 273.64 34.1543 273.499 33.9116 cv
273.359 33.6685 273.103 33.4751 272.727 33.3296 cv
272.354 33.1855 271.805 33.0698 271.082 32.9849 cv
270.946 32.9849 270.878 32.8691 270.878 32.6348 cv
270.878 32.4019 270.946 32.2847 271.082 32.2847 cv
271.652 32.2847 272.328 32.3115 273.111 32.3638 cv
273.858 32.417 274.492 32.4429 275.011 32.4429 cv
275.529 32.4429 276.167 32.417 276.923 32.3638 cv
277.714 32.3115 278.394 32.2847 278.964 32.2847 cv
280.859 32.2847 282.325 32.6816 283.361 33.4751 cv
284.399 34.2686 284.918 35.3848 284.918 36.8208 cv
284.918 37.7275 284.575 38.5693 283.89 39.3462 cv
283.205 40.1245 282.278 40.7217 281.11 41.1426 cv
285.034 47.5488 li
285.376 48.1113 285.816 48.5234 286.354 48.792 cv
286.893 49.0586 287.59 49.2437 288.444 49.3457 cv
288.564 49.3623 288.624 49.4766 288.624 49.6899 cv
cp
f
282.116 36.8745 mo
282.116 34.3877 281.031 33.1431 278.862 33.1431 cv
278.146 33.1431 277.604 33.2012 277.233 33.3154 cv
276.863 33.4312 276.616 33.6123 276.493 33.8594 cv
276.371 34.1064 276.309 34.54 276.309 35.1631 cv
276.309 40.8486 li
276.803 40.9165 277.423 40.9507 278.173 40.9507 cv
279.543 40.9507 280.541 40.627 281.171 39.9805 cv
281.801 39.332 282.116 38.2983 282.116 36.8745 cv
cp
288.624 49.6899 mo
288.624 49.9272 288.557 50.0459 288.419 50.0459 cv
288.104 50.0459 287.59 50.0146 286.874 49.9541 cv
286.354 49.9102 286.01 49.8877 285.839 49.8877 cv
285.594 49.8877 285.205 49.9131 284.678 49.9668 cv
284.149 50.019 283.762 50.0459 283.515 50.0459 cv
279.65 43.7344 li
279.106 42.8628 278.666 42.3037 278.331 42.0566 cv
277.995 41.8091 277.32 41.6851 276.309 41.6851 cv
276.309 47.1846 li
276.309 47.772 276.382 48.189 276.531 48.4316 cv
276.68 48.6748 276.944 48.8667 277.322 49.0063 cv
277.701 49.1479 278.243 49.2607 278.949 49.3457 cv
279.094 49.3623 279.166 49.4766 279.166 49.6899 cv
279.166 49.9272 279.098 50.0459 278.962 50.0459 cv
278.392 50.0459 277.713 50.019 276.922 49.9668 cv
276.164 49.9131 275.527 49.8877 275.009 49.8877 cv
274.491 49.8877 273.858 49.9131 273.111 49.9668 cv
272.328 50.019 271.652 50.0459 271.082 50.0459 cv
270.946 50.0459 270.878 49.9272 270.878 49.6899 cv
270.878 49.4766 270.946 49.3623 271.082 49.3457 cv
271.788 49.2607 272.327 49.1479 272.701 49.0063 cv
273.076 48.8667 273.337 48.6758 273.486 48.4385 cv
273.635 48.1987 273.71 47.7822 273.71 47.1846 cv
273.71 35.1572 li
273.71 34.5698 273.64 34.1543 273.499 33.9116 cv
273.359 33.6685 273.103 33.4751 272.727 33.3296 cv
272.354 33.1855 271.805 33.0698 271.082 32.9849 cv
270.946 32.9849 270.878 32.8691 270.878 32.6348 cv
270.878 32.4019 270.946 32.2847 271.082 32.2847 cv
271.652 32.2847 272.328 32.3115 273.111 32.3638 cv
273.858 32.417 274.492 32.4429 275.011 32.4429 cv
275.529 32.4429 276.167 32.417 276.923 32.3638 cv
277.714 32.3115 278.394 32.2847 278.964 32.2847 cv
280.859 32.2847 282.325 32.6816 283.361 33.4751 cv
284.399 34.2686 284.918 35.3848 284.918 36.8208 cv
284.918 37.7275 284.575 38.5693 283.89 39.3462 cv
283.205 40.1245 282.278 40.7217 281.11 41.1426 cv
285.034 47.5488 li
285.376 48.1113 285.816 48.5234 286.354 48.792 cv
286.893 49.0586 287.59 49.2437 288.444 49.3457 cv
288.564 49.3623 288.624 49.4766 288.624 49.6899 cv
cp
@
303.051 41.2686 mo
303.051 41.7275 302.948 41.9561 302.744 41.9561 cv
290.615 41.9561 li
290.396 41.9561 290.283 41.7275 290.283 41.2686 cv
290.283 40.7925 290.387 40.5552 290.59 40.5552 cv
302.744 40.5552 li
302.948 40.5552 303.051 40.7925 303.051 41.2686 cv
cp
f
303.051 41.2686 mo
303.051 41.7275 302.948 41.9561 302.744 41.9561 cv
290.615 41.9561 li
290.396 41.9561 290.283 41.7275 290.283 41.2686 cv
290.283 40.7925 290.387 40.5552 290.59 40.5552 cv
302.744 40.5552 li
302.948 40.5552 303.051 40.7925 303.051 41.2686 cv
cp
@
333.716 32.584 mo
333.716 32.6855 333.684 32.7759 333.619 32.8608 cv
333.556 32.9424 333.485 32.9849 333.409 32.9849 cv
332.779 33.0444 332.264 33.249 331.864 33.5952 cv
331.463 33.9424 331.051 34.605 330.625 35.582 cv
324.111 50.2495 li
324.068 50.3848 323.948 50.4526 323.75 50.4526 cv
323.595 50.4526 323.475 50.3848 323.389 50.2495 cv
319.749 42.6187 li
315.547 50.2495 li
315.463 50.3848 315.344 50.4526 315.193 50.4526 cv
315.007 50.4526 314.884 50.3848 314.824 50.2495 cv
308.434 35.582 li
308.034 34.6655 307.611 34.0244 307.171 33.6602 cv
306.728 33.2959 306.111 33.0713 305.32 32.9849 cv
305.253 32.9849 305.188 32.9497 305.129 32.8789 cv
305.069 32.8086 305.04 32.7266 305.04 32.6348 cv
305.04 32.4019 305.107 32.2847 305.244 32.2847 cv
305.813 32.2847 306.409 32.3115 307.031 32.3638 cv
307.61 32.417 308.154 32.4429 308.665 32.4429 cv
309.185 32.4429 309.798 32.417 310.504 32.3638 cv
311.244 32.3115 311.897 32.2847 312.469 32.2847 cv
312.604 32.2847 312.673 32.4019 312.673 32.6348 cv
312.673 32.8691 312.63 32.9849 312.545 32.9849 cv
311.976 33.0273 311.526 33.1743 311.199 33.4229 cv
310.871 33.6714 310.707 33.9976 310.707 34.4004 cv
310.707 34.6064 310.775 34.8633 310.912 35.1729 cv
316.125 47.1367 li
319.188 41.4419 li
316.394 35.582 li
315.891 34.5288 315.479 33.8496 315.156 33.5444 cv
314.833 33.2393 314.344 33.0527 313.688 32.9849 cv
313.629 32.9849 313.571 32.9497 313.517 32.8789 cv
313.461 32.8086 313.434 32.7266 313.434 32.6348 cv
313.434 32.4019 313.492 32.2847 313.612 32.2847 cv
314.182 32.2847 314.706 32.3115 315.182 32.3638 cv
315.641 32.417 316.129 32.4429 316.647 32.4429 cv
317.159 32.4429 317.698 32.417 318.268 32.3638 cv
318.854 32.3115 319.433 32.2847 320.002 32.2847 cv
320.138 32.2847 320.207 32.4019 320.207 32.6348 cv
320.207 32.8691 320.163 32.9849 320.078 32.9849 cv
318.938 33.0625 318.369 33.3887 318.369 33.9639 cv
318.369 34.2222 318.501 34.6206 318.765 35.1631 cv
320.612 38.917 li
322.454 35.4805 li
322.708 34.9922 322.836 34.5811 322.836 34.2446 cv
322.836 33.4565 322.266 33.0361 321.126 32.9849 cv
321.024 32.9849 320.974 32.8691 320.974 32.6348 cv
320.974 32.5513 320.999 32.4722 321.05 32.3975 cv
321.101 32.3228 321.151 32.2847 321.204 32.2847 cv
321.61 32.2847 322.113 32.3115 322.709 32.3638 cv
323.278 32.417 323.746 32.4429 324.111 32.4429 cv
324.374 32.4429 324.762 32.4199 325.272 32.3765 cv
325.918 32.3154 326.459 32.2847 326.893 32.2847 cv
326.994 32.2847 327.045 32.3848 327.045 32.584 cv
327.045 32.8521 326.952 32.9849 326.766 32.9849 cv
326.102 33.0527 325.568 33.2378 325.164 33.5386 cv
324.76 33.8379 324.256 34.52 323.652 35.582 cv
321.201 40.123 li
324.521 46.8755 li
329.428 35.4819 li
329.598 35.061 329.684 34.6758 329.684 34.3237 cv
329.684 33.4824 329.113 33.0361 327.973 32.9849 cv
327.87 32.9849 327.819 32.8691 327.819 32.6348 cv
327.819 32.4019 327.896 32.2847 328.049 32.2847 cv
328.466 32.2847 328.96 32.3115 329.529 32.3638 cv
330.057 32.417 330.5 32.4429 330.857 32.4429 cv
331.231 32.4429 331.665 32.417 332.158 32.3638 cv
332.669 32.3115 333.128 32.2847 333.536 32.2847 cv
333.656 32.2847 333.716 32.3848 333.716 32.584 cv
cp
f
333.716 32.584 mo
333.716 32.6855 333.684 32.7759 333.619 32.8608 cv
333.556 32.9424 333.485 32.9849 333.409 32.9849 cv
332.779 33.0444 332.264 33.249 331.864 33.5952 cv
331.463 33.9424 331.051 34.605 330.625 35.582 cv
324.111 50.2495 li
324.068 50.3848 323.948 50.4526 323.75 50.4526 cv
323.595 50.4526 323.475 50.3848 323.389 50.2495 cv
319.749 42.6187 li
315.547 50.2495 li
315.463 50.3848 315.344 50.4526 315.193 50.4526 cv
315.007 50.4526 314.884 50.3848 314.824 50.2495 cv
308.434 35.582 li
308.034 34.6655 307.611 34.0244 307.171 33.6602 cv
306.728 33.2959 306.111 33.0713 305.32 32.9849 cv
305.253 32.9849 305.188 32.9497 305.129 32.8789 cv
305.069 32.8086 305.04 32.7266 305.04 32.6348 cv
305.04 32.4019 305.107 32.2847 305.244 32.2847 cv
305.813 32.2847 306.409 32.3115 307.031 32.3638 cv
307.61 32.417 308.154 32.4429 308.665 32.4429 cv
309.185 32.4429 309.798 32.417 310.504 32.3638 cv
311.244 32.3115 311.897 32.2847 312.469 32.2847 cv
312.604 32.2847 312.673 32.4019 312.673 32.6348 cv
312.673 32.8691 312.63 32.9849 312.545 32.9849 cv
311.976 33.0273 311.526 33.1743 311.199 33.4229 cv
310.871 33.6714 310.707 33.9976 310.707 34.4004 cv
310.707 34.6064 310.775 34.8633 310.912 35.1729 cv
316.125 47.1367 li
319.188 41.4419 li
316.394 35.582 li
315.891 34.5288 315.479 33.8496 315.156 33.5444 cv
314.833 33.2393 314.344 33.0527 313.688 32.9849 cv
313.629 32.9849 313.571 32.9497 313.517 32.8789 cv
313.461 32.8086 313.434 32.7266 313.434 32.6348 cv
313.434 32.4019 313.492 32.2847 313.612 32.2847 cv
314.182 32.2847 314.706 32.3115 315.182 32.3638 cv
315.641 32.417 316.129 32.4429 316.647 32.4429 cv
317.159 32.4429 317.698 32.417 318.268 32.3638 cv
318.854 32.3115 319.433 32.2847 320.002 32.2847 cv
320.138 32.2847 320.207 32.4019 320.207 32.6348 cv
320.207 32.8691 320.163 32.9849 320.078 32.9849 cv
318.938 33.0625 318.369 33.3887 318.369 33.9639 cv
318.369 34.2222 318.501 34.6206 318.765 35.1631 cv
320.612 38.917 li
322.454 35.4805 li
322.708 34.9922 322.836 34.5811 322.836 34.2446 cv
322.836 33.4565 322.266 33.0361 321.126 32.9849 cv
321.024 32.9849 320.974 32.8691 320.974 32.6348 cv
320.974 32.5513 320.999 32.4722 321.05 32.3975 cv
321.101 32.3228 321.151 32.2847 321.204 32.2847 cv
321.61 32.2847 322.113 32.3115 322.709 32.3638 cv
323.278 32.417 323.746 32.4429 324.111 32.4429 cv
324.374 32.4429 324.762 32.4199 325.272 32.3765 cv
325.918 32.3154 326.459 32.2847 326.893 32.2847 cv
326.994 32.2847 327.045 32.3848 327.045 32.584 cv
327.045 32.8521 326.952 32.9849 326.766 32.9849 cv
326.102 33.0527 325.568 33.2378 325.164 33.5386 cv
324.76 33.8379 324.256 34.52 323.652 35.582 cv
321.201 40.123 li
324.521 46.8755 li
329.428 35.4819 li
329.598 35.061 329.684 34.6758 329.684 34.3237 cv
329.684 33.4824 329.113 33.0361 327.973 32.9849 cv
327.87 32.9849 327.819 32.8691 327.819 32.6348 cv
327.819 32.4019 327.896 32.2847 328.049 32.2847 cv
328.466 32.2847 328.96 32.3115 329.529 32.3638 cv
330.057 32.417 330.5 32.4429 330.857 32.4429 cv
331.231 32.4429 331.665 32.417 332.158 32.3638 cv
332.669 32.3115 333.128 32.2847 333.536 32.2847 cv
333.656 32.2847 333.716 32.3848 333.716 32.584 cv
cp
@
345.629 42.1143 mo
343.375 35.582 li
340.951 42.1143 li
345.629 42.1143 li
cp
353.352 49.6899 mo
353.352 49.9272 353.283 50.0459 353.146 50.0459 cv
352.558 50.0459 351.893 50.019 351.15 49.9668 cv
350.511 49.9131 349.965 49.8877 349.513 49.8877 cv
348.993 49.8877 348.349 49.9131 347.58 49.9668 cv
346.772 50.019 346.083 50.0459 345.515 50.0459 cv
345.377 50.0459 345.31 49.9287 345.31 49.6958 cv
345.31 49.4629 345.36 49.3457 345.463 49.3457 cv
346.219 49.3115 346.764 49.21 347.096 49.043 cv
347.428 48.8765 347.595 48.6167 347.595 48.2651 cv
347.595 48.042 347.509 47.686 347.338 47.1973 cv
345.898 42.9277 li
340.645 42.9277 li
339.187 46.8794 li
338.999 47.4106 338.906 47.8213 338.906 48.1123 cv
338.906 48.8652 339.595 49.2778 340.973 49.3457 cv
341.074 49.3457 341.126 49.4629 341.126 49.6958 cv
341.126 49.9287 341.057 50.0459 340.921 50.0459 cv
340.411 50.0459 339.845 50.019 339.225 49.9668 cv
338.639 49.9131 338.116 49.8877 337.657 49.8877 cv
337.293 49.8877 336.834 49.9131 336.282 49.9668 cv
335.704 50.019 335.211 50.0459 334.803 50.0459 cv
334.676 50.0459 334.612 49.9399 334.612 49.7266 cv
334.612 49.4893 334.71 49.3623 334.906 49.3457 cv
335.611 49.2778 336.17 49.0815 336.583 48.7578 cv
336.995 48.4346 337.423 47.7734 337.863 46.7764 cv
343.832 32.1265 li
343.883 31.9907 344.003 31.9229 344.192 31.9229 cv
344.397 31.9229 344.527 31.9863 344.578 32.1152 cv
349.852 46.7764 li
350.15 47.6025 350.552 48.2129 351.059 48.604 cv
351.566 48.9966 352.244 49.2437 353.096 49.3457 cv
353.267 49.3623 353.352 49.4766 353.352 49.6899 cv
cp
f
345.629 42.1143 mo
343.375 35.582 li
340.951 42.1143 li
345.629 42.1143 li
cp
353.352 49.6899 mo
353.352 49.9272 353.283 50.0459 353.146 50.0459 cv
352.558 50.0459 351.893 50.019 351.15 49.9668 cv
350.511 49.9131 349.965 49.8877 349.513 49.8877 cv
348.993 49.8877 348.349 49.9131 347.58 49.9668 cv
346.772 50.019 346.083 50.0459 345.515 50.0459 cv
345.377 50.0459 345.31 49.9287 345.31 49.6958 cv
345.31 49.4629 345.36 49.3457 345.463 49.3457 cv
346.219 49.3115 346.764 49.21 347.096 49.043 cv
347.428 48.8765 347.595 48.6167 347.595 48.2651 cv
347.595 48.042 347.509 47.686 347.338 47.1973 cv
345.898 42.9277 li
340.645 42.9277 li
339.187 46.8794 li
338.999 47.4106 338.906 47.8213 338.906 48.1123 cv
338.906 48.8652 339.595 49.2778 340.973 49.3457 cv
341.074 49.3457 341.126 49.4629 341.126 49.6958 cv
341.126 49.9287 341.057 50.0459 340.921 50.0459 cv
340.411 50.0459 339.845 50.019 339.225 49.9668 cv
338.639 49.9131 338.116 49.8877 337.657 49.8877 cv
337.293 49.8877 336.834 49.9131 336.282 49.9668 cv
335.704 50.019 335.211 50.0459 334.803 50.0459 cv
334.676 50.0459 334.612 49.9399 334.612 49.7266 cv
334.612 49.4893 334.71 49.3623 334.906 49.3457 cv
335.611 49.2778 336.17 49.0815 336.583 48.7578 cv
336.995 48.4346 337.423 47.7734 337.863 46.7764 cv
343.832 32.1265 li
343.883 31.9907 344.003 31.9229 344.192 31.9229 cv
344.397 31.9229 344.527 31.9863 344.578 32.1152 cv
349.852 46.7764 li
350.15 47.6025 350.552 48.2129 351.059 48.604 cv
351.566 48.9966 352.244 49.2437 353.096 49.3457 cv
353.267 49.3623 353.352 49.4766 353.352 49.6899 cv
cp
@
373.672 36.4932 mo
373.672 36.6558 373.52 36.7363 373.213 36.7363 cv
373.076 36.7363 372.991 36.6768 372.957 36.5566 cv
372.592 35.355 372.068 34.5049 371.388 34.0049 cv
370.707 33.5063 369.699 33.2563 368.364 33.2563 cv
367.164 33.2563 li
366.747 33.2563 366.462 33.3242 366.308 33.4609 cv
366.155 33.5967 366.079 33.8521 366.079 34.2266 cv
366.079 47.1875 li
366.079 47.7749 366.152 48.1904 366.303 48.4331 cv
366.45 48.6758 366.715 48.8667 367.093 49.0063 cv
367.472 49.1479 368.014 49.2607 368.721 49.3457 cv
368.855 49.3623 368.924 49.4766 368.924 49.6899 cv
368.924 49.9272 368.855 50.0459 368.721 50.0459 cv
368.149 50.0459 367.469 50.019 366.678 49.9668 cv
365.927 49.9131 365.298 49.8877 364.793 49.8877 cv
364.269 49.8877 363.627 49.9131 362.867 49.9668 cv
362.076 50.019 361.397 50.0459 360.827 50.0459 cv
360.691 50.0459 360.623 49.9272 360.623 49.6899 cv
360.623 49.4766 360.691 49.3623 360.827 49.3457 cv
361.856 49.2266 362.556 49.0347 362.926 48.7705 cv
363.296 48.5063 363.48 47.9785 363.48 47.1875 cv
363.48 34.2266 li
363.48 33.8521 363.404 33.5967 363.252 33.4609 cv
363.098 33.3242 362.81 33.2563 362.385 33.2563 cv
361.391 33.2563 li
360.192 33.2563 359.105 33.5615 358.129 34.1714 cv
357.152 34.7813 356.515 35.5723 356.219 36.5439 cv
356.176 36.6729 356.081 36.7363 355.938 36.7363 cv
355.647 36.7363 355.504 36.6431 355.504 36.4551 cv
355.981 35.167 356.433 33.7095 356.859 32.0811 cv
358.017 32.3228 360.663 32.4429 364.798 32.4429 cv
369.045 32.4429 371.745 32.3228 372.903 32.0811 cv
373.022 33.1899 373.279 34.6602 373.672 36.4932 cv
cp
f
373.672 36.4932 mo
373.672 36.6558 373.52 36.7363 373.213 36.7363 cv
373.076 36.7363 372.991 36.6768 372.957 36.5566 cv
372.592 35.355 372.068 34.5049 371.388 34.0049 cv
370.707 33.5063 369.699 33.2563 368.364 33.2563 cv
367.164 33.2563 li
366.747 33.2563 366.462 33.3242 366.308 33.4609 cv
366.155 33.5967 366.079 33.8521 366.079 34.2266 cv
366.079 47.1875 li
366.079 47.7749 366.152 48.1904 366.303 48.4331 cv
366.45 48.6758 366.715 48.8667 367.093 49.0063 cv
367.472 49.1479 368.014 49.2607 368.721 49.3457 cv
368.855 49.3623 368.924 49.4766 368.924 49.6899 cv
368.924 49.9272 368.855 50.0459 368.721 50.0459 cv
368.149 50.0459 367.469 50.019 366.678 49.9668 cv
365.927 49.9131 365.298 49.8877 364.793 49.8877 cv
364.269 49.8877 363.627 49.9131 362.867 49.9668 cv
362.076 50.019 361.397 50.0459 360.827 50.0459 cv
360.691 50.0459 360.623 49.9272 360.623 49.6899 cv
360.623 49.4766 360.691 49.3623 360.827 49.3457 cv
361.856 49.2266 362.556 49.0347 362.926 48.7705 cv
363.296 48.5063 363.48 47.9785 363.48 47.1875 cv
363.48 34.2266 li
363.48 33.8521 363.404 33.5967 363.252 33.4609 cv
363.098 33.3242 362.81 33.2563 362.385 33.2563 cv
361.391 33.2563 li
360.192 33.2563 359.105 33.5615 358.129 34.1714 cv
357.152 34.7813 356.515 35.5723 356.219 36.5439 cv
356.176 36.6729 356.081 36.7363 355.938 36.7363 cv
355.647 36.7363 355.504 36.6431 355.504 36.4551 cv
355.981 35.167 356.433 33.7095 356.859 32.0811 cv
358.017 32.3228 360.663 32.4429 364.798 32.4429 cv
369.045 32.4429 371.745 32.3228 372.903 32.0811 cv
373.022 33.1899 373.279 34.6602 373.672 36.4932 cv
cp
@
394.062 45.8359 mo
393.372 47.3076 392.812 48.71 392.378 50.0459 cv
389.171 49.9399 386.889 49.8877 385.527 49.8877 cv
384.183 49.8877 381.903 49.9399 378.688 50.0459 cv
378.553 50.0459 378.485 49.9272 378.485 49.6899 cv
378.485 49.4766 378.553 49.3623 378.688 49.3457 cv
379.395 49.2607 379.935 49.1479 380.309 49.0063 cv
380.683 48.8667 380.944 48.6758 381.094 48.4385 cv
381.242 48.1987 381.316 47.7822 381.316 47.1846 cv
381.316 35.1572 li
381.316 34.5698 381.246 34.1543 381.106 33.9116 cv
380.965 33.6685 380.708 33.4751 380.335 33.3296 cv
379.96 33.1855 379.411 33.0698 378.688 32.9849 cv
378.553 32.9849 378.485 32.8691 378.485 32.6348 cv
378.485 32.4019 378.553 32.2847 378.688 32.2847 cv
380.832 32.3906 383.027 32.4429 385.274 32.4429 cv
387.538 32.4429 389.737 32.3906 391.874 32.2847 cv
392.069 33.6021 392.354 34.9028 392.729 36.188 cv
392.729 36.3574 392.577 36.4424 392.276 36.4424 cv
392.13 36.4424 392.039 36.3833 392.005 36.2646 cv
391.375 34.2588 390.032 33.2563 387.973 33.2563 cv
385.396 33.2563 li
384.408 33.2563 383.916 33.7676 383.916 34.7871 cv
383.916 40.4648 li
387.136 40.4648 li
387.994 40.4648 388.576 40.27 388.881 39.8784 cv
389.187 39.4873 389.399 38.7939 389.52 37.7983 cv
389.52 37.6626 389.637 37.5947 389.87 37.5947 cv
390.103 37.5947 390.22 37.6626 390.22 37.7983 cv
390.22 38.2231 390.193 38.7588 390.141 39.4043 cv
390.089 40.0239 390.062 40.5298 390.062 40.9194 cv
390.062 41.3193 390.089 41.8291 390.141 42.4492 cv
390.193 43.1113 390.22 43.6553 390.22 44.0801 cv
390.22 44.2158 390.103 44.2837 389.87 44.2837 cv
389.637 44.2837 389.52 44.2158 389.52 44.0801 cv
389.391 43.0435 389.165 42.3179 388.843 41.9023 cv
388.521 41.4873 387.952 41.2783 387.136 41.2783 cv
383.916 41.2783 li
383.916 47.5659 li
383.916 48.5713 384.408 49.0742 385.396 49.0742 cv
388.178 49.0742 li
389.19 49.0742 390.194 48.7451 391.19 48.0859 cv
392.187 47.4277 392.918 46.6055 393.385 45.6182 cv
393.419 45.542 393.492 45.5039 393.603 45.5039 cv
393.722 45.5039 393.827 45.5366 393.922 45.6001 cv
394.015 45.6636 394.062 45.7427 394.062 45.8359 cv
cp
f
394.062 45.8359 mo
393.372 47.3076 392.812 48.71 392.378 50.0459 cv
389.171 49.9399 386.889 49.8877 385.527 49.8877 cv
384.183 49.8877 381.903 49.9399 378.688 50.0459 cv
378.553 50.0459 378.485 49.9272 378.485 49.6899 cv
378.485 49.4766 378.553 49.3623 378.688 49.3457 cv
379.395 49.2607 379.935 49.1479 380.309 49.0063 cv
380.683 48.8667 380.944 48.6758 381.094 48.4385 cv
381.242 48.1987 381.316 47.7822 381.316 47.1846 cv
381.316 35.1572 li
381.316 34.5698 381.246 34.1543 381.106 33.9116 cv
380.965 33.6685 380.708 33.4751 380.335 33.3296 cv
379.96 33.1855 379.411 33.0698 378.688 32.9849 cv
378.553 32.9849 378.485 32.8691 378.485 32.6348 cv
378.485 32.4019 378.553 32.2847 378.688 32.2847 cv
380.832 32.3906 383.027 32.4429 385.274 32.4429 cv
387.538 32.4429 389.737 32.3906 391.874 32.2847 cv
392.069 33.6021 392.354 34.9028 392.729 36.188 cv
392.729 36.3574 392.577 36.4424 392.276 36.4424 cv
392.13 36.4424 392.039 36.3833 392.005 36.2646 cv
391.375 34.2588 390.032 33.2563 387.973 33.2563 cv
385.396 33.2563 li
384.408 33.2563 383.916 33.7676 383.916 34.7871 cv
383.916 40.4648 li
387.136 40.4648 li
387.994 40.4648 388.576 40.27 388.881 39.8784 cv
389.187 39.4873 389.399 38.7939 389.52 37.7983 cv
389.52 37.6626 389.637 37.5947 389.87 37.5947 cv
390.103 37.5947 390.22 37.6626 390.22 37.7983 cv
390.22 38.2231 390.193 38.7588 390.141 39.4043 cv
390.089 40.0239 390.062 40.5298 390.062 40.9194 cv
390.062 41.3193 390.089 41.8291 390.141 42.4492 cv
390.193 43.1113 390.22 43.6553 390.22 44.0801 cv
390.22 44.2158 390.103 44.2837 389.87 44.2837 cv
389.637 44.2837 389.52 44.2158 389.52 44.0801 cv
389.391 43.0435 389.165 42.3179 388.843 41.9023 cv
388.521 41.4873 387.952 41.2783 387.136 41.2783 cv
383.916 41.2783 li
383.916 47.5659 li
383.916 48.5713 384.408 49.0742 385.396 49.0742 cv
388.178 49.0742 li
389.19 49.0742 390.194 48.7451 391.19 48.0859 cv
392.187 47.4277 392.918 46.6055 393.385 45.6182 cv
393.419 45.542 393.492 45.5039 393.603 45.5039 cv
393.722 45.5039 393.827 45.5366 393.922 45.6001 cv
394.015 45.6636 394.062 45.7427 394.062 45.8359 cv
cp
@
410.414 36.8745 mo
410.414 34.3877 409.329 33.1431 407.158 33.1431 cv
406.443 33.1431 405.901 33.2012 405.531 33.3154 cv
405.161 33.4312 404.914 33.6123 404.791 33.8594 cv
404.667 34.1064 404.606 34.54 404.606 35.1631 cv
404.606 40.8486 li
405.099 40.9165 405.721 40.9507 406.469 40.9507 cv
407.839 40.9507 408.839 40.627 409.469 39.9805 cv
410.099 39.332 410.414 38.2983 410.414 36.8745 cv
cp
416.922 49.6899 mo
416.922 49.9272 416.854 50.0459 416.717 50.0459 cv
416.402 50.0459 415.887 50.0146 415.172 49.9541 cv
414.652 49.9102 414.308 49.8877 414.138 49.8877 cv
413.89 49.8877 413.502 49.9131 412.975 49.9668 cv
412.446 50.019 412.059 50.0459 411.813 50.0459 cv
407.947 43.7344 li
407.404 42.8628 406.963 42.3037 406.627 42.0566 cv
406.291 41.8091 405.619 41.6851 404.606 41.6851 cv
404.606 47.1846 li
404.606 47.772 404.681 48.189 404.829 48.4316 cv
404.978 48.6748 405.242 48.8667 405.62 49.0063 cv
405.999 49.1479 406.541 49.2607 407.246 49.3457 cv
407.392 49.3623 407.463 49.4766 407.463 49.6899 cv
407.463 49.9272 407.396 50.0459 407.26 50.0459 cv
406.689 50.0459 406.009 50.019 405.218 49.9668 cv
404.462 49.9131 403.825 49.8877 403.307 49.8877 cv
402.788 49.8877 402.156 49.9131 401.407 49.9668 cv
400.625 50.019 399.949 50.0459 399.379 50.0459 cv
399.243 50.0459 399.176 49.9272 399.176 49.6899 cv
399.176 49.4766 399.243 49.3623 399.379 49.3457 cv
400.085 49.2607 400.625 49.1479 400.999 49.0063 cv
401.373 48.8667 401.635 48.6758 401.784 48.4385 cv
401.933 48.1987 402.008 47.7822 402.008 47.1846 cv
402.008 35.1572 li
402.008 34.5698 401.937 34.1543 401.797 33.9116 cv
401.656 33.6685 401.398 33.4751 401.025 33.3296 cv
400.65 33.1855 400.103 33.0698 399.379 32.9849 cv
399.243 32.9849 399.176 32.8691 399.176 32.6348 cv
399.176 32.4019 399.243 32.2847 399.379 32.2847 cv
399.949 32.2847 400.625 32.3115 401.407 32.3638 cv
402.156 32.417 402.79 32.4429 403.309 32.4429 cv
403.826 32.4429 404.464 32.417 405.221 32.3638 cv
406.012 32.3115 406.69 32.2847 407.262 32.2847 cv
409.156 32.2847 410.623 32.6816 411.661 33.4751 cv
412.697 34.2686 413.216 35.3848 413.216 36.8208 cv
413.216 37.7275 412.873 38.5693 412.188 39.3462 cv
411.503 40.1245 410.576 40.7217 409.408 41.1426 cv
413.332 47.5488 li
413.674 48.1113 414.112 48.5234 414.652 48.792 cv
415.19 49.0586 415.887 49.2437 416.742 49.3457 cv
416.861 49.3623 416.922 49.4766 416.922 49.6899 cv
cp
f
410.414 36.8745 mo
410.414 34.3877 409.329 33.1431 407.158 33.1431 cv
406.443 33.1431 405.901 33.2012 405.531 33.3154 cv
405.161 33.4312 404.914 33.6123 404.791 33.8594 cv
404.667 34.1064 404.606 34.54 404.606 35.1631 cv
404.606 40.8486 li
405.099 40.9165 405.721 40.9507 406.469 40.9507 cv
407.839 40.9507 408.839 40.627 409.469 39.9805 cv
410.099 39.332 410.414 38.2983 410.414 36.8745 cv
cp
416.922 49.6899 mo
416.922 49.9272 416.854 50.0459 416.717 50.0459 cv
416.402 50.0459 415.887 50.0146 415.172 49.9541 cv
414.652 49.9102 414.308 49.8877 414.138 49.8877 cv
413.89 49.8877 413.502 49.9131 412.975 49.9668 cv
412.446 50.019 412.059 50.0459 411.813 50.0459 cv
407.947 43.7344 li
407.404 42.8628 406.963 42.3037 406.627 42.0566 cv
406.291 41.8091 405.619 41.6851 404.606 41.6851 cv
404.606 47.1846 li
404.606 47.772 404.681 48.189 404.829 48.4316 cv
404.978 48.6748 405.242 48.8667 405.62 49.0063 cv
405.999 49.1479 406.541 49.2607 407.246 49.3457 cv
407.392 49.3623 407.463 49.4766 407.463 49.6899 cv
407.463 49.9272 407.396 50.0459 407.26 50.0459 cv
406.689 50.0459 406.009 50.019 405.218 49.9668 cv
404.462 49.9131 403.825 49.8877 403.307 49.8877 cv
402.788 49.8877 402.156 49.9131 401.407 49.9668 cv
400.625 50.019 399.949 50.0459 399.379 50.0459 cv
399.243 50.0459 399.176 49.9272 399.176 49.6899 cv
399.176 49.4766 399.243 49.3623 399.379 49.3457 cv
400.085 49.2607 400.625 49.1479 400.999 49.0063 cv
401.373 48.8667 401.635 48.6758 401.784 48.4385 cv
401.933 48.1987 402.008 47.7822 402.008 47.1846 cv
402.008 35.1572 li
402.008 34.5698 401.937 34.1543 401.797 33.9116 cv
401.656 33.6685 401.398 33.4751 401.025 33.3296 cv
400.65 33.1855 400.103 33.0698 399.379 32.9849 cv
399.243 32.9849 399.176 32.8691 399.176 32.6348 cv
399.176 32.4019 399.243 32.2847 399.379 32.2847 cv
399.949 32.2847 400.625 32.3115 401.407 32.3638 cv
402.156 32.417 402.79 32.4429 403.309 32.4429 cv
403.826 32.4429 404.464 32.417 405.221 32.3638 cv
406.012 32.3115 406.69 32.2847 407.262 32.2847 cv
409.156 32.2847 410.623 32.6816 411.661 33.4751 cv
412.697 34.2686 413.216 35.3848 413.216 36.8208 cv
413.216 37.7275 412.873 38.5693 412.188 39.3462 cv
411.503 40.1245 410.576 40.7217 409.408 41.1426 cv
413.332 47.5488 li
413.674 48.1113 414.112 48.5234 414.652 48.792 cv
415.19 49.0586 415.887 49.2437 416.742 49.3457 cv
416.861 49.3623 416.922 49.4766 416.922 49.6899 cv
cp
@
436.875 45.3457 mo
436.473 46.8442 436.156 48.4106 435.926 50.0459 cv
432.668 49.9399 430.352 49.8877 428.973 49.8877 cv
427.611 49.8877 425.323 49.9399 422.109 50.0459 cv
421.974 50.0459 421.906 49.9272 421.906 49.6899 cv
421.906 49.4766 421.974 49.3623 422.109 49.3457 cv
423.139 49.2266 423.838 49.0347 424.208 48.7705 cv
424.578 48.5063 424.763 47.9785 424.763 47.1846 cv
424.763 35.1572 li
424.763 34.561 424.688 34.1416 424.54 33.8989 cv
424.39 33.6558 424.129 33.4653 423.755 33.3242 cv
423.38 33.1826 422.832 33.0698 422.109 32.9849 cv
421.974 32.9849 421.906 32.8691 421.906 32.6348 cv
421.906 32.4019 421.974 32.2847 422.109 32.2847 cv
422.68 32.2847 423.36 32.3115 424.151 32.3638 cv
424.907 32.417 425.544 32.4429 426.063 32.4429 cv
426.581 32.4429 427.213 32.417 427.962 32.3638 cv
428.744 32.3115 429.42 32.2847 429.99 32.2847 cv
430.126 32.2847 430.193 32.4019 430.193 32.6348 cv
430.193 32.8691 430.126 32.9849 429.99 32.9849 cv
429.275 33.0698 428.73 33.1826 428.357 33.3242 cv
427.981 33.4639 427.724 33.6543 427.578 33.8916 cv
427.434 34.1318 427.361 34.5527 427.361 35.1572 cv
427.361 47.5659 li
427.361 48.5713 427.854 49.0742 428.843 49.0742 cv
431.373 49.0742 li
432.419 49.0742 433.305 48.7959 434.029 48.2383 cv
434.752 47.6802 435.467 46.6396 436.175 45.1143 cv
436.209 45.0464 436.289 45.0127 436.416 45.0127 cv
436.526 45.0127 436.631 45.0464 436.729 45.1157 cv
436.826 45.1836 436.875 45.2598 436.875 45.3457 cv
cp
f
436.875 45.3457 mo
436.473 46.8442 436.156 48.4106 435.926 50.0459 cv
432.668 49.9399 430.352 49.8877 428.973 49.8877 cv
427.611 49.8877 425.323 49.9399 422.109 50.0459 cv
421.974 50.0459 421.906 49.9272 421.906 49.6899 cv
421.906 49.4766 421.974 49.3623 422.109 49.3457 cv
423.139 49.2266 423.838 49.0347 424.208 48.7705 cv
424.578 48.5063 424.763 47.9785 424.763 47.1846 cv
424.763 35.1572 li
424.763 34.561 424.688 34.1416 424.54 33.8989 cv
424.39 33.6558 424.129 33.4653 423.755 33.3242 cv
423.38 33.1826 422.832 33.0698 422.109 32.9849 cv
421.974 32.9849 421.906 32.8691 421.906 32.6348 cv
421.906 32.4019 421.974 32.2847 422.109 32.2847 cv
422.68 32.2847 423.36 32.3115 424.151 32.3638 cv
424.907 32.417 425.544 32.4429 426.063 32.4429 cv
426.581 32.4429 427.213 32.417 427.962 32.3638 cv
428.744 32.3115 429.42 32.2847 429.99 32.2847 cv
430.126 32.2847 430.193 32.4019 430.193 32.6348 cv
430.193 32.8691 430.126 32.9849 429.99 32.9849 cv
429.275 33.0698 428.73 33.1826 428.357 33.3242 cv
427.981 33.4639 427.724 33.6543 427.578 33.8916 cv
427.434 34.1318 427.361 34.5527 427.361 35.1572 cv
427.361 47.5659 li
427.361 48.5713 427.854 49.0742 428.843 49.0742 cv
431.373 49.0742 li
432.419 49.0742 433.305 48.7959 434.029 48.2383 cv
434.752 47.6802 435.467 46.6396 436.175 45.1143 cv
436.209 45.0464 436.289 45.0127 436.416 45.0127 cv
436.526 45.0127 436.631 45.0464 436.729 45.1157 cv
436.826 45.1836 436.875 45.2598 436.875 45.3457 cv
cp
@
458.169 41.271 mo
458.169 38.7617 457.563 36.7119 456.352 35.1221 cv
455.14 33.5317 453.548 32.7363 451.576 32.7363 cv
449.595 32.7363 448.003 33.5317 446.8 35.1221 cv
445.597 36.7119 444.994 38.7617 444.994 41.271 cv
444.994 43.7627 445.592 45.7808 446.787 47.3242 cv
447.98 48.8682 449.578 49.6392 451.576 49.6392 cv
453.564 49.6392 455.16 48.8682 456.364 47.3242 cv
457.567 45.7808 458.169 43.7627 458.169 41.271 cv
cp
460.971 41.271 mo
460.971 43.9658 460.104 46.1704 458.369 47.8823 cv
456.637 49.5967 454.371 50.4526 451.576 50.4526 cv
448.779 50.4526 446.516 49.5967 444.787 47.8823 cv
443.057 46.1704 442.192 43.9658 442.192 41.271 cv
442.192 38.5664 443.064 36.3335 444.806 34.5698 cv
446.548 32.8057 448.805 31.9229 451.576 31.9229 cv
454.354 31.9229 456.615 32.8057 458.358 34.5698 cv
460.1 36.3335 460.971 38.5664 460.971 41.271 cv
cp
f
458.169 41.271 mo
458.169 38.7617 457.563 36.7119 456.352 35.1221 cv
455.14 33.5317 453.548 32.7363 451.576 32.7363 cv
449.595 32.7363 448.003 33.5317 446.8 35.1221 cv
445.597 36.7119 444.994 38.7617 444.994 41.271 cv
444.994 43.7627 445.592 45.7808 446.787 47.3242 cv
447.98 48.8682 449.578 49.6392 451.576 49.6392 cv
453.564 49.6392 455.16 48.8682 456.364 47.3242 cv
457.567 45.7808 458.169 43.7627 458.169 41.271 cv
cp
460.971 41.271 mo
460.971 43.9658 460.104 46.1704 458.369 47.8823 cv
456.637 49.5967 454.371 50.4526 451.576 50.4526 cv
448.779 50.4526 446.516 49.5967 444.787 47.8823 cv
443.057 46.1704 442.192 43.9658 442.192 41.271 cv
442.192 38.5664 443.064 36.3335 444.806 34.5698 cv
446.548 32.8057 448.805 31.9229 451.576 31.9229 cv
454.354 31.9229 456.615 32.8057 458.358 34.5698 cv
460.1 36.3335 460.971 38.5664 460.971 41.271 cv
cp
@
483.35 41.271 mo
483.35 38.7617 482.743 36.7119 481.531 35.1221 cv
480.32 33.5317 478.729 32.7363 476.755 32.7363 cv
474.775 32.7363 473.182 33.5317 471.98 35.1221 cv
470.776 36.7119 470.175 38.7617 470.175 41.271 cv
470.175 43.7627 470.772 45.7808 471.967 47.3242 cv
473.162 48.8682 474.758 49.6392 476.755 49.6392 cv
478.745 49.6392 480.341 48.8682 481.544 47.3242 cv
482.748 45.7808 483.35 43.7627 483.35 41.271 cv
cp
486.151 41.271 mo
486.151 43.9658 485.284 46.1704 483.551 47.8823 cv
481.816 49.5967 479.552 50.4526 476.755 50.4526 cv
473.959 50.4526 471.696 49.5967 469.968 47.8823 cv
468.237 46.1704 467.373 43.9658 467.373 41.271 cv
467.373 38.5664 468.244 36.3335 469.985 34.5698 cv
471.729 32.8057 473.984 31.9229 476.755 31.9229 cv
479.534 31.9229 481.796 32.8057 483.537 34.5698 cv
485.28 36.3335 486.151 38.5664 486.151 41.271 cv
cp
f
483.35 41.271 mo
483.35 38.7617 482.743 36.7119 481.531 35.1221 cv
480.32 33.5317 478.729 32.7363 476.755 32.7363 cv
474.775 32.7363 473.182 33.5317 471.98 35.1221 cv
470.776 36.7119 470.175 38.7617 470.175 41.271 cv
470.175 43.7627 470.772 45.7808 471.967 47.3242 cv
473.162 48.8682 474.758 49.6392 476.755 49.6392 cv
478.745 49.6392 480.341 48.8682 481.544 47.3242 cv
482.748 45.7808 483.35 43.7627 483.35 41.271 cv
cp
486.151 41.271 mo
486.151 43.9658 485.284 46.1704 483.551 47.8823 cv
481.816 49.5967 479.552 50.4526 476.755 50.4526 cv
473.959 50.4526 471.696 49.5967 469.968 47.8823 cv
468.237 46.1704 467.373 43.9658 467.373 41.271 cv
467.373 38.5664 468.244 36.3335 469.985 34.5698 cv
471.729 32.8057 473.984 31.9229 476.755 31.9229 cv
479.534 31.9229 481.796 32.8057 483.537 34.5698 cv
485.28 36.3335 486.151 38.5664 486.151 41.271 cv
cp
@
124.643 66.4165 mo
124.643 83.0933 li
123.287 83.0933 li
122.843 79.894 122.048 77.3462 120.903 75.4497 cv
119.757 73.5527 118.124 72.0488 116.005 70.9346 cv
113.885 69.8213 111.692 69.2637 109.425 69.2637 cv
106.862 69.2637 104.743 70.0166 103.067 71.5234 cv
101.391 73.0303 100.554 74.7432 100.554 76.6641 cv
100.554 78.1343 101.083 79.4761 102.143 80.6851 cv
103.669 82.4648 107.302 84.8374 113.04 87.8003 cv
117.719 90.2212 120.912 92.0771 122.619 93.3677 cv
124.326 94.6616 125.64 96.1841 126.561 97.938 cv
127.481 99.6924 127.942 101.528 127.942 103.449 cv
127.942 107.1 126.472 110.247 123.531 112.889 cv
120.59 115.533 116.807 116.854 112.182 116.854 cv
110.729 116.854 109.364 116.746 108.084 116.531 cv
107.322 116.412 105.741 115.977 103.341 115.225 cv
100.941 114.474 99.4224 114.097 98.7827 114.097 cv
98.1675 114.097 97.6816 114.276 97.3252 114.635 cv
96.9678 114.992 96.7036 115.732 96.5313 116.854 cv
95.1758 116.854 li
95.1758 100.313 li
96.5313 100.313 li
97.1714 103.779 98.0337 106.373 99.1167 108.096 cv
100.2 109.816 101.856 111.248 104.084 112.386 cv
106.313 113.527 108.757 114.097 111.416 114.097 cv
114.494 114.097 116.926 113.313 118.711 111.744 cv
120.496 110.175 121.389 108.322 121.389 106.182 cv
121.389 104.994 121.05 103.793 120.375 102.582 cv
119.7 101.37 118.65 100.24 117.227 99.1953 cv
116.269 98.4805 113.645 96.9736 109.354 94.6699 cv
105.063 92.3682 102.013 90.5293 100.202 89.1533 cv
98.3916 87.7778 97.0186 86.2598 96.0825 84.5986 cv
95.146 82.9395 94.6787 81.1118 94.6787 79.1187 cv
94.6787 75.6558 96.0586 72.6729 98.8179 70.1704 cv
101.578 67.6675 105.089 66.4165 109.352 66.4165 cv
112.013 66.4165 114.834 67.042 117.817 68.2905 cv
119.197 68.8779 120.17 69.1733 120.736 69.1733 cv
121.376 69.1733 121.9 68.9912 122.307 68.625 cv
122.714 68.2593 123.04 67.5234 123.287 66.4165 cv
124.643 66.4165 li
cp
f
124.643 66.4165 mo
124.643 83.0933 li
123.287 83.0933 li
122.843 79.894 122.048 77.3462 120.903 75.4497 cv
119.757 73.5527 118.124 72.0488 116.005 70.9346 cv
113.885 69.8213 111.692 69.2637 109.425 69.2637 cv
106.862 69.2637 104.743 70.0166 103.067 71.5234 cv
101.391 73.0303 100.554 74.7432 100.554 76.6641 cv
100.554 78.1343 101.083 79.4761 102.143 80.6851 cv
103.669 82.4648 107.302 84.8374 113.04 87.8003 cv
117.719 90.2212 120.912 92.0771 122.619 93.3677 cv
124.326 94.6616 125.64 96.1841 126.561 97.938 cv
127.481 99.6924 127.942 101.528 127.942 103.449 cv
127.942 107.1 126.472 110.247 123.531 112.889 cv
120.59 115.533 116.807 116.854 112.182 116.854 cv
110.729 116.854 109.364 116.746 108.084 116.531 cv
107.322 116.412 105.741 115.977 103.341 115.225 cv
100.941 114.474 99.4224 114.097 98.7827 114.097 cv
98.1675 114.097 97.6816 114.276 97.3252 114.635 cv
96.9678 114.992 96.7036 115.732 96.5313 116.854 cv
95.1758 116.854 li
95.1758 100.313 li
96.5313 100.313 li
97.1714 103.779 98.0337 106.373 99.1167 108.096 cv
100.2 109.816 101.856 111.248 104.084 112.386 cv
106.313 113.527 108.757 114.097 111.416 114.097 cv
114.494 114.097 116.926 113.313 118.711 111.744 cv
120.496 110.175 121.389 108.322 121.389 106.182 cv
121.389 104.994 121.05 103.793 120.375 102.582 cv
119.7 101.37 118.65 100.24 117.227 99.1953 cv
116.269 98.4805 113.645 96.9736 109.354 94.6699 cv
105.063 92.3682 102.013 90.5293 100.202 89.1533 cv
98.3916 87.7778 97.0186 86.2598 96.0825 84.5986 cv
95.146 82.9395 94.6787 81.1118 94.6787 79.1187 cv
94.6787 75.6558 96.0586 72.6729 98.8179 70.1704 cv
101.578 67.6675 105.089 66.4165 109.352 66.4165 cv
112.013 66.4165 114.834 67.042 117.817 68.2905 cv
119.197 68.8779 120.17 69.1733 120.736 69.1733 cv
121.376 69.1733 121.9 68.9912 122.307 68.625 cv
122.714 68.2593 123.04 67.5234 123.287 66.4165 cv
124.643 66.4165 li
cp
@
160.441 67.501 mo
177.902 67.501 li
177.902 68.8115 li
176.943 68.8115 li
176.304 68.8115 175.37 69.0854 174.141 69.6323 cv
172.912 70.1802 171.793 70.9653 170.786 71.9878 cv
169.777 73.0107 168.536 74.6758 167.061 76.9819 cv
154.986 95.2983 li
154.986 107.408 li
154.986 110.375 155.331 112.227 156.021 112.962 cv
156.958 113.959 158.436 114.458 160.456 114.458 cv
162.082 114.458 li
162.082 115.769 li
140.795 115.769 li
140.795 114.458 li
142.569 114.458 li
144.688 114.458 146.191 113.841 147.078 112.606 cv
147.62 111.847 147.891 110.114 147.891 107.408 cv
147.891 95.958 li
134.201 75.7393 li
132.578 73.3721 131.478 71.8921 130.9 71.2988 cv
130.322 70.707 129.124 69.9966 127.305 69.166 cv
126.813 68.9302 126.1 68.8115 125.166 68.8115 cv
125.166 67.501 li
146.526 67.501 li
146.526 68.8115 li
145.419 68.8115 li
144.264 68.8115 143.201 69.0728 142.229 69.5957 cv
141.258 70.1182 140.773 70.9019 140.773 71.9473 cv
140.773 72.8013 141.523 74.3467 143.022 76.5781 cv
153.473 92.1333 li
163.281 77.2544 li
164.755 75.0215 165.494 73.3608 165.494 72.2676 cv
165.494 71.6025 165.315 71.0078 164.959 70.4854 cv
164.603 69.9629 164.092 69.5532 163.429 69.2563 cv
162.765 68.96 161.769 68.8115 160.441 68.8115 cv
160.441 67.501 li
cp
f
160.441 67.501 mo
177.902 67.501 li
177.902 68.8115 li
176.943 68.8115 li
176.304 68.8115 175.37 69.0854 174.141 69.6323 cv
172.912 70.1802 171.793 70.9653 170.786 71.9878 cv
169.777 73.0107 168.536 74.6758 167.061 76.9819 cv
154.986 95.2983 li
154.986 107.408 li
154.986 110.375 155.331 112.227 156.021 112.962 cv
156.958 113.959 158.436 114.458 160.456 114.458 cv
162.082 114.458 li
162.082 115.769 li
140.795 115.769 li
140.795 114.458 li
142.569 114.458 li
144.688 114.458 146.191 113.841 147.078 112.606 cv
147.62 111.847 147.891 110.114 147.891 107.408 cv
147.891 95.958 li
134.201 75.7393 li
132.578 73.3721 131.478 71.8921 130.9 71.2988 cv
130.322 70.707 129.124 69.9966 127.305 69.166 cv
126.813 68.9302 126.1 68.8115 125.166 68.8115 cv
125.166 67.501 li
146.526 67.501 li
146.526 68.8115 li
145.419 68.8115 li
144.264 68.8115 143.201 69.0728 142.229 69.5957 cv
141.258 70.1182 140.773 70.9019 140.773 71.9473 cv
140.773 72.8013 141.523 74.3467 143.022 76.5781 cv
153.473 92.1333 li
163.281 77.2544 li
164.755 75.0215 165.494 73.3608 165.494 72.2676 cv
165.494 71.6025 165.315 71.0078 164.959 70.4854 cv
164.603 69.9629 164.092 69.5532 163.429 69.2563 cv
162.765 68.96 161.769 68.8115 160.441 68.8115 cv
160.441 67.501 li
cp
@
205.322 115.769 mo
186.024 75.1543 li
186.024 107.408 li
186.024 110.375 186.356 112.227 187.021 112.962 cv
187.933 113.959 189.374 114.458 191.346 114.458 cv
193.12 114.458 li
193.12 115.769 li
175.674 115.769 li
175.674 114.458 li
177.448 114.458 li
179.567 114.458 181.07 113.841 181.957 112.606 cv
182.499 111.847 182.77 110.114 182.77 107.408 cv
182.77 75.8618 li
182.77 73.7251 182.523 72.1826 182.03 71.2339 cv
181.686 70.5444 181.051 69.9697 180.127 69.5063 cv
179.204 69.0435 177.719 68.8115 175.674 68.8115 cv
175.674 67.501 li
189.885 67.501 li
207.967 105.237 li
225.849 67.501 li
240.031 67.501 li
240.031 68.8115 li
238.294 68.8115 li
236.15 68.8115 234.636 69.4287 233.749 70.6631 cv
233.206 71.4229 232.936 73.1558 232.936 75.8618 cv
232.936 107.408 li
232.936 110.375 233.28 112.227 233.971 112.962 cv
234.882 113.959 236.323 114.458 238.294 114.458 cv
240.031 114.458 li
240.031 115.769 li
218.745 115.769 li
218.745 114.458 li
220.519 114.458 li
222.662 114.458 224.165 113.841 225.027 112.606 cv
225.569 111.847 225.84 110.114 225.84 107.408 cv
225.84 75.1543 li
206.542 115.769 li
205.322 115.769 li
cp
f
205.322 115.769 mo
186.024 75.1543 li
186.024 107.408 li
186.024 110.375 186.356 112.227 187.021 112.962 cv
187.933 113.959 189.374 114.458 191.346 114.458 cv
193.12 114.458 li
193.12 115.769 li
175.674 115.769 li
175.674 114.458 li
177.448 114.458 li
179.567 114.458 181.07 113.841 181.957 112.606 cv
182.499 111.847 182.77 110.114 182.77 107.408 cv
182.77 75.8618 li
182.77 73.7251 182.523 72.1826 182.03 71.2339 cv
181.686 70.5444 181.051 69.9697 180.127 69.5063 cv
179.204 69.0435 177.719 68.8115 175.674 68.8115 cv
175.674 67.501 li
189.885 67.501 li
207.967 105.237 li
225.849 67.501 li
240.031 67.501 li
240.031 68.8115 li
238.294 68.8115 li
236.15 68.8115 234.636 69.4287 233.749 70.6631 cv
233.206 71.4229 232.936 73.1558 232.936 75.8618 cv
232.936 107.408 li
232.936 110.375 233.28 112.227 233.971 112.962 cv
234.882 113.959 236.323 114.458 238.294 114.458 cv
240.031 114.458 li
240.031 115.769 li
218.745 115.769 li
218.745 114.458 li
220.519 114.458 li
222.662 114.458 224.165 113.841 225.027 112.606 cv
225.569 111.847 225.84 110.114 225.84 107.408 cv
225.84 75.1543 li
206.542 115.769 li
205.322 115.769 li
cp
@
255.611 91.1489 mo
256.906 91.3862 258.056 91.5645 259.059 91.6831 cv
260.062 91.8018 260.917 91.8608 261.626 91.8608 cv
264.168 91.8608 266.363 90.9063 268.207 88.9951 cv
270.055 87.0845 270.977 84.6099 270.977 81.5723 cv
270.977 79.4844 270.536 77.5439 269.656 75.752 cv
268.776 73.9595 267.529 72.6177 265.917 71.728 cv
264.303 70.8384 262.468 70.3936 260.414 70.3936 cv
259.169 70.3936 257.567 70.6191 255.611 71.0698 cv
255.611 91.1489 li
cp
255.611 93.1729 mo
255.611 107.227 li
255.611 110.268 255.953 112.155 256.637 112.891 cv
257.564 113.936 258.968 114.458 260.847 114.458 cv
262.752 114.458 li
262.752 115.769 li
241.375 115.769 li
241.375 114.458 li
243.252 114.458 li
245.361 114.458 246.871 113.793 247.779 112.462 cv
248.27 111.728 248.516 109.982 248.516 107.227 cv
248.516 76.043 li
248.516 73.0034 248.185 71.1152 247.521 70.3794 cv
246.564 69.334 245.142 68.8115 243.252 68.8115 cv
241.375 68.8115 li
241.375 67.501 li
259.683 67.501 li
264.152 67.501 267.677 67.9458 270.255 68.8354 cv
272.834 69.7256 275.008 71.228 276.776 73.3394 cv
278.544 75.4521 279.429 77.9565 279.429 80.8516 cv
279.429 84.792 278.085 87.9951 275.397 90.4639 cv
272.71 92.9326 268.912 94.166 264.004 94.166 cv
262.801 94.166 261.5 94.0825 260.101 93.9185 cv
258.702 93.752 257.205 93.5034 255.611 93.1729 cv
cp
f
255.611 91.1489 mo
256.906 91.3862 258.056 91.5645 259.059 91.6831 cv
260.062 91.8018 260.917 91.8608 261.626 91.8608 cv
264.168 91.8608 266.363 90.9063 268.207 88.9951 cv
270.055 87.0845 270.977 84.6099 270.977 81.5723 cv
270.977 79.4844 270.536 77.5439 269.656 75.752 cv
268.776 73.9595 267.529 72.6177 265.917 71.728 cv
264.303 70.8384 262.468 70.3936 260.414 70.3936 cv
259.169 70.3936 257.567 70.6191 255.611 71.0698 cv
255.611 91.1489 li
cp
255.611 93.1729 mo
255.611 107.227 li
255.611 110.268 255.953 112.155 256.637 112.891 cv
257.564 113.936 258.968 114.458 260.847 114.458 cv
262.752 114.458 li
262.752 115.769 li
241.375 115.769 li
241.375 114.458 li
243.252 114.458 li
245.361 114.458 246.871 113.793 247.779 112.462 cv
248.27 111.728 248.516 109.982 248.516 107.227 cv
248.516 76.043 li
248.516 73.0034 248.185 71.1152 247.521 70.3794 cv
246.564 69.334 245.142 68.8115 243.252 68.8115 cv
241.375 68.8115 li
241.375 67.501 li
259.683 67.501 li
264.152 67.501 267.677 67.9458 270.255 68.8354 cv
272.834 69.7256 275.008 71.228 276.776 73.3394 cv
278.544 75.4521 279.429 77.9565 279.429 80.8516 cv
279.429 84.792 278.085 87.9951 275.397 90.4639 cv
272.71 92.9326 268.912 94.166 264.004 94.166 cv
262.801 94.166 261.5 94.0825 260.101 93.9185 cv
258.702 93.752 257.205 93.5034 255.611 93.1729 cv
cp
@
294.645 89.9175 mo
317.875 89.9175 li
317.875 76.043 li
317.875 73.5854 317.715 71.9668 317.396 71.1855 cv
317.15 70.5952 316.637 70.0869 315.851 69.6631 cv
314.795 69.0957 313.679 68.8115 312.501 68.8115 cv
310.734 68.8115 li
310.734 67.501 li
332.111 67.501 li
332.111 68.8115 li
330.345 68.8115 li
329.166 68.8115 328.051 69.084 326.994 69.6265 cv
326.209 70.0049 325.675 70.5786 325.393 71.3467 cv
325.11 72.1152 324.971 73.6797 324.971 76.043 cv
324.971 107.227 li
324.971 109.673 325.13 111.288 325.449 112.071 cv
325.695 112.666 326.197 113.176 326.958 113.604 cv
328.037 114.174 329.166 114.458 330.345 114.458 cv
332.111 114.458 li
332.111 115.769 li
310.734 115.769 li
310.734 114.458 li
312.501 114.458 li
314.537 114.458 316.021 113.876 316.955 112.712 cv
317.568 111.953 317.875 110.124 317.875 107.227 cv
317.875 92.5391 li
294.645 92.5391 li
294.645 107.227 li
294.645 109.673 294.803 111.288 295.121 112.071 cv
295.365 112.666 295.878 113.176 296.659 113.604 cv
297.708 114.174 298.818 114.458 299.99 114.458 cv
301.785 114.458 li
301.785 115.769 li
280.408 115.769 li
280.408 114.458 li
282.176 114.458 li
284.236 114.458 285.733 113.876 286.667 112.712 cv
287.254 111.953 287.549 110.124 287.549 107.227 cv
287.549 76.043 li
287.549 73.5854 287.39 71.9668 287.07 71.1855 cv
286.825 70.5952 286.322 70.0869 285.563 69.6631 cv
284.481 69.0957 283.354 68.8115 282.176 68.8115 cv
280.408 68.8115 li
280.408 67.501 li
301.785 67.501 li
301.785 68.8115 li
299.99 68.8115 li
298.818 68.8115 297.708 69.084 296.659 69.6265 cv
295.902 70.0049 295.378 70.5786 295.084 71.3467 cv
294.79 72.1152 294.645 73.6797 294.645 76.043 cv
294.645 89.9175 li
cp
f
294.645 89.9175 mo
317.875 89.9175 li
317.875 76.043 li
317.875 73.5854 317.715 71.9668 317.396 71.1855 cv
317.15 70.5952 316.637 70.0869 315.851 69.6631 cv
314.795 69.0957 313.679 68.8115 312.501 68.8115 cv
310.734 68.8115 li
310.734 67.501 li
332.111 67.501 li
332.111 68.8115 li
330.345 68.8115 li
329.166 68.8115 328.051 69.084 326.994 69.6265 cv
326.209 70.0049 325.675 70.5786 325.393 71.3467 cv
325.11 72.1152 324.971 73.6797 324.971 76.043 cv
324.971 107.227 li
324.971 109.673 325.13 111.288 325.449 112.071 cv
325.695 112.666 326.197 113.176 326.958 113.604 cv
328.037 114.174 329.166 114.458 330.345 114.458 cv
332.111 114.458 li
332.111 115.769 li
310.734 115.769 li
310.734 114.458 li
312.501 114.458 li
314.537 114.458 316.021 113.876 316.955 112.712 cv
317.568 111.953 317.875 110.124 317.875 107.227 cv
317.875 92.5391 li
294.645 92.5391 li
294.645 107.227 li
294.645 109.673 294.803 111.288 295.121 112.071 cv
295.365 112.666 295.878 113.176 296.659 113.604 cv
297.708 114.174 298.818 114.458 299.99 114.458 cv
301.785 114.458 li
301.785 115.769 li
280.408 115.769 li
280.408 114.458 li
282.176 114.458 li
284.236 114.458 285.733 113.876 286.667 112.712 cv
287.254 111.953 287.549 110.124 287.549 107.227 cv
287.549 76.043 li
287.549 73.5854 287.39 71.9668 287.07 71.1855 cv
286.825 70.5952 286.322 70.0869 285.563 69.6631 cv
284.481 69.0957 283.354 68.8115 282.176 68.8115 cv
280.408 68.8115 li
280.408 67.501 li
301.785 67.501 li
301.785 68.8115 li
299.99 68.8115 li
298.818 68.8115 297.708 69.084 296.659 69.6265 cv
295.902 70.0049 295.378 70.5786 295.084 71.3467 cv
294.79 72.1152 294.645 73.6797 294.645 76.043 cv
294.645 89.9175 li
cp
@
356.058 68.9922 mo
351.583 68.9922 347.993 70.5938 345.287 73.7959 cv
341.92 77.7813 340.235 83.6172 340.235 91.3018 cv
340.235 99.1768 341.98 105.237 345.474 109.482 cv
348.152 112.71 351.693 114.323 356.094 114.323 cv
360.791 114.323 364.67 112.556 367.731 109.022 cv
370.792 105.487 372.323 99.9126 372.323 92.2974 cv
372.323 84.0435 370.639 77.8887 367.271 73.8325 cv
364.565 70.6064 360.828 68.9922 356.058 68.9922 cv
cp
356.758 66.4165 mo
363.252 66.4165 368.877 68.7935 373.635 73.5474 cv
378.395 78.3027 380.774 84.2358 380.774 91.3511 cv
380.774 98.6782 378.376 104.76 373.581 109.598 cv
368.785 114.434 362.98 116.854 356.167 116.854 cv
349.281 116.854 343.496 114.494 338.812 109.776 cv
334.127 105.056 331.783 98.9507 331.783 91.457 cv
331.783 83.7979 334.488 77.5498 339.9 72.7109 cv
344.598 68.5151 350.216 66.4165 356.758 66.4165 cv
cp
f
356.058 68.9922 mo
351.583 68.9922 347.993 70.5938 345.287 73.7959 cv
341.92 77.7813 340.235 83.6172 340.235 91.3018 cv
340.235 99.1768 341.98 105.237 345.474 109.482 cv
348.152 112.71 351.693 114.323 356.094 114.323 cv
360.791 114.323 364.67 112.556 367.731 109.022 cv
370.792 105.487 372.323 99.9126 372.323 92.2974 cv
372.323 84.0435 370.639 77.8887 367.271 73.8325 cv
364.565 70.6064 360.828 68.9922 356.058 68.9922 cv
cp
356.758 66.4165 mo
363.252 66.4165 368.877 68.7935 373.635 73.5474 cv
378.395 78.3027 380.774 84.2358 380.774 91.3511 cv
380.774 98.6782 378.376 104.76 373.581 109.598 cv
368.785 114.434 362.98 116.854 356.167 116.854 cv
349.281 116.854 343.496 114.494 338.812 109.776 cv
334.127 105.056 331.783 98.9507 331.783 91.457 cv
331.783 83.7979 334.488 77.5498 339.9 72.7109 cv
344.598 68.5151 350.216 66.4165 356.758 66.4165 cv
cp
@
378.148 67.501 mo
391.728 67.501 li
422.297 103.664 li
422.297 75.8618 li
422.297 72.8945 421.951 71.043 421.262 70.3071 cv
420.35 69.3101 418.909 68.8115 416.938 68.8115 cv
415.201 68.8115 li
415.201 67.501 li
432.646 67.501 li
432.646 68.8115 li
430.873 68.8115 li
428.753 68.8115 427.25 69.4287 426.363 70.6631 cv
425.82 71.4229 425.551 73.1558 425.551 75.8618 cv
425.551 116.553 li
424.219 116.553 li
391.248 77.6655 li
391.248 107.408 li
391.248 110.375 391.58 112.227 392.247 112.962 cv
393.182 113.959 394.624 114.458 396.57 114.458 cv
398.344 114.458 li
398.344 115.769 li
380.898 115.769 li
380.898 114.458 li
382.636 114.458 li
384.778 114.458 386.295 113.841 387.183 112.606 cv
387.723 111.847 387.994 110.114 387.994 107.408 cv
387.994 73.8281 li
386.544 72.1914 385.443 71.1123 384.693 70.5913 cv
383.943 70.0698 382.844 69.583 381.393 69.1323 cv
380.68 68.9175 379.598 68.8115 378.148 68.8115 cv
378.148 67.501 li
cp
f
378.148 67.501 mo
391.728 67.501 li
422.297 103.664 li
422.297 75.8618 li
422.297 72.8945 421.951 71.043 421.262 70.3071 cv
420.35 69.3101 418.909 68.8115 416.938 68.8115 cv
415.201 68.8115 li
415.201 67.501 li
432.646 67.501 li
432.646 68.8115 li
430.873 68.8115 li
428.753 68.8115 427.25 69.4287 426.363 70.6631 cv
425.82 71.4229 425.551 73.1558 425.551 75.8618 cv
425.551 116.553 li
424.219 116.553 li
391.248 77.6655 li
391.248 107.408 li
391.248 110.375 391.58 112.227 392.247 112.962 cv
393.182 113.959 394.624 114.458 396.57 114.458 cv
398.344 114.458 li
398.344 115.769 li
380.898 115.769 li
380.898 114.458 li
382.636 114.458 li
384.778 114.458 386.295 113.841 387.183 112.606 cv
387.723 111.847 387.994 110.114 387.994 107.408 cv
387.994 73.8281 li
386.544 72.1914 385.443 71.1123 384.693 70.5913 cv
383.943 70.0698 382.844 69.583 381.393 69.1323 cv
380.68 68.9175 379.598 68.8115 378.148 68.8115 cv
378.148 67.501 li
cp
@
468.183 67.501 mo
485.645 67.501 li
485.645 68.8115 li
484.684 68.8115 li
484.046 68.8115 483.11 69.0854 481.882 69.6323 cv
480.653 70.1802 479.534 70.9653 478.526 71.9878 cv
477.518 73.0107 476.277 74.6758 474.804 76.9819 cv
462.728 95.2983 li
462.728 107.408 li
462.728 110.375 463.072 112.227 463.762 112.962 cv
464.699 113.959 466.177 114.458 468.196 114.458 cv
469.823 114.458 li
469.823 115.769 li
448.537 115.769 li
448.537 114.458 li
450.311 114.458 li
452.429 114.458 453.932 113.841 454.818 112.606 cv
455.361 111.847 455.632 110.114 455.632 107.408 cv
455.632 95.958 li
441.941 75.7393 li
440.319 73.3721 439.218 71.8921 438.642 71.2988 cv
438.063 70.707 436.865 69.9966 435.046 69.166 cv
434.555 68.9302 433.84 68.8115 432.908 68.8115 cv
432.908 67.501 li
454.268 67.501 li
454.268 68.8115 li
453.161 68.8115 li
452.006 68.8115 450.942 69.0728 449.972 69.5957 cv
449 70.1182 448.514 70.9019 448.514 71.9473 cv
448.514 72.8013 449.264 74.3467 450.764 76.5781 cv
461.214 92.1333 li
471.022 77.2544 li
472.497 75.0215 473.235 73.3608 473.235 72.2676 cv
473.235 71.6025 473.057 71.0078 472.7 70.4854 cv
472.343 69.9629 471.835 69.5532 471.171 69.2563 cv
470.507 68.96 469.51 68.8115 468.183 68.8115 cv
468.183 67.501 li
cp
f
468.183 67.501 mo
485.645 67.501 li
485.645 68.8115 li
484.684 68.8115 li
484.046 68.8115 483.11 69.0854 481.882 69.6323 cv
480.653 70.1802 479.534 70.9653 478.526 71.9878 cv
477.518 73.0107 476.277 74.6758 474.804 76.9819 cv
462.728 95.2983 li
462.728 107.408 li
462.728 110.375 463.072 112.227 463.762 112.962 cv
464.699 113.959 466.177 114.458 468.196 114.458 cv
469.823 114.458 li
469.823 115.769 li
448.537 115.769 li
448.537 114.458 li
450.311 114.458 li
452.429 114.458 453.932 113.841 454.818 112.606 cv
455.361 111.847 455.632 110.114 455.632 107.408 cv
455.632 95.958 li
441.941 75.7393 li
440.319 73.3721 439.218 71.8921 438.642 71.2988 cv
438.063 70.707 436.865 69.9966 435.046 69.166 cv
434.555 68.9302 433.84 68.8115 432.908 68.8115 cv
432.908 67.501 li
454.268 67.501 li
454.268 68.8115 li
453.161 68.8115 li
452.006 68.8115 450.942 69.0728 449.972 69.5957 cv
449 70.1182 448.514 70.9019 448.514 71.9473 cv
448.514 72.8013 449.264 74.3467 450.764 76.5781 cv
461.214 92.1333 li
471.022 77.2544 li
472.497 75.0215 473.235 73.3608 473.235 72.2676 cv
473.235 71.6025 473.057 71.0078 472.7 70.4854 cv
472.343 69.9629 471.835 69.5532 471.171 69.2563 cv
470.507 68.96 469.51 68.8115 468.183 68.8115 cv
468.183 67.501 li
cp
@
3.21533 61.1499 mo
2.90967 60.6895 2.37207 59.144 3.37402 58.7627 cv
3.59375 58.7388 2.12988 59.1782 1.15186 60.0679 cv
.174316 60.9551 .292969 62.0225 .648438 62.644 cv
.960449 63.189 1.25488 63.4746 2.07031 63.9771 cv
3.08105 64.5986 5.38672 66.1069 7.97217 67.9629 cv
7.97217 134.953 li
41.4712 134.953 li
41.7876 136.382 42.3477 139.037 42.4111 140.155 cv
44.3594 140.155 li
40.1157 109.604 31.7407 78.0059 3.21533 61.1499 cv
cp
ef
35.6128 30.4316 mo
32.8511 25.8838 29.2417 22.103 25.4785 18.1699 cv
19.1802 11.7661 11.0313 6.97559 2.95752 2.95605 cv
2.40527 2.33203 2.96826 .458984 3.79492 .0805664 cv
3.58008 0 li
3.58008 0 1.98096 .26709 1.00342 1.15527 cv
.0263672 2.04346 -.0620117 3.55469 .0263672 4.17627 cv
.115234 4.79785 .55957 5.15381 1.44824 5.50977 cv
2.25391 5.83154 5.17969 7.1084 7.97217 8.66895 cv
7.97217 30.3384 li
17.9648 30.4653 26.4917 30.4795 35.6128 30.4316 cv
cp
ef
18.5293 63.2627 mo
18.2212 63.4165 16.6826 63.0283 17.0645 64.1836 cv
35.2803 84.021 41.397 109.237 44.9688 134.953 cv
50.7119 134.953 li
51.0273 136.382 51.5884 139.037 51.6519 140.155 cv
53.4956 140.155 li
50.228 113.059 45.873 86.5151 32.7695 63.4478 cv
18.5293 63.2627 li
cp
ef
29.625 58.438 mo
28.7827 56.0483 26.7861 54.1206 25.4053 51.9609 cv
19.186 44.1733 11.1958 37.7671 2.8916 33.1289 cv
2.35596 31.9736 2.896 30.6646 3.97461 30.2817 cv
3.99609 30.2817 4.0166 30.2817 4.03955 30.2817 cv
3.84717 30.2109 li
3.84717 30.2109 2.24756 30.4766 1.27051 31.3667 cv
.292969 32.2563 .262695 33.499 .351563 34.1206 cv
.441406 34.7432 1.41797 35.2759 2.12988 35.7192 cv
2.84961 36.1714 5.25195 37.6812 7.97217 39.2896 cv
7.97217 58.4888 li
14.8711 58.311 21.6792 59.1133 29.625 58.438 cv
cp
f
39.604 35.9819 mo
38.5269 35.3633 li
16.7417 35.5469 li
16.7412 36.0864 li
26.4229 44.0352 33.4043 55.0586 38.4604 65.8472 cv
47.7383 87.2271 51.9531 110.813 54.2856 134.953 cv
60.4409 134.953 li
60.644 136.136 60.9805 138.229 61.1597 140.155 cv
62.2852 140.155 li
62.2852 140.155 63.0107 140.147 63.0107 140.144 cv
63.0107 140.096 li
60.5742 103.271 57.3374 66.7524 39.604 35.9819 cv
cp
ef
69.8115 5.71582 mo
42.2866 5.65918 li
22.1187 5.61133 li
21.041 5.61133 li
20.6563 5.76367 19.9634 5.5293 20.1157 6.14648 cv
30.1836 13.4805 39.0908 23.9717 44.4551 34.8379 cv
58.96 65.1196 62.6934 99.8193 64.1289 134.953 cv
69.8115 134.953 li
69.8115 5.71582 li
cp
f
182.185 140.364 mo
189.018 140.364 li
189.018 141.336 li
183.251 141.336 li
183.251 144.563 li
188.41 144.563 li
188.41 145.535 li
183.251 145.535 li
183.251 148.844 li
189.085 148.844 li
189.085 149.816 li
182.185 149.816 li
182.185 140.364 li
cp
f
.25 lw
182.185 140.364 mo
189.018 140.364 li
189.018 141.336 li
183.251 141.336 li
183.251 144.563 li
188.41 144.563 li
188.41 145.535 li
183.251 145.535 li
183.251 148.844 li
189.085 148.844 li
189.085 149.816 li
182.185 149.816 li
182.185 140.364 li
cp
@
195.253 148.831 mo
197.644 148.831 199.17 147.21 199.17 145.117 cv
199.17 145.09 li
199.17 142.997 197.644 141.35 195.253 141.35 cv
193.039 141.35 li
193.039 148.831 li
195.253 148.831 li
cp
191.972 140.364 mo
195.253 140.364 li
198.225 140.364 200.277 142.403 200.277 145.063 cv
200.277 145.09 li
200.277 147.75 198.225 149.816 195.253 149.816 cv
191.972 149.816 li
191.972 140.364 li
cp
f
195.253 148.831 mo
197.644 148.831 199.17 147.21 199.17 145.117 cv
199.17 145.09 li
199.17 142.997 197.644 141.35 195.253 141.35 cv
193.039 141.35 li
193.039 148.831 li
195.253 148.831 li
cp
191.972 140.364 mo
195.253 140.364 li
198.225 140.364 200.277 142.403 200.277 145.063 cv
200.277 145.09 li
200.277 147.75 198.225 149.816 195.253 149.816 cv
191.972 149.816 li
191.972 140.364 li
cp
@
202.058 140.364 mo
203.219 140.364 li
205.92 148.236 li
208.513 140.336 li
209.391 140.336 li
211.983 148.236 li
214.684 140.364 li
215.805 140.364 li
212.429 149.884 li
211.524 149.884 li
208.932 142.214 li
206.325 149.884 li
205.434 149.884 li
202.058 140.364 li
cp
f
202.058 140.364 mo
203.219 140.364 li
205.92 148.236 li
208.513 140.336 li
209.391 140.336 li
211.983 148.236 li
214.684 140.364 li
215.805 140.364 li
212.429 149.884 li
211.524 149.884 li
208.932 142.214 li
206.325 149.884 li
205.434 149.884 li
202.058 140.364 li
cp
@
218.569 140.364 mo
219.635 140.364 li
219.635 149.816 li
218.569 149.816 li
218.569 140.364 li
cp
f
218.569 140.364 mo
219.635 140.364 li
219.635 149.816 li
218.569 149.816 li
218.569 140.364 li
cp
@
223.145 140.364 mo
224.144 140.364 li
230.099 147.939 li
230.099 140.364 li
231.139 140.364 li
231.139 149.816 li
230.288 149.816 li
224.185 142.065 li
224.185 149.816 li
223.145 149.816 li
223.145 140.364 li
cp
f
223.145 140.364 mo
224.144 140.364 li
230.099 147.939 li
230.099 140.364 li
231.139 140.364 li
231.139 149.816 li
230.288 149.816 li
224.185 142.065 li
224.185 149.816 li
223.145 149.816 li
223.145 140.364 li
cp
@
247.46 145.117 mo
247.46 145.09 li
247.46 142.943 245.894 141.188 243.733 141.188 cv
241.572 141.188 240.033 142.916 240.033 145.063 cv
240.033 145.09 li
240.033 147.237 241.6 148.992 243.76 148.992 cv
245.921 148.992 247.46 147.264 247.46 145.117 cv
cp
238.926 145.117 mo
238.926 145.09 li
238.926 142.484 240.884 140.202 243.76 140.202 cv
246.636 140.202 248.567 142.457 248.567 145.063 cv
248.581 145.076 248.581 145.076 248.567 145.09 cv
248.567 147.696 246.609 149.979 243.733 149.979 cv
240.856 149.979 238.926 147.724 238.926 145.117 cv
cp
f
247.46 145.117 mo
247.46 145.09 li
247.46 142.943 245.894 141.188 243.733 141.188 cv
241.572 141.188 240.033 142.916 240.033 145.063 cv
240.033 145.09 li
240.033 147.237 241.6 148.992 243.76 148.992 cv
245.921 148.992 247.46 147.264 247.46 145.117 cv
cp
238.926 145.117 mo
238.926 145.09 li
238.926 142.484 240.884 140.202 243.76 140.202 cv
246.636 140.202 248.567 142.457 248.567 145.063 cv
248.581 145.076 248.581 145.076 248.567 145.09 cv
248.567 147.696 246.609 149.979 243.733 149.979 cv
240.856 149.979 238.926 147.724 238.926 145.117 cv
cp
@
251.414 145.859 mo
251.414 140.364 li
252.48 140.364 li
252.48 145.792 li
252.48 147.831 253.561 148.979 255.37 148.979 cv
257.112 148.979 258.22 147.926 258.22 145.859 cv
258.22 140.364 li
259.286 140.364 li
259.286 145.778 li
259.286 148.533 257.707 149.965 255.343 149.965 cv
253.007 149.965 251.414 148.533 251.414 145.859 cv
cp
f
251.414 145.859 mo
251.414 140.364 li
252.48 140.364 li
252.48 145.792 li
252.48 147.831 253.561 148.979 255.37 148.979 cv
257.112 148.979 258.22 147.926 258.22 145.859 cv
258.22 140.364 li
259.286 140.364 li
259.286 145.778 li
259.286 148.533 257.707 149.965 255.343 149.965 cv
253.007 149.965 251.414 148.533 251.414 145.859 cv
cp
@
265.049 141.35 mo
261.875 141.35 li
261.875 140.364 li
269.303 140.364 li
269.303 141.35 li
266.129 141.35 li
266.129 149.816 li
265.049 149.816 li
265.049 141.35 li
cp
f
265.049 141.35 mo
261.875 141.35 li
261.875 140.364 li
269.303 140.364 li
269.303 141.35 li
266.129 141.35 li
266.129 149.816 li
265.049 149.816 li
265.049 141.35 li
cp
@
271.312 140.364 mo
272.473 140.364 li
275.174 148.236 li
277.767 140.336 li
278.645 140.336 li
281.237 148.236 li
283.938 140.364 li
285.059 140.364 li
281.683 149.884 li
280.778 149.884 li
278.186 142.214 li
275.579 149.884 li
274.688 149.884 li
271.312 140.364 li
cp
f
271.312 140.364 mo
272.473 140.364 li
275.174 148.236 li
277.767 140.336 li
278.645 140.336 li
281.237 148.236 li
283.938 140.364 li
285.059 140.364 li
281.683 149.884 li
280.778 149.884 li
278.186 142.214 li
275.579 149.884 li
274.688 149.884 li
271.312 140.364 li
cp
@
292.643 146.359 mo
290.496 141.539 li
288.335 146.359 li
292.643 146.359 li
cp
290.009 140.296 mo
291.009 140.296 li
295.316 149.816 li
294.168 149.816 li
293.061 147.318 li
287.916 147.318 li
286.795 149.816 li
285.702 149.816 li
290.009 140.296 li
cp
f
292.643 146.359 mo
290.496 141.539 li
288.335 146.359 li
292.643 146.359 li
cp
290.009 140.296 mo
291.009 140.296 li
295.316 149.816 li
294.168 149.816 li
293.061 147.318 li
287.916 147.318 li
286.795 149.816 li
285.702 149.816 li
290.009 140.296 li
cp
@
299.201 141.35 mo
296.028 141.35 li
296.028 140.364 li
303.455 140.364 li
303.455 141.35 li
300.282 141.35 li
300.282 149.816 li
299.201 149.816 li
299.201 141.35 li
cp
f
299.201 141.35 mo
296.028 141.35 li
296.028 140.364 li
303.455 140.364 li
303.455 141.35 li
300.282 141.35 li
300.282 149.816 li
299.201 149.816 li
299.201 141.35 li
cp
@
306.193 140.364 mo
313.026 140.364 li
313.026 141.336 li
307.26 141.336 li
307.26 144.563 li
312.419 144.563 li
312.419 145.535 li
307.26 145.535 li
307.26 148.844 li
313.094 148.844 li
313.094 149.816 li
306.193 149.816 li
306.193 140.364 li
cp
f
306.193 140.364 mo
313.026 140.364 li
313.026 141.336 li
307.26 141.336 li
307.26 144.563 li
312.419 144.563 li
312.419 145.535 li
307.26 145.535 li
307.26 148.844 li
313.094 148.844 li
313.094 149.816 li
306.193 149.816 li
306.193 140.364 li
cp
@
319.95 145.185 mo
321.368 145.185 322.382 144.455 322.382 143.24 cv
322.382 143.213 li
322.382 142.052 321.49 141.35 319.964 141.35 cv
317.047 141.35 li
317.047 145.185 li
319.95 145.185 li
cp
315.98 140.364 mo
320.045 140.364 li
321.206 140.364 322.139 140.715 322.732 141.309 cv
323.191 141.768 323.462 142.43 323.462 143.172 cv
323.462 143.199 li
323.462 144.766 322.382 145.685 320.896 145.954 cv
323.799 149.816 li
322.489 149.816 li
319.748 146.144 li
319.721 146.144 li
317.047 146.144 li
317.047 149.816 li
315.98 149.816 li
315.98 140.364 li
cp
f
319.95 145.185 mo
321.368 145.185 322.382 144.455 322.382 143.24 cv
322.382 143.213 li
322.382 142.052 321.49 141.35 319.964 141.35 cv
317.047 141.35 li
317.047 145.185 li
319.95 145.185 li
cp
315.98 140.364 mo
320.045 140.364 li
321.206 140.364 322.139 140.715 322.732 141.309 cv
323.191 141.768 323.462 142.43 323.462 143.172 cv
323.462 143.199 li
323.462 144.766 322.382 145.685 320.896 145.954 cv
323.799 149.816 li
322.489 149.816 li
319.748 146.144 li
319.721 146.144 li
317.047 146.144 li
317.047 149.816 li
315.98 149.816 li
315.98 140.364 li
cp
@
331.547 139.04 mo
332.424 139.04 li
332.424 151.545 li
331.547 151.545 li
331.547 139.04 li
cp
f
331.547 139.04 mo
332.424 139.04 li
332.424 151.545 li
331.547 151.545 li
331.547 139.04 li
cp
@
340.901 140.364 mo
341.981 140.364 li
345.425 145.522 li
348.869 140.364 li
349.949 140.364 li
349.949 149.816 li
348.882 149.816 li
348.882 142.16 li
345.438 147.224 li
345.385 147.224 li
341.941 142.173 li
341.941 149.816 li
340.901 149.816 li
340.901 140.364 li
cp
f
340.901 140.364 mo
341.981 140.364 li
345.425 145.522 li
348.869 140.364 li
349.949 140.364 li
349.949 149.816 li
348.882 149.816 li
348.882 142.16 li
345.438 147.224 li
345.385 147.224 li
341.941 142.173 li
341.941 149.816 li
340.901 149.816 li
340.901 140.364 li
cp
@
353.214 145.859 mo
353.214 140.364 li
354.28 140.364 li
354.28 145.792 li
354.28 147.831 355.361 148.979 357.171 148.979 cv
358.912 148.979 360.02 147.926 360.02 145.859 cv
360.02 140.364 li
361.087 140.364 li
361.087 145.778 li
361.087 148.533 359.507 149.965 357.144 149.965 cv
354.808 149.965 353.214 148.533 353.214 145.859 cv
cp
f
353.214 145.859 mo
353.214 140.364 li
354.28 140.364 li
354.28 145.792 li
354.28 147.831 355.361 148.979 357.171 148.979 cv
358.912 148.979 360.02 147.926 360.02 145.859 cv
360.02 140.364 li
361.087 140.364 li
361.087 145.778 li
361.087 148.533 359.507 149.965 357.144 149.965 cv
354.808 149.965 353.214 148.533 353.214 145.859 cv
cp
@
363.729 148.439 mo
364.391 147.656 li
365.377 148.547 366.322 148.992 367.632 148.992 cv
368.901 148.992 369.738 148.317 369.738 147.386 cv
369.738 147.358 li
369.738 146.48 369.266 145.981 367.281 145.563 cv
365.106 145.09 364.107 144.388 364.107 142.835 cv
364.107 142.808 li
364.107 141.322 365.417 140.229 367.214 140.229 cv
368.591 140.229 369.576 140.62 370.535 141.39 cv
369.914 142.214 li
369.036 141.498 368.159 141.188 367.187 141.188 cv
365.958 141.188 365.175 141.862 365.175 142.713 cv
365.175 142.74 li
365.175 143.631 365.66 144.131 367.74 144.577 cv
369.847 145.036 370.819 145.806 370.819 147.251 cv
370.819 147.277 li
370.819 148.898 369.469 149.951 367.592 149.951 cv
366.093 149.951 364.863 149.452 363.729 148.439 cv
cp
f
363.729 148.439 mo
364.391 147.656 li
365.377 148.547 366.322 148.992 367.632 148.992 cv
368.901 148.992 369.738 148.317 369.738 147.386 cv
369.738 147.358 li
369.738 146.48 369.266 145.981 367.281 145.563 cv
365.106 145.09 364.107 144.388 364.107 142.835 cv
364.107 142.808 li
364.107 141.322 365.417 140.229 367.214 140.229 cv
368.591 140.229 369.576 140.62 370.535 141.39 cv
369.914 142.214 li
369.036 141.498 368.159 141.188 367.187 141.188 cv
365.958 141.188 365.175 141.862 365.175 142.713 cv
365.175 142.74 li
365.175 143.631 365.66 144.131 367.74 144.577 cv
369.847 145.036 370.819 145.806 370.819 147.251 cv
370.819 147.277 li
370.819 148.898 369.469 149.951 367.592 149.951 cv
366.093 149.951 364.863 149.452 363.729 148.439 cv
cp
@
373.828 140.364 mo
374.895 140.364 li
374.895 149.816 li
373.828 149.816 li
373.828 140.364 li
cp
f
373.828 140.364 mo
374.895 140.364 li
374.895 149.816 li
373.828 149.816 li
373.828 140.364 li
cp
@
377.985 145.117 mo
377.985 145.09 li
377.985 142.416 379.984 140.202 382.766 140.202 cv
384.481 140.202 385.508 140.809 386.453 141.701 cv
385.724 142.484 li
384.927 141.728 384.035 141.188 382.753 141.188 cv
380.659 141.188 379.093 142.889 379.093 145.063 cv
379.093 145.09 li
379.093 147.277 380.673 148.992 382.753 148.992 cv
384.049 148.992 384.899 148.493 385.805 147.629 cv
386.507 148.317 li
385.521 149.316 384.44 149.979 382.726 149.979 cv
379.998 149.979 377.985 147.831 377.985 145.117 cv
cp
f
377.985 145.117 mo
377.985 145.09 li
377.985 142.416 379.984 140.202 382.766 140.202 cv
384.481 140.202 385.508 140.809 386.453 141.701 cv
385.724 142.484 li
384.927 141.728 384.035 141.188 382.753 141.188 cv
380.659 141.188 379.093 142.889 379.093 145.063 cv
379.093 145.09 li
379.093 147.277 380.673 148.992 382.753 148.992 cv
384.049 148.992 384.899 148.493 385.805 147.629 cv
386.507 148.317 li
385.521 149.316 384.44 149.979 382.726 149.979 cv
379.998 149.979 377.985 147.831 377.985 145.117 cv
cp
@
397.183 148.831 mo
399.573 148.831 401.099 147.21 401.099 145.117 cv
401.099 145.09 li
401.099 142.997 399.573 141.35 397.183 141.35 cv
394.968 141.35 li
394.968 148.831 li
397.183 148.831 li
cp
393.901 140.364 mo
397.183 140.364 li
400.153 140.364 402.206 142.403 402.206 145.063 cv
402.206 145.09 li
402.206 147.75 400.153 149.816 397.183 149.816 cv
393.901 149.816 li
393.901 140.364 li
cp
f
397.183 148.831 mo
399.573 148.831 401.099 147.21 401.099 145.117 cv
401.099 145.09 li
401.099 142.997 399.573 141.35 397.183 141.35 cv
394.968 141.35 li
394.968 148.831 li
397.183 148.831 li
cp
393.901 140.364 mo
397.183 140.364 li
400.153 140.364 402.206 142.403 402.206 145.063 cv
402.206 145.09 li
402.206 147.75 400.153 149.816 397.183 149.816 cv
393.901 149.816 li
393.901 140.364 li
cp
@
405.296 140.364 mo
406.362 140.364 li
406.362 149.816 li
405.296 149.816 li
405.296 140.364 li
cp
f
405.296 140.364 mo
406.362 140.364 li
406.362 149.816 li
405.296 149.816 li
405.296 140.364 li
cp
@
413.842 145.185 mo
415.26 145.185 416.273 144.455 416.273 143.24 cv
416.273 143.213 li
416.273 142.052 415.382 141.35 413.855 141.35 cv
410.938 141.35 li
410.938 145.185 li
413.842 145.185 li
cp
409.872 140.364 mo
413.937 140.364 li
415.098 140.364 416.03 140.715 416.624 141.309 cv
417.083 141.768 417.354 142.43 417.354 143.172 cv
417.354 143.199 li
417.354 144.766 416.273 145.685 414.787 145.954 cv
417.69 149.816 li
416.381 149.816 li
413.64 146.144 li
413.612 146.144 li
410.938 146.144 li
410.938 149.816 li
409.872 149.816 li
409.872 140.364 li
cp
f
413.842 145.185 mo
415.26 145.185 416.273 144.455 416.273 143.24 cv
416.273 143.213 li
416.273 142.052 415.382 141.35 413.855 141.35 cv
410.938 141.35 li
410.938 145.185 li
413.842 145.185 li
cp
409.872 140.364 mo
413.937 140.364 li
415.098 140.364 416.03 140.715 416.624 141.309 cv
417.083 141.768 417.354 142.43 417.354 143.172 cv
417.354 143.199 li
417.354 144.766 416.273 145.685 414.787 145.954 cv
417.69 149.816 li
416.381 149.816 li
413.64 146.144 li
413.612 146.144 li
410.938 146.144 li
410.938 149.816 li
409.872 149.816 li
409.872 140.364 li
cp
@
420.375 140.364 mo
427.208 140.364 li
427.208 141.336 li
421.441 141.336 li
421.441 144.563 li
426.601 144.563 li
426.601 145.535 li
421.441 145.535 li
421.441 148.844 li
427.275 148.844 li
427.275 149.816 li
420.375 149.816 li
420.375 140.364 li
cp
f
420.375 140.364 mo
427.208 140.364 li
427.208 141.336 li
421.441 141.336 li
421.441 144.563 li
426.601 144.563 li
426.601 145.535 li
421.441 145.535 li
421.441 148.844 li
427.275 148.844 li
427.275 149.816 li
420.375 149.816 li
420.375 140.364 li
cp
@
429.743 145.117 mo
429.743 145.09 li
429.743 142.416 431.742 140.202 434.523 140.202 cv
436.239 140.202 437.266 140.809 438.211 141.701 cv
437.481 142.484 li
436.685 141.728 435.793 141.188 434.511 141.188 cv
432.417 141.188 430.851 142.889 430.851 145.063 cv
430.851 145.09 li
430.851 147.277 432.431 148.992 434.511 148.992 cv
435.807 148.992 436.657 148.493 437.563 147.629 cv
438.265 148.317 li
437.278 149.316 436.198 149.979 434.483 149.979 cv
431.756 149.979 429.743 147.831 429.743 145.117 cv
cp
f
429.743 145.117 mo
429.743 145.09 li
429.743 142.416 431.742 140.202 434.523 140.202 cv
436.239 140.202 437.266 140.809 438.211 141.701 cv
437.481 142.484 li
436.685 141.728 435.793 141.188 434.511 141.188 cv
432.417 141.188 430.851 142.889 430.851 145.063 cv
430.851 145.09 li
430.851 147.277 432.431 148.992 434.511 148.992 cv
435.807 148.992 436.657 148.493 437.563 147.629 cv
438.265 148.317 li
437.278 149.316 436.198 149.979 434.483 149.979 cv
431.756 149.979 429.743 147.831 429.743 145.117 cv
cp
@
443.365 141.35 mo
440.192 141.35 li
440.192 140.364 li
447.619 140.364 li
447.619 141.35 li
444.445 141.35 li
444.445 149.816 li
443.365 149.816 li
443.365 141.35 li
cp
f
443.365 141.35 mo
440.192 141.35 li
440.192 140.364 li
447.619 140.364 li
447.619 141.35 li
444.445 141.35 li
444.445 149.816 li
443.365 149.816 li
443.365 141.35 li
cp
@
457.825 145.117 mo
457.825 145.09 li
457.825 142.943 456.259 141.188 454.098 141.188 cv
451.938 141.188 450.397 142.916 450.397 145.063 cv
450.397 145.09 li
450.397 147.237 451.964 148.992 454.125 148.992 cv
456.285 148.992 457.825 147.264 457.825 145.117 cv
cp
449.29 145.117 mo
449.29 145.09 li
449.29 142.484 451.248 140.202 454.125 140.202 cv
457.001 140.202 458.933 142.457 458.933 145.063 cv
458.945 145.076 458.945 145.076 458.933 145.09 cv
458.933 147.696 456.975 149.979 454.098 149.979 cv
451.222 149.979 449.29 147.724 449.29 145.117 cv
cp
f
457.825 145.117 mo
457.825 145.09 li
457.825 142.943 456.259 141.188 454.098 141.188 cv
451.938 141.188 450.397 142.916 450.397 145.063 cv
450.397 145.09 li
450.397 147.237 451.964 148.992 454.125 148.992 cv
456.285 148.992 457.825 147.264 457.825 145.117 cv
cp
449.29 145.117 mo
449.29 145.09 li
449.29 142.484 451.248 140.202 454.125 140.202 cv
457.001 140.202 458.933 142.457 458.933 145.063 cv
458.945 145.076 458.945 145.076 458.933 145.09 cv
458.933 147.696 456.975 149.979 454.098 149.979 cv
451.222 149.979 449.29 147.724 449.29 145.117 cv
cp
@
465.896 145.185 mo
467.313 145.185 468.327 144.455 468.327 143.24 cv
468.327 143.213 li
468.327 142.052 467.436 141.35 465.909 141.35 cv
462.992 141.35 li
462.992 145.185 li
465.896 145.185 li
cp
461.926 140.364 mo
465.99 140.364 li
467.151 140.364 468.084 140.715 468.678 141.309 cv
469.137 141.768 469.407 142.43 469.407 143.172 cv
469.407 143.199 li
469.407 144.766 468.327 145.685 466.841 145.954 cv
469.744 149.816 li
468.435 149.816 li
465.693 146.144 li
465.666 146.144 li
462.992 146.144 li
462.992 149.816 li
461.926 149.816 li
461.926 140.364 li
cp
f
465.896 145.185 mo
467.313 145.185 468.327 144.455 468.327 143.24 cv
468.327 143.213 li
468.327 142.052 467.436 141.35 465.909 141.35 cv
462.992 141.35 li
462.992 145.185 li
465.896 145.185 li
cp
461.926 140.364 mo
465.99 140.364 li
467.151 140.364 468.084 140.715 468.678 141.309 cv
469.137 141.768 469.407 142.43 469.407 143.172 cv
469.407 143.199 li
469.407 144.766 468.327 145.685 466.841 145.954 cv
469.744 149.816 li
468.435 149.816 li
465.693 146.144 li
465.666 146.144 li
462.992 146.144 li
462.992 149.816 li
461.926 149.816 li
461.926 140.364 li
cp
@
537.777 45.0894 mo
495.79 45.0894 li
495.79 32.2061 li
554.478 32.2061 li
554.478 43.2998 li
516.783 115.706 li
500.322 115.706 li
537.777 45.0894 li
cp
f
612.32 71.2163 mo
612.32 71.1733 li
612.32 69.5669 611.163 68.688 609.213 68.688 cv
605.377 68.688 li
605.377 73.7231 li
609.235 73.7231 li
611.121 73.7231 612.32 72.7378 612.32 71.2163 cv
cp
f
612.364 81.2866 mo
608.678 76.0591 li
608.635 76.0591 li
605.377 76.0591 li
605.377 81.2866 li
602.742 81.2866 li
602.742 66.2876 li
609.428 66.2876 li
611.313 66.2876 612.793 66.8447 613.756 67.7881 cv
614.549 68.6021 614.998 69.7163 614.998 71.0234 cv
614.998 71.0669 li
614.998 73.5303 613.521 75.0093 611.42 75.6089 cv
615.471 81.2866 li
612.364 81.2866 li
cp
601.238 74.1948 mo
601.238 90.6563 593.127 103.896 580.125 103.896 cv
567.123 103.896 558.772 90.4175 558.772 73.9561 cv
558.772 73.7178 li
558.772 57.1367 567.003 44.0156 579.887 44.0156 cv
592.769 44.0156 601.238 57.4946 601.238 73.9561 cv
601.238 74.1948 li
cp
580.125 30.7749 mo
558.177 30.7749 543.623 50.0991 543.623 73.9561 cv
543.623 74.1948 li
543.623 98.0518 557.938 117.138 579.887 117.138 cv
601.834 117.138 616.388 97.813 616.388 73.9561 cv
616.388 73.7178 li
616.388 49.8608 601.955 30.7749 580.125 30.7749 cv
cp
1 1 1 1 cmyk
f
564.39 75.373 mo
558.434 66.2876 li
561.542 66.2876 li
565.74 72.9307 li
569.983 66.2876 li
573.005 66.2876 li
567.048 75.3086 li
567.048 81.2866 li
564.39 81.2866 li
564.39 75.373 li
cp
0 0 0 1 cmyk
f
574.031 66.2876 mo
585.152 66.2876 li
585.152 68.645 li
576.667 68.645 li
576.667 72.5449 li
584.188 72.5449 li
584.188 74.9019 li
576.667 74.9019 li
576.667 78.9297 li
585.26 78.9297 li
585.26 81.2866 li
574.031 81.2866 li
574.031 66.2876 li
cp
f
596.188 75.3301 mo
593.595 69.3306 li
591.022 75.3301 li
596.188 75.3301 li
cp
592.416 66.1802 mo
594.857 66.1802 li
601.458 81.2866 li
598.673 81.2866 li
597.152 77.6655 li
590.06 77.6655 li
588.517 81.2866 li
585.816 81.2866 li
592.416 66.1802 li
cp
f
616.798 79.1016 mo
618.384 77.2163 li
619.819 78.459 621.254 79.166 623.118 79.166 cv
624.747 79.166 625.775 78.416 625.775 77.2803 cv
625.775 77.2368 li
625.775 76.166 625.176 75.5874 622.39 74.9443 cv
619.197 74.1733 617.397 73.2305 617.397 70.4658 cv
617.397 70.4233 li
617.397 67.8521 619.541 66.0732 622.519 66.0732 cv
624.704 66.0732 626.439 66.7383 627.961 67.959 cv
626.546 69.9521 li
625.197 68.9453 623.847 68.4092 622.476 68.4092 cv
620.933 68.4092 620.034 69.2017 620.034 70.188 cv
620.034 70.2305 li
620.034 71.3877 620.718 71.9019 623.59 72.5874 cv
626.761 73.3589 628.411 74.4946 628.411 76.9805 cv
628.411 77.0229 li
628.411 79.8296 626.204 81.501 623.055 81.501 cv
620.762 81.501 618.598 80.7085 616.798 79.1016 cv
cp
f
112.081 281.726 mo
112.081 281.963 112.014 282.083 111.877 282.083 cv
111.307 282.083 110.626 282.055 109.835 282.002 cv
109.079 281.95 108.442 281.924 107.923 281.924 cv
107.42 281.924 106.728 281.95 105.843 282.002 cv
104.917 282.055 104.168 282.083 103.598 282.083 cv
103.462 282.083 103.394 281.963 103.394 281.726 cv
103.394 281.512 103.453 281.399 103.573 281.381 cv
104.721 281.247 105.295 280.967 105.295 280.549 cv
105.295 280.311 105.108 280.002 104.733 279.627 cv
99.6699 274.475 li
99.397 274.203 99.1611 274.025 98.9614 273.938 cv
98.7617 273.854 98.4878 273.811 98.1387 273.811 cv
98.1387 279.223 li
98.1387 279.811 98.2129 280.227 98.3618 280.469 cv
98.5103 280.711 98.7744 280.903 99.1528 281.042 cv
99.5313 281.184 100.074 281.297 100.779 281.381 cv
100.924 281.399 100.996 281.512 100.996 281.726 cv
100.996 281.963 100.928 282.083 100.792 282.083 cv
100.222 282.083 99.542 282.055 98.751 282.002 cv
97.9912 281.95 97.3491 281.924 96.8267 281.924 cv
96.312 281.924 95.6782 281.95 94.9277 282.002 cv
94.1367 282.055 93.457 282.083 92.8862 282.083 cv
92.7505 282.083 92.6831 281.963 92.6831 281.726 cv
92.6831 281.512 92.7505 281.399 92.8862 281.381 cv
93.916 281.262 94.6147 281.071 94.9849 280.807 cv
95.355 280.542 95.54 280.014 95.54 279.221 cv
95.54 267.194 li
95.54 266.597 95.4653 266.178 95.3169 265.935 cv
95.167 265.692 94.9058 265.501 94.5317 265.36 cv
94.1572 265.219 93.6094 265.106 92.8862 265.021 cv
92.7505 265.021 92.6831 264.905 92.6831 264.67 cv
92.6831 264.438 92.7505 264.321 92.8862 264.321 cv
93.457 264.321 94.1367 264.348 94.9277 264.4 cv
95.6782 264.454 96.312 264.479 96.8267 264.479 cv
97.3491 264.479 97.9912 264.454 98.751 264.4 cv
99.542 264.348 100.222 264.321 100.792 264.321 cv
100.928 264.321 100.996 264.438 100.996 264.67 cv
100.996 264.905 100.928 265.021 100.792 265.021 cv
100.069 265.106 99.52 265.22 99.1455 265.36 cv
98.7715 265.501 98.5103 265.694 98.3618 265.936 cv
98.2129 266.179 98.1387 266.6 98.1387 267.198 cv
98.1387 272.999 li
98.4707 272.999 98.7383 272.956 98.9424 272.872 cv
99.1465 272.786 99.3887 272.607 99.6699 272.334 cv
105.27 266.803 li
105.728 266.364 105.958 266.046 105.958 265.847 cv
105.958 265.616 105.849 265.44 105.633 265.325 cv
105.416 265.209 104.98 265.108 104.326 265.021 cv
104.189 265.021 104.122 264.905 104.122 264.67 cv
104.122 264.438 104.198 264.321 104.352 264.321 cv
104.751 264.321 105.278 264.348 105.932 264.4 cv
106.628 264.454 107.205 264.479 107.664 264.479 cv
108.123 264.479 108.631 264.448 109.191 264.387 cv
109.659 264.343 110.058 264.321 110.389 264.321 cv
110.508 264.321 110.567 264.438 110.567 264.67 cv
110.567 264.905 110.5 265.021 110.364 265.021 cv
109.55 265.124 108.909 265.292 108.443 265.526 cv
107.976 265.756 107.417 266.188 106.764 266.817 cv
100.934 272.358 li
108.166 279.716 li
108.669 280.242 109.166 280.622 109.656 280.854 cv
110.146 281.088 110.878 281.262 111.851 281.381 cv
112.004 281.399 112.081 281.512 112.081 281.726 cv
cp
0 0 0 0 cmyk
f
.5 lw
112.081 281.726 mo
112.081 281.963 112.014 282.083 111.877 282.083 cv
111.307 282.083 110.626 282.055 109.835 282.002 cv
109.079 281.95 108.442 281.924 107.923 281.924 cv
107.42 281.924 106.728 281.95 105.843 282.002 cv
104.917 282.055 104.168 282.083 103.598 282.083 cv
103.462 282.083 103.394 281.963 103.394 281.726 cv
103.394 281.512 103.453 281.399 103.573 281.381 cv
104.721 281.247 105.295 280.967 105.295 280.549 cv
105.295 280.311 105.108 280.002 104.733 279.627 cv
99.6699 274.475 li
99.397 274.203 99.1611 274.025 98.9614 273.938 cv
98.7617 273.854 98.4878 273.811 98.1387 273.811 cv
98.1387 279.223 li
98.1387 279.811 98.2129 280.227 98.3618 280.469 cv
98.5103 280.711 98.7744 280.903 99.1528 281.042 cv
99.5313 281.184 100.074 281.297 100.779 281.381 cv
100.924 281.399 100.996 281.512 100.996 281.726 cv
100.996 281.963 100.928 282.083 100.792 282.083 cv
100.222 282.083 99.542 282.055 98.751 282.002 cv
97.9912 281.95 97.3491 281.924 96.8267 281.924 cv
96.312 281.924 95.6782 281.95 94.9277 282.002 cv
94.1367 282.055 93.457 282.083 92.8862 282.083 cv
92.7505 282.083 92.6831 281.963 92.6831 281.726 cv
92.6831 281.512 92.7505 281.399 92.8862 281.381 cv
93.916 281.262 94.6147 281.071 94.9849 280.807 cv
95.355 280.542 95.54 280.014 95.54 279.221 cv
95.54 267.194 li
95.54 266.597 95.4653 266.178 95.3169 265.935 cv
95.167 265.692 94.9058 265.501 94.5317 265.36 cv
94.1572 265.219 93.6094 265.106 92.8862 265.021 cv
92.7505 265.021 92.6831 264.905 92.6831 264.67 cv
92.6831 264.438 92.7505 264.321 92.8862 264.321 cv
93.457 264.321 94.1367 264.348 94.9277 264.4 cv
95.6782 264.454 96.312 264.479 96.8267 264.479 cv
97.3491 264.479 97.9912 264.454 98.751 264.4 cv
99.542 264.348 100.222 264.321 100.792 264.321 cv
100.928 264.321 100.996 264.438 100.996 264.67 cv
100.996 264.905 100.928 265.021 100.792 265.021 cv
100.069 265.106 99.52 265.22 99.1455 265.36 cv
98.7715 265.501 98.5103 265.694 98.3618 265.936 cv
98.2129 266.179 98.1387 266.6 98.1387 267.198 cv
98.1387 272.999 li
98.4707 272.999 98.7383 272.956 98.9424 272.872 cv
99.1465 272.786 99.3887 272.607 99.6699 272.334 cv
105.27 266.803 li
105.728 266.364 105.958 266.046 105.958 265.847 cv
105.958 265.616 105.849 265.44 105.633 265.325 cv
105.416 265.209 104.98 265.108 104.326 265.021 cv
104.189 265.021 104.122 264.905 104.122 264.67 cv
104.122 264.438 104.198 264.321 104.352 264.321 cv
104.751 264.321 105.278 264.348 105.932 264.4 cv
106.628 264.454 107.205 264.479 107.664 264.479 cv
108.123 264.479 108.631 264.448 109.191 264.387 cv
109.659 264.343 110.058 264.321 110.389 264.321 cv
110.508 264.321 110.567 264.438 110.567 264.67 cv
110.567 264.905 110.5 265.021 110.364 265.021 cv
109.55 265.124 108.909 265.292 108.443 265.526 cv
107.976 265.756 107.417 266.188 106.764 266.817 cv
100.934 272.358 li
108.166 279.716 li
108.669 280.242 109.166 280.622 109.656 280.854 cv
110.146 281.088 110.878 281.262 111.851 281.381 cv
112.004 281.399 112.081 281.512 112.081 281.726 cv
cp
@
125.949 281.726 mo
125.949 281.963 125.881 282.083 125.745 282.083 cv
125.175 282.083 124.499 282.055 123.717 282.002 cv
122.969 281.95 122.336 281.924 121.818 281.924 cv
121.3 281.924 120.667 281.95 119.919 282.002 cv
119.128 282.055 118.444 282.083 117.865 282.083 cv
117.729 282.083 117.661 281.963 117.661 281.726 cv
117.661 281.512 117.729 281.399 117.865 281.381 cv
118.895 281.262 119.593 281.071 119.963 280.807 cv
120.333 280.542 120.519 280.014 120.519 279.221 cv
120.519 267.194 li
120.519 266.597 120.444 266.178 120.295 265.935 cv
120.146 265.692 119.884 265.501 119.51 265.36 cv
119.136 265.219 118.588 265.106 117.865 265.021 cv
117.729 265.021 117.661 264.905 117.661 264.67 cv
117.661 264.438 117.729 264.321 117.865 264.321 cv
118.444 264.321 119.128 264.348 119.919 264.4 cv
120.667 264.454 121.3 264.479 121.818 264.479 cv
122.336 264.479 122.969 264.454 123.717 264.4 cv
124.499 264.348 125.175 264.321 125.745 264.321 cv
125.881 264.321 125.949 264.438 125.949 264.67 cv
125.949 264.905 125.881 265.021 125.745 265.021 cv
125.03 265.106 124.486 265.219 124.111 265.36 cv
123.737 265.501 123.479 265.69 123.334 265.929 cv
123.189 266.168 123.117 266.588 123.117 267.194 cv
123.117 279.221 li
123.117 279.809 123.189 280.225 123.334 280.467 cv
123.479 280.711 123.736 280.903 124.106 281.042 cv
124.476 281.184 125.018 281.297 125.732 281.381 cv
125.877 281.399 125.949 281.512 125.949 281.726 cv
cp
f
125.949 281.726 mo
125.949 281.963 125.881 282.083 125.745 282.083 cv
125.175 282.083 124.499 282.055 123.717 282.002 cv
122.969 281.95 122.336 281.924 121.818 281.924 cv
121.3 281.924 120.667 281.95 119.919 282.002 cv
119.128 282.055 118.444 282.083 117.865 282.083 cv
117.729 282.083 117.661 281.963 117.661 281.726 cv
117.661 281.512 117.729 281.399 117.865 281.381 cv
118.895 281.262 119.593 281.071 119.963 280.807 cv
120.333 280.542 120.519 280.014 120.519 279.221 cv
120.519 267.194 li
120.519 266.597 120.444 266.178 120.295 265.935 cv
120.146 265.692 119.884 265.501 119.51 265.36 cv
119.136 265.219 118.588 265.106 117.865 265.021 cv
117.729 265.021 117.661 264.905 117.661 264.67 cv
117.661 264.438 117.729 264.321 117.865 264.321 cv
118.444 264.321 119.128 264.348 119.919 264.4 cv
120.667 264.454 121.3 264.479 121.818 264.479 cv
122.336 264.479 122.969 264.454 123.717 264.4 cv
124.499 264.348 125.175 264.321 125.745 264.321 cv
125.881 264.321 125.949 264.438 125.949 264.67 cv
125.949 264.905 125.881 265.021 125.745 265.021 cv
125.03 265.106 124.486 265.219 124.111 265.36 cv
123.737 265.501 123.479 265.69 123.334 265.929 cv
123.189 266.168 123.117 266.588 123.117 267.194 cv
123.117 279.221 li
123.117 279.809 123.189 280.225 123.334 280.467 cv
123.479 280.711 123.736 280.903 124.106 281.042 cv
124.476 281.184 125.018 281.297 125.732 281.381 cv
125.877 281.399 125.949 281.512 125.949 281.726 cv
cp
@
149.683 268.53 mo
149.683 268.692 149.53 268.772 149.224 268.772 cv
149.088 268.772 149.002 268.713 148.969 268.592 cv
148.603 267.391 148.08 266.542 147.399 266.042 cv
146.719 265.542 145.71 265.292 144.375 265.292 cv
143.175 265.292 li
142.758 265.292 142.473 265.36 142.32 265.497 cv
142.167 265.633 142.09 265.888 142.09 266.262 cv
142.09 279.223 li
142.09 279.811 142.165 280.227 142.313 280.469 cv
142.462 280.711 142.726 280.903 143.104 281.042 cv
143.483 281.184 144.025 281.297 144.731 281.381 cv
144.867 281.399 144.935 281.512 144.935 281.726 cv
144.935 281.963 144.867 282.083 144.731 282.083 cv
144.161 282.083 143.481 282.055 142.69 282.002 cv
141.938 281.95 141.31 281.924 140.804 281.924 cv
140.281 281.924 139.639 281.95 138.879 282.002 cv
138.089 282.055 137.409 282.083 136.838 282.083 cv
136.703 282.083 136.635 281.963 136.635 281.726 cv
136.635 281.512 136.703 281.399 136.838 281.381 cv
137.868 281.262 138.567 281.071 138.937 280.807 cv
139.307 280.542 139.492 280.014 139.492 279.223 cv
139.492 266.262 li
139.492 265.888 139.416 265.633 139.262 265.497 cv
139.109 265.36 138.821 265.292 138.396 265.292 cv
137.402 265.292 li
136.205 265.292 135.117 265.598 134.141 266.208 cv
133.163 266.817 132.526 267.608 132.229 268.581 cv
132.187 268.709 132.093 268.772 131.949 268.772 cv
131.659 268.772 131.515 268.679 131.515 268.491 cv
131.992 267.204 132.444 265.746 132.871 264.118 cv
134.027 264.359 136.674 264.479 140.81 264.479 cv
145.056 264.479 147.757 264.359 148.915 264.118 cv
149.034 265.226 149.291 266.696 149.683 268.53 cv
cp
f
149.683 268.53 mo
149.683 268.692 149.53 268.772 149.224 268.772 cv
149.088 268.772 149.002 268.713 148.969 268.592 cv
148.603 267.391 148.08 266.542 147.399 266.042 cv
146.719 265.542 145.71 265.292 144.375 265.292 cv
143.175 265.292 li
142.758 265.292 142.473 265.36 142.32 265.497 cv
142.167 265.633 142.09 265.888 142.09 266.262 cv
142.09 279.223 li
142.09 279.811 142.165 280.227 142.313 280.469 cv
142.462 280.711 142.726 280.903 143.104 281.042 cv
143.483 281.184 144.025 281.297 144.731 281.381 cv
144.867 281.399 144.935 281.512 144.935 281.726 cv
144.935 281.963 144.867 282.083 144.731 282.083 cv
144.161 282.083 143.481 282.055 142.69 282.002 cv
141.938 281.95 141.31 281.924 140.804 281.924 cv
140.281 281.924 139.639 281.95 138.879 282.002 cv
138.089 282.055 137.409 282.083 136.838 282.083 cv
136.703 282.083 136.635 281.963 136.635 281.726 cv
136.635 281.512 136.703 281.399 136.838 281.381 cv
137.868 281.262 138.567 281.071 138.937 280.807 cv
139.307 280.542 139.492 280.014 139.492 279.223 cv
139.492 266.262 li
139.492 265.888 139.416 265.633 139.262 265.497 cv
139.109 265.36 138.821 265.292 138.396 265.292 cv
137.402 265.292 li
136.205 265.292 135.117 265.598 134.141 266.208 cv
133.163 266.817 132.526 267.608 132.229 268.581 cv
132.187 268.709 132.093 268.772 131.949 268.772 cv
131.659 268.772 131.515 268.679 131.515 268.491 cv
131.992 267.204 132.444 265.746 132.871 264.118 cv
134.027 264.359 136.674 264.479 140.81 264.479 cv
145.056 264.479 147.757 264.359 148.915 264.118 cv
149.034 265.226 149.291 266.696 149.683 268.53 cv
cp
@
171.813 277.36 mo
171.506 278.721 171.208 280.167 170.92 281.698 cv
170.435 281.698 169.555 281.813 168.279 282.042 cv
166.646 282.339 165.439 282.489 164.657 282.489 cv
162.718 282.489 161.017 282.106 159.554 281.342 cv
158.091 280.577 156.951 279.482 156.135 278.057 cv
155.318 276.633 154.91 275.05 154.91 273.307 cv
154.91 271.59 155.342 270.006 156.205 268.556 cv
157.069 267.108 158.257 265.979 159.772 265.17 cv
161.287 264.363 162.992 263.959 164.89 263.959 cv
165.689 263.959 166.761 264.042 168.105 264.21 cv
169.152 264.344 169.914 264.411 170.389 264.411 cv
170.5 265.602 170.696 267.047 170.977 268.75 cv
170.977 268.885 170.839 268.954 170.564 268.954 cv
170.392 268.954 170.288 268.885 170.254 268.75 cv
169.947 267.594 169.288 266.643 168.276 265.894 cv
167.264 265.147 166.099 264.772 164.78 264.772 cv
162.781 264.772 161.104 265.598 159.748 267.247 cv
158.39 268.897 157.712 270.917 157.712 273.307 cv
157.712 275.629 158.385 277.604 159.729 279.232 cv
161.072 280.862 162.715 281.675 164.654 281.675 cv
167.692 281.675 169.844 280.238 171.111 277.361 cv
171.17 277.223 171.286 277.156 171.456 277.156 cv
171.694 277.156 171.813 277.223 171.813 277.36 cv
cp
f
171.813 277.36 mo
171.506 278.721 171.208 280.167 170.92 281.698 cv
170.435 281.698 169.555 281.813 168.279 282.042 cv
166.646 282.339 165.439 282.489 164.657 282.489 cv
162.718 282.489 161.017 282.106 159.554 281.342 cv
158.091 280.577 156.951 279.482 156.135 278.057 cv
155.318 276.633 154.91 275.05 154.91 273.307 cv
154.91 271.59 155.342 270.006 156.205 268.556 cv
157.069 267.108 158.257 265.979 159.772 265.17 cv
161.287 264.363 162.992 263.959 164.89 263.959 cv
165.689 263.959 166.761 264.042 168.105 264.21 cv
169.152 264.344 169.914 264.411 170.389 264.411 cv
170.5 265.602 170.696 267.047 170.977 268.75 cv
170.977 268.885 170.839 268.954 170.564 268.954 cv
170.392 268.954 170.288 268.885 170.254 268.75 cv
169.947 267.594 169.288 266.643 168.276 265.894 cv
167.264 265.147 166.099 264.772 164.78 264.772 cv
162.781 264.772 161.104 265.598 159.748 267.247 cv
158.39 268.897 157.712 270.917 157.712 273.307 cv
157.712 275.629 158.385 277.604 159.729 279.232 cv
161.072 280.862 162.715 281.675 164.654 281.675 cv
167.692 281.675 169.844 280.238 171.111 277.361 cv
171.17 277.223 171.286 277.156 171.456 277.156 cv
171.694 277.156 171.813 277.223 171.813 277.36 cv
cp
@
197.929 281.726 mo
197.929 281.963 197.861 282.083 197.725 282.083 cv
197.146 282.083 196.462 282.055 195.671 282.002 cv
194.923 281.95 194.29 281.924 193.771 281.924 cv
193.252 281.924 192.653 281.95 191.973 282.002 cv
191.259 282.055 190.618 282.083 190.048 282.083 cv
189.912 282.083 189.844 281.963 189.844 281.726 cv
189.844 281.512 189.916 281.399 190.061 281.381 cv
190.776 281.297 191.308 281.18 191.656 281.03 cv
192.005 280.881 192.228 280.686 192.326 280.442 cv
192.425 280.2 192.473 279.793 192.473 279.221 cv
192.473 273.541 li
182.734 273.541 li
182.734 279.221 li
182.734 279.793 182.783 280.2 182.88 280.442 cv
182.978 280.686 183.202 280.881 183.551 281.03 cv
183.9 281.18 184.436 281.297 185.16 281.381 cv
185.295 281.399 185.363 281.512 185.363 281.726 cv
185.363 281.963 185.295 282.083 185.16 282.083 cv
184.589 282.083 183.948 282.055 183.234 282.002 cv
182.554 281.95 181.954 281.924 181.436 281.924 cv
180.917 281.924 180.28 281.95 179.523 282.002 cv
178.732 282.055 178.051 282.083 177.482 282.083 cv
177.345 282.083 177.277 281.963 177.277 281.726 cv
177.277 281.512 177.345 281.399 177.482 281.381 cv
178.51 281.262 179.21 281.071 179.58 280.807 cv
179.95 280.542 180.135 280.014 180.135 279.221 cv
180.135 267.194 li
180.135 266.597 180.061 266.178 179.911 265.935 cv
179.763 265.692 179.502 265.501 179.127 265.36 cv
178.753 265.219 178.205 265.106 177.482 265.021 cv
177.345 265.021 177.277 264.905 177.277 264.67 cv
177.277 264.438 177.345 264.321 177.482 264.321 cv
178.051 264.321 178.732 264.348 179.523 264.4 cv
180.28 264.454 180.917 264.479 181.436 264.479 cv
181.954 264.479 182.554 264.454 183.234 264.4 cv
183.948 264.348 184.589 264.321 185.16 264.321 cv
185.295 264.321 185.363 264.438 185.363 264.67 cv
185.363 264.905 185.295 265.021 185.16 265.021 cv
184.496 265.098 183.993 265.201 183.652 265.328 cv
183.312 265.456 183.074 265.628 182.938 265.846 cv
182.802 266.063 182.734 266.512 182.734 267.194 cv
182.734 272.727 li
192.473 272.727 li
192.473 267.194 li
192.473 266.623 192.425 266.215 192.326 265.967 cv
192.228 265.72 192.007 265.521 191.663 265.374 cv
191.318 265.225 190.779 265.106 190.048 265.021 cv
189.912 265.021 189.844 264.905 189.844 264.67 cv
189.844 264.438 189.912 264.321 190.048 264.321 cv
190.618 264.321 191.259 264.348 191.973 264.4 cv
192.653 264.454 193.252 264.479 193.771 264.479 cv
194.29 264.479 194.923 264.454 195.671 264.4 cv
196.462 264.348 197.146 264.321 197.725 264.321 cv
197.861 264.321 197.929 264.438 197.929 264.67 cv
197.929 264.905 197.861 265.021 197.725 265.021 cv
197.002 265.106 196.454 265.219 196.08 265.36 cv
195.706 265.501 195.444 265.692 195.295 265.935 cv
195.146 266.178 195.072 266.597 195.072 267.194 cv
195.072 279.221 li
195.072 280.014 195.256 280.542 195.626 280.807 cv
195.996 281.071 196.696 281.262 197.725 281.381 cv
197.861 281.399 197.929 281.512 197.929 281.726 cv
cp
f
197.929 281.726 mo
197.929 281.963 197.861 282.083 197.725 282.083 cv
197.146 282.083 196.462 282.055 195.671 282.002 cv
194.923 281.95 194.29 281.924 193.771 281.924 cv
193.252 281.924 192.653 281.95 191.973 282.002 cv
191.259 282.055 190.618 282.083 190.048 282.083 cv
189.912 282.083 189.844 281.963 189.844 281.726 cv
189.844 281.512 189.916 281.399 190.061 281.381 cv
190.776 281.297 191.308 281.18 191.656 281.03 cv
192.005 280.881 192.228 280.686 192.326 280.442 cv
192.425 280.2 192.473 279.793 192.473 279.221 cv
192.473 273.541 li
182.734 273.541 li
182.734 279.221 li
182.734 279.793 182.783 280.2 182.88 280.442 cv
182.978 280.686 183.202 280.881 183.551 281.03 cv
183.9 281.18 184.436 281.297 185.16 281.381 cv
185.295 281.399 185.363 281.512 185.363 281.726 cv
185.363 281.963 185.295 282.083 185.16 282.083 cv
184.589 282.083 183.948 282.055 183.234 282.002 cv
182.554 281.95 181.954 281.924 181.436 281.924 cv
180.917 281.924 180.28 281.95 179.523 282.002 cv
178.732 282.055 178.051 282.083 177.482 282.083 cv
177.345 282.083 177.277 281.963 177.277 281.726 cv
177.277 281.512 177.345 281.399 177.482 281.381 cv
178.51 281.262 179.21 281.071 179.58 280.807 cv
179.95 280.542 180.135 280.014 180.135 279.221 cv
180.135 267.194 li
180.135 266.597 180.061 266.178 179.911 265.935 cv
179.763 265.692 179.502 265.501 179.127 265.36 cv
178.753 265.219 178.205 265.106 177.482 265.021 cv
177.345 265.021 177.277 264.905 177.277 264.67 cv
177.277 264.438 177.345 264.321 177.482 264.321 cv
178.051 264.321 178.732 264.348 179.523 264.4 cv
180.28 264.454 180.917 264.479 181.436 264.479 cv
181.954 264.479 182.554 264.454 183.234 264.4 cv
183.948 264.348 184.589 264.321 185.16 264.321 cv
185.295 264.321 185.363 264.438 185.363 264.67 cv
185.363 264.905 185.295 265.021 185.16 265.021 cv
184.496 265.098 183.993 265.201 183.652 265.328 cv
183.312 265.456 183.074 265.628 182.938 265.846 cv
182.802 266.063 182.734 266.512 182.734 267.194 cv
182.734 272.727 li
192.473 272.727 li
192.473 267.194 li
192.473 266.623 192.425 266.215 192.326 265.967 cv
192.228 265.72 192.007 265.521 191.663 265.374 cv
191.318 265.225 190.779 265.106 190.048 265.021 cv
189.912 265.021 189.844 264.905 189.844 264.67 cv
189.844 264.438 189.912 264.321 190.048 264.321 cv
190.618 264.321 191.259 264.348 191.973 264.4 cv
192.653 264.454 193.252 264.479 193.771 264.479 cv
194.29 264.479 194.923 264.454 195.671 264.4 cv
196.462 264.348 197.146 264.321 197.725 264.321 cv
197.861 264.321 197.929 264.438 197.929 264.67 cv
197.929 264.905 197.861 265.021 197.725 265.021 cv
197.002 265.106 196.454 265.219 196.08 265.36 cv
195.706 265.501 195.444 265.692 195.295 265.935 cv
195.146 266.178 195.072 266.597 195.072 267.194 cv
195.072 279.221 li
195.072 280.014 195.256 280.542 195.626 280.807 cv
195.996 281.071 196.696 281.262 197.725 281.381 cv
197.861 281.399 197.929 281.512 197.929 281.726 cv
cp
@
219.055 277.872 mo
218.365 279.344 217.804 280.747 217.37 282.083 cv
214.165 281.976 211.881 281.924 210.52 281.924 cv
209.176 281.924 206.896 281.976 203.682 282.083 cv
203.545 282.083 203.478 281.963 203.478 281.726 cv
203.478 281.512 203.545 281.399 203.682 281.381 cv
204.388 281.297 204.928 281.184 205.302 281.042 cv
205.676 280.903 205.938 280.711 206.086 280.475 cv
206.236 280.235 206.31 279.819 206.31 279.221 cv
206.31 267.194 li
206.31 266.606 206.24 266.19 206.1 265.948 cv
205.959 265.705 205.702 265.511 205.328 265.366 cv
204.953 265.221 204.405 265.106 203.682 265.021 cv
203.545 265.021 203.478 264.905 203.478 264.67 cv
203.478 264.438 203.545 264.321 203.682 264.321 cv
205.825 264.426 208.02 264.479 210.267 264.479 cv
212.53 264.479 214.73 264.426 216.866 264.321 cv
217.062 265.638 217.347 266.939 217.722 268.224 cv
217.722 268.393 217.571 268.479 217.27 268.479 cv
217.124 268.479 217.033 268.419 216.999 268.301 cv
216.369 266.295 215.025 265.292 212.966 265.292 cv
210.389 265.292 li
209.402 265.292 208.909 265.803 208.909 266.823 cv
208.909 272.5 li
212.129 272.5 li
212.988 272.5 213.57 272.306 213.875 271.915 cv
214.18 271.524 214.392 270.831 214.513 269.834 cv
214.513 269.699 214.629 269.631 214.863 269.631 cv
215.097 269.631 215.213 269.699 215.213 269.834 cv
215.213 270.259 215.187 270.795 215.134 271.44 cv
215.081 272.06 215.055 272.566 215.055 272.956 cv
215.055 273.356 215.081 273.866 215.134 274.485 cv
215.187 275.147 215.213 275.692 215.213 276.116 cv
215.213 276.252 215.097 276.32 214.863 276.32 cv
214.629 276.32 214.513 276.252 214.513 276.116 cv
214.383 275.08 214.158 274.354 213.836 273.938 cv
213.514 273.524 212.944 273.315 212.129 273.315 cv
208.909 273.315 li
208.909 279.602 li
208.909 280.608 209.402 281.11 210.39 281.11 cv
213.172 281.11 li
214.185 281.11 215.188 280.782 216.184 280.122 cv
217.179 279.463 217.91 278.641 218.379 277.655 cv
218.413 277.579 218.485 277.54 218.595 277.54 cv
218.715 277.54 218.821 277.573 218.914 277.636 cv
219.008 277.7 219.055 277.779 219.055 277.872 cv
cp
f
219.055 277.872 mo
218.365 279.344 217.804 280.747 217.37 282.083 cv
214.165 281.976 211.881 281.924 210.52 281.924 cv
209.176 281.924 206.896 281.976 203.682 282.083 cv
203.545 282.083 203.478 281.963 203.478 281.726 cv
203.478 281.512 203.545 281.399 203.682 281.381 cv
204.388 281.297 204.928 281.184 205.302 281.042 cv
205.676 280.903 205.938 280.711 206.086 280.475 cv
206.236 280.235 206.31 279.819 206.31 279.221 cv
206.31 267.194 li
206.31 266.606 206.24 266.19 206.1 265.948 cv
205.959 265.705 205.702 265.511 205.328 265.366 cv
204.953 265.221 204.405 265.106 203.682 265.021 cv
203.545 265.021 203.478 264.905 203.478 264.67 cv
203.478 264.438 203.545 264.321 203.682 264.321 cv
205.825 264.426 208.02 264.479 210.267 264.479 cv
212.53 264.479 214.73 264.426 216.866 264.321 cv
217.062 265.638 217.347 266.939 217.722 268.224 cv
217.722 268.393 217.571 268.479 217.27 268.479 cv
217.124 268.479 217.033 268.419 216.999 268.301 cv
216.369 266.295 215.025 265.292 212.966 265.292 cv
210.389 265.292 li
209.402 265.292 208.909 265.803 208.909 266.823 cv
208.909 272.5 li
212.129 272.5 li
212.988 272.5 213.57 272.306 213.875 271.915 cv
214.18 271.524 214.392 270.831 214.513 269.834 cv
214.513 269.699 214.629 269.631 214.863 269.631 cv
215.097 269.631 215.213 269.699 215.213 269.834 cv
215.213 270.259 215.187 270.795 215.134 271.44 cv
215.081 272.06 215.055 272.566 215.055 272.956 cv
215.055 273.356 215.081 273.866 215.134 274.485 cv
215.187 275.147 215.213 275.692 215.213 276.116 cv
215.213 276.252 215.097 276.32 214.863 276.32 cv
214.629 276.32 214.513 276.252 214.513 276.116 cv
214.383 275.08 214.158 274.354 213.836 273.938 cv
213.514 273.524 212.944 273.315 212.129 273.315 cv
208.909 273.315 li
208.909 279.602 li
208.909 280.608 209.402 281.11 210.39 281.11 cv
213.172 281.11 li
214.185 281.11 215.188 280.782 216.184 280.122 cv
217.179 279.463 217.91 278.641 218.379 277.655 cv
218.413 277.579 218.485 277.54 218.595 277.54 cv
218.715 277.54 218.821 277.573 218.914 277.636 cv
219.008 277.7 219.055 277.779 219.055 277.872 cv
cp
@
245.308 264.676 mo
245.308 264.889 245.24 265.004 245.104 265.021 cv
244.041 265.139 243.312 265.337 242.916 265.609 cv
242.521 265.883 242.314 266.407 242.298 267.182 cv
242.026 282.233 li
242.026 282.405 241.922 282.489 241.713 282.489 cv
241.608 282.489 241.469 282.42 241.296 282.286 cv
228.151 267.415 li
227.971 279.223 li
227.962 279.293 227.958 279.356 227.958 279.416 cv
227.958 280.063 228.162 280.52 228.57 280.789 cv
228.979 281.057 229.715 281.254 230.777 281.381 cv
230.913 281.399 230.981 281.512 230.981 281.726 cv
230.981 281.963 230.913 282.083 230.777 282.083 cv
230.334 282.083 229.727 282.055 228.953 282.002 cv
228.23 281.95 227.671 281.924 227.277 281.924 cv
226.85 281.924 226.273 281.95 225.552 282.002 cv
224.854 282.055 224.314 282.083 223.932 282.083 cv
223.795 282.083 223.728 281.963 223.728 281.726 cv
223.728 281.512 223.804 281.399 223.957 281.381 cv
225.012 281.254 225.734 281.055 226.126 280.788 cv
226.517 280.518 226.726 279.998 226.751 279.221 cv
227.202 267.194 li
227.202 267.079 li
227.202 266.388 227.003 265.909 226.603 265.634 cv
226.203 265.363 225.459 265.157 224.37 265.021 cv
224.251 265.021 224.192 264.905 224.192 264.67 cv
224.192 264.438 224.26 264.321 224.396 264.321 cv
224.693 264.321 225.11 264.348 225.646 264.4 cv
226.122 264.454 226.479 264.479 226.718 264.479 cv
227.016 264.479 227.373 264.454 227.791 264.4 cv
228.217 264.348 228.584 264.321 228.891 264.321 cv
241.168 278.073 li
241.168 267.184 li
241.168 266.459 240.962 265.95 240.549 265.654 cv
240.137 265.36 239.373 265.149 238.259 265.021 cv
238.123 265.004 238.056 264.889 238.056 264.676 cv
238.056 264.44 238.123 264.321 238.259 264.321 cv
238.718 264.321 239.331 264.348 240.097 264.4 cv
240.811 264.454 241.364 264.479 241.759 264.479 cv
242.186 264.479 242.761 264.454 243.483 264.4 cv
244.181 264.348 244.721 264.321 245.104 264.321 cv
245.24 264.321 245.308 264.44 245.308 264.676 cv
cp
f
245.308 264.676 mo
245.308 264.889 245.24 265.004 245.104 265.021 cv
244.041 265.139 243.312 265.337 242.916 265.609 cv
242.521 265.883 242.314 266.407 242.298 267.182 cv
242.026 282.233 li
242.026 282.405 241.922 282.489 241.713 282.489 cv
241.608 282.489 241.469 282.42 241.296 282.286 cv
228.151 267.415 li
227.971 279.223 li
227.962 279.293 227.958 279.356 227.958 279.416 cv
227.958 280.063 228.162 280.52 228.57 280.789 cv
228.979 281.057 229.715 281.254 230.777 281.381 cv
230.913 281.399 230.981 281.512 230.981 281.726 cv
230.981 281.963 230.913 282.083 230.777 282.083 cv
230.334 282.083 229.727 282.055 228.953 282.002 cv
228.23 281.95 227.671 281.924 227.277 281.924 cv
226.85 281.924 226.273 281.95 225.552 282.002 cv
224.854 282.055 224.314 282.083 223.932 282.083 cv
223.795 282.083 223.728 281.963 223.728 281.726 cv
223.728 281.512 223.804 281.399 223.957 281.381 cv
225.012 281.254 225.734 281.055 226.126 280.788 cv
226.517 280.518 226.726 279.998 226.751 279.221 cv
227.202 267.194 li
227.202 267.079 li
227.202 266.388 227.003 265.909 226.603 265.634 cv
226.203 265.363 225.459 265.157 224.37 265.021 cv
224.251 265.021 224.192 264.905 224.192 264.67 cv
224.192 264.438 224.26 264.321 224.396 264.321 cv
224.693 264.321 225.11 264.348 225.646 264.4 cv
226.122 264.454 226.479 264.479 226.718 264.479 cv
227.016 264.479 227.373 264.454 227.791 264.4 cv
228.217 264.348 228.584 264.321 228.891 264.321 cv
241.168 278.073 li
241.168 267.184 li
241.168 266.459 240.962 265.95 240.549 265.654 cv
240.137 265.36 239.373 265.149 238.259 265.021 cv
238.123 265.004 238.056 264.889 238.056 264.676 cv
238.056 264.44 238.123 264.321 238.259 264.321 cv
238.718 264.321 239.331 264.348 240.097 264.4 cv
240.811 264.454 241.364 264.479 241.759 264.479 cv
242.186 264.479 242.761 264.454 243.483 264.4 cv
244.181 264.348 244.721 264.321 245.104 264.321 cv
245.24 264.321 245.308 264.44 245.308 264.676 cv
cp
@
265.766 277.872 mo
265.076 279.344 264.516 280.747 264.082 282.083 cv
260.875 281.976 258.592 281.924 257.23 281.924 cv
255.888 281.924 253.607 281.976 250.393 282.083 cv
250.257 282.083 250.188 281.963 250.188 281.726 cv
250.188 281.512 250.257 281.399 250.393 281.381 cv
251.099 281.297 251.638 281.184 252.013 281.042 cv
252.387 280.903 252.647 280.711 252.798 280.475 cv
252.945 280.235 253.021 279.819 253.021 279.221 cv
253.021 267.194 li
253.021 266.606 252.95 266.19 252.811 265.948 cv
252.67 265.705 252.412 265.511 252.038 265.366 cv
251.664 265.221 251.115 265.106 250.393 265.021 cv
250.257 265.021 250.188 264.905 250.188 264.67 cv
250.188 264.438 250.257 264.321 250.393 264.321 cv
252.536 264.426 254.73 264.479 256.978 264.479 cv
259.242 264.479 261.441 264.426 263.578 264.321 cv
263.772 265.638 264.058 266.939 264.433 268.224 cv
264.433 268.393 264.281 268.479 263.98 268.479 cv
263.833 268.479 263.743 268.419 263.709 268.301 cv
263.079 266.295 261.736 265.292 259.677 265.292 cv
257.1 265.292 li
256.112 265.292 255.619 265.803 255.619 266.823 cv
255.619 272.5 li
258.84 272.5 li
259.698 272.5 260.28 272.306 260.585 271.915 cv
260.891 271.524 261.104 270.831 261.224 269.834 cv
261.224 269.699 261.341 269.631 261.574 269.631 cv
261.807 269.631 261.924 269.699 261.924 269.834 cv
261.924 270.259 261.897 270.795 261.845 271.44 cv
261.793 272.06 261.766 272.566 261.766 272.956 cv
261.766 273.356 261.793 273.866 261.845 274.485 cv
261.897 275.147 261.924 275.692 261.924 276.116 cv
261.924 276.252 261.807 276.32 261.574 276.32 cv
261.341 276.32 261.224 276.252 261.224 276.116 cv
261.095 275.08 260.869 274.354 260.547 273.938 cv
260.225 273.524 259.656 273.315 258.84 273.315 cv
255.619 273.315 li
255.619 279.602 li
255.619 280.608 256.112 281.11 257.1 281.11 cv
259.882 281.11 li
260.895 281.11 261.898 280.782 262.895 280.122 cv
263.89 279.463 264.621 278.641 265.089 277.655 cv
265.123 277.579 265.196 277.54 265.307 277.54 cv
265.425 277.54 265.531 277.573 265.626 277.636 cv
265.719 277.7 265.766 277.779 265.766 277.872 cv
cp
f
265.766 277.872 mo
265.076 279.344 264.516 280.747 264.082 282.083 cv
260.875 281.976 258.592 281.924 257.23 281.924 cv
255.888 281.924 253.607 281.976 250.393 282.083 cv
250.257 282.083 250.188 281.963 250.188 281.726 cv
250.188 281.512 250.257 281.399 250.393 281.381 cv
251.099 281.297 251.638 281.184 252.013 281.042 cv
252.387 280.903 252.647 280.711 252.798 280.475 cv
252.945 280.235 253.021 279.819 253.021 279.221 cv
253.021 267.194 li
253.021 266.606 252.95 266.19 252.811 265.948 cv
252.67 265.705 252.412 265.511 252.038 265.366 cv
251.664 265.221 251.115 265.106 250.393 265.021 cv
250.257 265.021 250.188 264.905 250.188 264.67 cv
250.188 264.438 250.257 264.321 250.393 264.321 cv
252.536 264.426 254.73 264.479 256.978 264.479 cv
259.242 264.479 261.441 264.426 263.578 264.321 cv
263.772 265.638 264.058 266.939 264.433 268.224 cv
264.433 268.393 264.281 268.479 263.98 268.479 cv
263.833 268.479 263.743 268.419 263.709 268.301 cv
263.079 266.295 261.736 265.292 259.677 265.292 cv
257.1 265.292 li
256.112 265.292 255.619 265.803 255.619 266.823 cv
255.619 272.5 li
258.84 272.5 li
259.698 272.5 260.28 272.306 260.585 271.915 cv
260.891 271.524 261.104 270.831 261.224 269.834 cv
261.224 269.699 261.341 269.631 261.574 269.631 cv
261.807 269.631 261.924 269.699 261.924 269.834 cv
261.924 270.259 261.897 270.795 261.845 271.44 cv
261.793 272.06 261.766 272.566 261.766 272.956 cv
261.766 273.356 261.793 273.866 261.845 274.485 cv
261.897 275.147 261.924 275.692 261.924 276.116 cv
261.924 276.252 261.807 276.32 261.574 276.32 cv
261.341 276.32 261.224 276.252 261.224 276.116 cv
261.095 275.08 260.869 274.354 260.547 273.938 cv
260.225 273.524 259.656 273.315 258.84 273.315 cv
255.619 273.315 li
255.619 279.602 li
255.619 280.608 256.112 281.11 257.1 281.11 cv
259.882 281.11 li
260.895 281.11 261.898 280.782 262.895 280.122 cv
263.89 279.463 264.621 278.641 265.089 277.655 cv
265.123 277.579 265.196 277.54 265.307 277.54 cv
265.425 277.54 265.531 277.573 265.626 277.636 cv
265.719 277.7 265.766 277.779 265.766 277.872 cv
cp
@
282.116 268.911 mo
282.116 266.424 281.031 265.179 278.862 265.179 cv
278.146 265.179 277.604 265.237 277.233 265.352 cv
276.863 265.467 276.616 265.649 276.493 265.895 cv
276.371 266.143 276.309 266.577 276.309 267.2 cv
276.309 272.885 li
276.803 272.953 277.423 272.987 278.173 272.987 cv
279.543 272.987 280.541 272.663 281.171 272.016 cv
281.801 271.368 282.116 270.334 282.116 268.911 cv
cp
288.624 281.726 mo
288.624 281.963 288.557 282.083 288.419 282.083 cv
288.104 282.083 287.59 282.051 286.874 281.991 cv
286.354 281.946 286.01 281.924 285.839 281.924 cv
285.594 281.924 285.205 281.95 284.678 282.002 cv
284.149 282.055 283.762 282.083 283.515 282.083 cv
279.65 275.77 li
279.106 274.899 278.666 274.34 278.331 274.092 cv
277.995 273.845 277.32 273.721 276.309 273.721 cv
276.309 279.221 li
276.309 279.808 276.382 280.225 276.531 280.467 cv
276.68 280.711 276.944 280.903 277.322 281.042 cv
277.701 281.184 278.243 281.297 278.949 281.381 cv
279.094 281.399 279.166 281.512 279.166 281.726 cv
279.166 281.963 279.098 282.083 278.962 282.083 cv
278.392 282.083 277.713 282.055 276.922 282.002 cv
276.164 281.95 275.527 281.924 275.009 281.924 cv
274.491 281.924 273.858 281.95 273.111 282.002 cv
272.328 282.055 271.652 282.083 271.082 282.083 cv
270.946 282.083 270.878 281.963 270.878 281.726 cv
270.878 281.512 270.946 281.399 271.082 281.381 cv
271.788 281.297 272.327 281.184 272.701 281.042 cv
273.076 280.903 273.337 280.711 273.486 280.475 cv
273.635 280.235 273.71 279.819 273.71 279.221 cv
273.71 267.194 li
273.71 266.606 273.64 266.19 273.499 265.948 cv
273.359 265.705 273.103 265.511 272.727 265.366 cv
272.354 265.221 271.805 265.106 271.082 265.021 cv
270.946 265.021 270.878 264.905 270.878 264.67 cv
270.878 264.438 270.946 264.321 271.082 264.321 cv
271.652 264.321 272.328 264.348 273.111 264.4 cv
273.858 264.454 274.492 264.479 275.011 264.479 cv
275.529 264.479 276.167 264.454 276.923 264.4 cv
277.714 264.348 278.394 264.321 278.964 264.321 cv
280.859 264.321 282.325 264.717 283.361 265.511 cv
284.399 266.305 284.918 267.42 284.918 268.857 cv
284.918 269.764 284.575 270.606 283.89 271.382 cv
283.205 272.161 282.278 272.758 281.11 273.178 cv
285.034 279.584 li
285.376 280.147 285.816 280.559 286.354 280.829 cv
286.893 281.094 287.59 281.28 288.444 281.381 cv
288.564 281.399 288.624 281.512 288.624 281.726 cv
cp
f
282.116 268.911 mo
282.116 266.424 281.031 265.179 278.862 265.179 cv
278.146 265.179 277.604 265.237 277.233 265.352 cv
276.863 265.467 276.616 265.649 276.493 265.895 cv
276.371 266.143 276.309 266.577 276.309 267.2 cv
276.309 272.885 li
276.803 272.953 277.423 272.987 278.173 272.987 cv
279.543 272.987 280.541 272.663 281.171 272.016 cv
281.801 271.368 282.116 270.334 282.116 268.911 cv
cp
288.624 281.726 mo
288.624 281.963 288.557 282.083 288.419 282.083 cv
288.104 282.083 287.59 282.051 286.874 281.991 cv
286.354 281.946 286.01 281.924 285.839 281.924 cv
285.594 281.924 285.205 281.95 284.678 282.002 cv
284.149 282.055 283.762 282.083 283.515 282.083 cv
279.65 275.77 li
279.106 274.899 278.666 274.34 278.331 274.092 cv
277.995 273.845 277.32 273.721 276.309 273.721 cv
276.309 279.221 li
276.309 279.808 276.382 280.225 276.531 280.467 cv
276.68 280.711 276.944 280.903 277.322 281.042 cv
277.701 281.184 278.243 281.297 278.949 281.381 cv
279.094 281.399 279.166 281.512 279.166 281.726 cv
279.166 281.963 279.098 282.083 278.962 282.083 cv
278.392 282.083 277.713 282.055 276.922 282.002 cv
276.164 281.95 275.527 281.924 275.009 281.924 cv
274.491 281.924 273.858 281.95 273.111 282.002 cv
272.328 282.055 271.652 282.083 271.082 282.083 cv
270.946 282.083 270.878 281.963 270.878 281.726 cv
270.878 281.512 270.946 281.399 271.082 281.381 cv
271.788 281.297 272.327 281.184 272.701 281.042 cv
273.076 280.903 273.337 280.711 273.486 280.475 cv
273.635 280.235 273.71 279.819 273.71 279.221 cv
273.71 267.194 li
273.71 266.606 273.64 266.19 273.499 265.948 cv
273.359 265.705 273.103 265.511 272.727 265.366 cv
272.354 265.221 271.805 265.106 271.082 265.021 cv
270.946 265.021 270.878 264.905 270.878 264.67 cv
270.878 264.438 270.946 264.321 271.082 264.321 cv
271.652 264.321 272.328 264.348 273.111 264.4 cv
273.858 264.454 274.492 264.479 275.011 264.479 cv
275.529 264.479 276.167 264.454 276.923 264.4 cv
277.714 264.348 278.394 264.321 278.964 264.321 cv
280.859 264.321 282.325 264.717 283.361 265.511 cv
284.399 266.305 284.918 267.42 284.918 268.857 cv
284.918 269.764 284.575 270.606 283.89 271.382 cv
283.205 272.161 282.278 272.758 281.11 273.178 cv
285.034 279.584 li
285.376 280.147 285.816 280.559 286.354 280.829 cv
286.893 281.094 287.59 281.28 288.444 281.381 cv
288.564 281.399 288.624 281.512 288.624 281.726 cv
cp
@
303.051 273.305 mo
303.051 273.764 302.948 273.993 302.744 273.993 cv
290.615 273.993 li
290.396 273.993 290.283 273.764 290.283 273.305 cv
290.283 272.829 290.387 272.591 290.59 272.591 cv
302.744 272.591 li
302.948 272.591 303.051 272.829 303.051 273.305 cv
cp
f
303.051 273.305 mo
303.051 273.764 302.948 273.993 302.744 273.993 cv
290.615 273.993 li
290.396 273.993 290.283 273.764 290.283 273.305 cv
290.283 272.829 290.387 272.591 290.59 272.591 cv
302.744 272.591 li
302.948 272.591 303.051 272.829 303.051 273.305 cv
cp
@
333.716 264.62 mo
333.716 264.721 333.684 264.812 333.619 264.897 cv
333.556 264.979 333.485 265.021 333.409 265.021 cv
332.779 265.081 332.264 265.286 331.864 265.631 cv
331.463 265.979 331.051 266.641 330.625 267.618 cv
324.111 282.286 li
324.068 282.42 323.948 282.489 323.75 282.489 cv
323.595 282.489 323.475 282.42 323.389 282.286 cv
319.749 274.655 li
315.547 282.286 li
315.463 282.42 315.344 282.489 315.193 282.489 cv
315.007 282.489 314.884 282.42 314.824 282.286 cv
308.434 267.618 li
308.034 266.702 307.611 266.061 307.171 265.696 cv
306.728 265.333 306.111 265.108 305.32 265.021 cv
305.253 265.021 305.188 264.986 305.129 264.915 cv
305.069 264.844 305.04 264.762 305.04 264.67 cv
305.04 264.438 305.107 264.321 305.244 264.321 cv
305.813 264.321 306.409 264.348 307.031 264.4 cv
307.61 264.454 308.154 264.479 308.665 264.479 cv
309.185 264.479 309.798 264.454 310.504 264.4 cv
311.244 264.348 311.897 264.321 312.469 264.321 cv
312.604 264.321 312.673 264.438 312.673 264.67 cv
312.673 264.905 312.63 265.021 312.545 265.021 cv
311.976 265.063 311.526 265.21 311.199 265.459 cv
310.871 265.708 310.707 266.034 310.707 266.436 cv
310.707 266.643 310.775 266.899 310.912 267.209 cv
316.125 279.172 li
319.188 273.478 li
316.394 267.618 li
315.891 266.565 315.479 265.885 315.156 265.581 cv
314.833 265.276 314.344 265.088 313.688 265.021 cv
313.629 265.021 313.571 264.986 313.517 264.915 cv
313.461 264.844 313.434 264.762 313.434 264.67 cv
313.434 264.438 313.492 264.321 313.612 264.321 cv
314.182 264.321 314.706 264.348 315.182 264.4 cv
315.641 264.454 316.129 264.479 316.647 264.479 cv
317.159 264.479 317.698 264.454 318.268 264.4 cv
318.854 264.348 319.433 264.321 320.002 264.321 cv
320.138 264.321 320.207 264.438 320.207 264.67 cv
320.207 264.905 320.163 265.021 320.078 265.021 cv
318.938 265.098 318.369 265.424 318.369 266 cv
318.369 266.258 318.501 266.657 318.765 267.2 cv
320.612 270.954 li
322.454 267.516 li
322.708 267.028 322.836 266.618 322.836 266.281 cv
322.836 265.493 322.266 265.073 321.126 265.021 cv
321.024 265.021 320.974 264.905 320.974 264.67 cv
320.974 264.587 320.999 264.508 321.05 264.434 cv
321.101 264.359 321.151 264.321 321.204 264.321 cv
321.61 264.321 322.113 264.348 322.709 264.4 cv
323.278 264.454 323.746 264.479 324.111 264.479 cv
324.374 264.479 324.762 264.456 325.272 264.413 cv
325.918 264.352 326.459 264.321 326.893 264.321 cv
326.994 264.321 327.045 264.42 327.045 264.62 cv
327.045 264.888 326.952 265.021 326.766 265.021 cv
326.102 265.088 325.568 265.274 325.164 265.575 cv
324.76 265.874 324.256 266.556 323.652 267.618 cv
321.201 272.159 li
324.521 278.912 li
329.428 267.518 li
329.598 267.097 329.684 266.711 329.684 266.36 cv
329.684 265.518 329.113 265.073 327.973 265.021 cv
327.87 265.021 327.819 264.905 327.819 264.67 cv
327.819 264.438 327.896 264.321 328.049 264.321 cv
328.466 264.321 328.96 264.348 329.529 264.4 cv
330.057 264.454 330.5 264.479 330.857 264.479 cv
331.231 264.479 331.665 264.454 332.158 264.4 cv
332.669 264.348 333.128 264.321 333.536 264.321 cv
333.656 264.321 333.716 264.42 333.716 264.62 cv
cp
f
333.716 264.62 mo
333.716 264.721 333.684 264.812 333.619 264.897 cv
333.556 264.979 333.485 265.021 333.409 265.021 cv
332.779 265.081 332.264 265.286 331.864 265.631 cv
331.463 265.979 331.051 266.641 330.625 267.618 cv
324.111 282.286 li
324.068 282.42 323.948 282.489 323.75 282.489 cv
323.595 282.489 323.475 282.42 323.389 282.286 cv
319.749 274.655 li
315.547 282.286 li
315.463 282.42 315.344 282.489 315.193 282.489 cv
315.007 282.489 314.884 282.42 314.824 282.286 cv
308.434 267.618 li
308.034 266.702 307.611 266.061 307.171 265.696 cv
306.728 265.333 306.111 265.108 305.32 265.021 cv
305.253 265.021 305.188 264.986 305.129 264.915 cv
305.069 264.844 305.04 264.762 305.04 264.67 cv
305.04 264.438 305.107 264.321 305.244 264.321 cv
305.813 264.321 306.409 264.348 307.031 264.4 cv
307.61 264.454 308.154 264.479 308.665 264.479 cv
309.185 264.479 309.798 264.454 310.504 264.4 cv
311.244 264.348 311.897 264.321 312.469 264.321 cv
312.604 264.321 312.673 264.438 312.673 264.67 cv
312.673 264.905 312.63 265.021 312.545 265.021 cv
311.976 265.063 311.526 265.21 311.199 265.459 cv
310.871 265.708 310.707 266.034 310.707 266.436 cv
310.707 266.643 310.775 266.899 310.912 267.209 cv
316.125 279.172 li
319.188 273.478 li
316.394 267.618 li
315.891 266.565 315.479 265.885 315.156 265.581 cv
314.833 265.276 314.344 265.088 313.688 265.021 cv
313.629 265.021 313.571 264.986 313.517 264.915 cv
313.461 264.844 313.434 264.762 313.434 264.67 cv
313.434 264.438 313.492 264.321 313.612 264.321 cv
314.182 264.321 314.706 264.348 315.182 264.4 cv
315.641 264.454 316.129 264.479 316.647 264.479 cv
317.159 264.479 317.698 264.454 318.268 264.4 cv
318.854 264.348 319.433 264.321 320.002 264.321 cv
320.138 264.321 320.207 264.438 320.207 264.67 cv
320.207 264.905 320.163 265.021 320.078 265.021 cv
318.938 265.098 318.369 265.424 318.369 266 cv
318.369 266.258 318.501 266.657 318.765 267.2 cv
320.612 270.954 li
322.454 267.516 li
322.708 267.028 322.836 266.618 322.836 266.281 cv
322.836 265.493 322.266 265.073 321.126 265.021 cv
321.024 265.021 320.974 264.905 320.974 264.67 cv
320.974 264.587 320.999 264.508 321.05 264.434 cv
321.101 264.359 321.151 264.321 321.204 264.321 cv
321.61 264.321 322.113 264.348 322.709 264.4 cv
323.278 264.454 323.746 264.479 324.111 264.479 cv
324.374 264.479 324.762 264.456 325.272 264.413 cv
325.918 264.352 326.459 264.321 326.893 264.321 cv
326.994 264.321 327.045 264.42 327.045 264.62 cv
327.045 264.888 326.952 265.021 326.766 265.021 cv
326.102 265.088 325.568 265.274 325.164 265.575 cv
324.76 265.874 324.256 266.556 323.652 267.618 cv
321.201 272.159 li
324.521 278.912 li
329.428 267.518 li
329.598 267.097 329.684 266.711 329.684 266.36 cv
329.684 265.518 329.113 265.073 327.973 265.021 cv
327.87 265.021 327.819 264.905 327.819 264.67 cv
327.819 264.438 327.896 264.321 328.049 264.321 cv
328.466 264.321 328.96 264.348 329.529 264.4 cv
330.057 264.454 330.5 264.479 330.857 264.479 cv
331.231 264.479 331.665 264.454 332.158 264.4 cv
332.669 264.348 333.128 264.321 333.536 264.321 cv
333.656 264.321 333.716 264.42 333.716 264.62 cv
cp
@
345.629 274.151 mo
343.375 267.618 li
340.951 274.151 li
345.629 274.151 li
cp
353.352 281.726 mo
353.352 281.963 353.283 282.083 353.146 282.083 cv
352.558 282.083 351.893 282.055 351.15 282.002 cv
350.511 281.95 349.965 281.924 349.513 281.924 cv
348.993 281.924 348.349 281.95 347.58 282.002 cv
346.772 282.055 346.083 282.083 345.515 282.083 cv
345.377 282.083 345.31 281.965 345.31 281.732 cv
345.31 281.499 345.36 281.381 345.463 281.381 cv
346.219 281.348 346.764 281.247 347.096 281.079 cv
347.428 280.913 347.595 280.653 347.595 280.301 cv
347.595 280.079 347.509 279.722 347.338 279.233 cv
345.898 274.963 li
340.645 274.963 li
339.187 278.916 li
338.999 279.447 338.906 279.858 338.906 280.149 cv
338.906 280.901 339.595 281.314 340.973 281.381 cv
341.074 281.381 341.126 281.499 341.126 281.732 cv
341.126 281.965 341.057 282.083 340.921 282.083 cv
340.411 282.083 339.845 282.055 339.225 282.002 cv
338.639 281.95 338.116 281.924 337.657 281.924 cv
337.293 281.924 336.834 281.95 336.282 282.002 cv
335.704 282.055 335.211 282.083 334.803 282.083 cv
334.676 282.083 334.612 281.976 334.612 281.762 cv
334.612 281.526 334.71 281.399 334.906 281.381 cv
335.611 281.314 336.17 281.118 336.583 280.793 cv
336.995 280.471 337.423 279.809 337.863 278.813 cv
343.832 264.163 li
343.883 264.027 344.003 263.959 344.192 263.959 cv
344.397 263.959 344.527 264.022 344.578 264.151 cv
349.852 278.813 li
350.15 279.639 350.552 280.249 351.059 280.64 cv
351.566 281.033 352.244 281.28 353.096 281.381 cv
353.267 281.399 353.352 281.512 353.352 281.726 cv
cp
f
345.629 274.151 mo
343.375 267.618 li
340.951 274.151 li
345.629 274.151 li
cp
353.352 281.726 mo
353.352 281.963 353.283 282.083 353.146 282.083 cv
352.558 282.083 351.893 282.055 351.15 282.002 cv
350.511 281.95 349.965 281.924 349.513 281.924 cv
348.993 281.924 348.349 281.95 347.58 282.002 cv
346.772 282.055 346.083 282.083 345.515 282.083 cv
345.377 282.083 345.31 281.965 345.31 281.732 cv
345.31 281.499 345.36 281.381 345.463 281.381 cv
346.219 281.348 346.764 281.247 347.096 281.079 cv
347.428 280.913 347.595 280.653 347.595 280.301 cv
347.595 280.079 347.509 279.722 347.338 279.233 cv
345.898 274.963 li
340.645 274.963 li
339.187 278.916 li
338.999 279.447 338.906 279.858 338.906 280.149 cv
338.906 280.901 339.595 281.314 340.973 281.381 cv
341.074 281.381 341.126 281.499 341.126 281.732 cv
341.126 281.965 341.057 282.083 340.921 282.083 cv
340.411 282.083 339.845 282.055 339.225 282.002 cv
338.639 281.95 338.116 281.924 337.657 281.924 cv
337.293 281.924 336.834 281.95 336.282 282.002 cv
335.704 282.055 335.211 282.083 334.803 282.083 cv
334.676 282.083 334.612 281.976 334.612 281.762 cv
334.612 281.526 334.71 281.399 334.906 281.381 cv
335.611 281.314 336.17 281.118 336.583 280.793 cv
336.995 280.471 337.423 279.809 337.863 278.813 cv
343.832 264.163 li
343.883 264.027 344.003 263.959 344.192 263.959 cv
344.397 263.959 344.527 264.022 344.578 264.151 cv
349.852 278.813 li
350.15 279.639 350.552 280.249 351.059 280.64 cv
351.566 281.033 352.244 281.28 353.096 281.381 cv
353.267 281.399 353.352 281.512 353.352 281.726 cv
cp
@
373.672 268.53 mo
373.672 268.692 373.52 268.772 373.213 268.772 cv
373.076 268.772 372.991 268.713 372.957 268.592 cv
372.592 267.391 372.068 266.542 371.388 266.042 cv
370.707 265.542 369.699 265.292 368.364 265.292 cv
367.164 265.292 li
366.747 265.292 366.462 265.36 366.308 265.497 cv
366.155 265.633 366.079 265.888 366.079 266.262 cv
366.079 279.223 li
366.079 279.811 366.152 280.227 366.303 280.469 cv
366.45 280.711 366.715 280.903 367.093 281.042 cv
367.472 281.184 368.014 281.297 368.721 281.381 cv
368.855 281.399 368.924 281.512 368.924 281.726 cv
368.924 281.963 368.855 282.083 368.721 282.083 cv
368.149 282.083 367.469 282.055 366.678 282.002 cv
365.927 281.95 365.298 281.924 364.793 281.924 cv
364.269 281.924 363.627 281.95 362.867 282.002 cv
362.076 282.055 361.397 282.083 360.827 282.083 cv
360.691 282.083 360.623 281.963 360.623 281.726 cv
360.623 281.512 360.691 281.399 360.827 281.381 cv
361.856 281.262 362.556 281.071 362.926 280.807 cv
363.296 280.542 363.48 280.014 363.48 279.223 cv
363.48 266.262 li
363.48 265.888 363.404 265.633 363.252 265.497 cv
363.098 265.36 362.81 265.292 362.385 265.292 cv
361.391 265.292 li
360.192 265.292 359.105 265.598 358.129 266.208 cv
357.152 266.817 356.515 267.608 356.219 268.581 cv
356.176 268.709 356.081 268.772 355.938 268.772 cv
355.647 268.772 355.504 268.679 355.504 268.491 cv
355.981 267.204 356.433 265.746 356.859 264.118 cv
358.017 264.359 360.663 264.479 364.798 264.479 cv
369.045 264.479 371.745 264.359 372.903 264.118 cv
373.022 265.226 373.279 266.696 373.672 268.53 cv
cp
f
373.672 268.53 mo
373.672 268.692 373.52 268.772 373.213 268.772 cv
373.076 268.772 372.991 268.713 372.957 268.592 cv
372.592 267.391 372.068 266.542 371.388 266.042 cv
370.707 265.542 369.699 265.292 368.364 265.292 cv
367.164 265.292 li
366.747 265.292 366.462 265.36 366.308 265.497 cv
366.155 265.633 366.079 265.888 366.079 266.262 cv
366.079 279.223 li
366.079 279.811 366.152 280.227 366.303 280.469 cv
366.45 280.711 366.715 280.903 367.093 281.042 cv
367.472 281.184 368.014 281.297 368.721 281.381 cv
368.855 281.399 368.924 281.512 368.924 281.726 cv
368.924 281.963 368.855 282.083 368.721 282.083 cv
368.149 282.083 367.469 282.055 366.678 282.002 cv
365.927 281.95 365.298 281.924 364.793 281.924 cv
364.269 281.924 363.627 281.95 362.867 282.002 cv
362.076 282.055 361.397 282.083 360.827 282.083 cv
360.691 282.083 360.623 281.963 360.623 281.726 cv
360.623 281.512 360.691 281.399 360.827 281.381 cv
361.856 281.262 362.556 281.071 362.926 280.807 cv
363.296 280.542 363.48 280.014 363.48 279.223 cv
363.48 266.262 li
363.48 265.888 363.404 265.633 363.252 265.497 cv
363.098 265.36 362.81 265.292 362.385 265.292 cv
361.391 265.292 li
360.192 265.292 359.105 265.598 358.129 266.208 cv
357.152 266.817 356.515 267.608 356.219 268.581 cv
356.176 268.709 356.081 268.772 355.938 268.772 cv
355.647 268.772 355.504 268.679 355.504 268.491 cv
355.981 267.204 356.433 265.746 356.859 264.118 cv
358.017 264.359 360.663 264.479 364.798 264.479 cv
369.045 264.479 371.745 264.359 372.903 264.118 cv
373.022 265.226 373.279 266.696 373.672 268.53 cv
cp
@
394.062 277.872 mo
393.372 279.344 392.812 280.747 392.378 282.083 cv
389.171 281.976 386.889 281.924 385.527 281.924 cv
384.183 281.924 381.903 281.976 378.688 282.083 cv
378.553 282.083 378.485 281.963 378.485 281.726 cv
378.485 281.512 378.553 281.399 378.688 281.381 cv
379.395 281.297 379.935 281.184 380.309 281.042 cv
380.683 280.903 380.944 280.711 381.094 280.475 cv
381.242 280.235 381.316 279.819 381.316 279.221 cv
381.316 267.194 li
381.316 266.606 381.246 266.19 381.106 265.948 cv
380.965 265.705 380.708 265.511 380.335 265.366 cv
379.96 265.221 379.411 265.106 378.688 265.021 cv
378.553 265.021 378.485 264.905 378.485 264.67 cv
378.485 264.438 378.553 264.321 378.688 264.321 cv
380.832 264.426 383.027 264.479 385.274 264.479 cv
387.538 264.479 389.737 264.426 391.874 264.321 cv
392.069 265.638 392.354 266.939 392.729 268.224 cv
392.729 268.393 392.577 268.479 392.276 268.479 cv
392.13 268.479 392.039 268.419 392.005 268.301 cv
391.375 266.295 390.032 265.292 387.973 265.292 cv
385.396 265.292 li
384.408 265.292 383.916 265.803 383.916 266.823 cv
383.916 272.5 li
387.136 272.5 li
387.994 272.5 388.576 272.306 388.881 271.915 cv
389.187 271.524 389.399 270.831 389.52 269.834 cv
389.52 269.699 389.637 269.631 389.87 269.631 cv
390.103 269.631 390.22 269.699 390.22 269.834 cv
390.22 270.259 390.193 270.795 390.141 271.44 cv
390.089 272.06 390.062 272.566 390.062 272.956 cv
390.062 273.356 390.089 273.866 390.141 274.485 cv
390.193 275.147 390.22 275.692 390.22 276.116 cv
390.22 276.252 390.103 276.32 389.87 276.32 cv
389.637 276.32 389.52 276.252 389.52 276.116 cv
389.391 275.08 389.165 274.354 388.843 273.938 cv
388.521 273.524 387.952 273.315 387.136 273.315 cv
383.916 273.315 li
383.916 279.602 li
383.916 280.608 384.408 281.11 385.396 281.11 cv
388.178 281.11 li
389.19 281.11 390.194 280.782 391.19 280.122 cv
392.187 279.463 392.918 278.641 393.385 277.655 cv
393.419 277.579 393.492 277.54 393.603 277.54 cv
393.722 277.54 393.827 277.573 393.922 277.636 cv
394.015 277.7 394.062 277.779 394.062 277.872 cv
cp
f
394.062 277.872 mo
393.372 279.344 392.812 280.747 392.378 282.083 cv
389.171 281.976 386.889 281.924 385.527 281.924 cv
384.183 281.924 381.903 281.976 378.688 282.083 cv
378.553 282.083 378.485 281.963 378.485 281.726 cv
378.485 281.512 378.553 281.399 378.688 281.381 cv
379.395 281.297 379.935 281.184 380.309 281.042 cv
380.683 280.903 380.944 280.711 381.094 280.475 cv
381.242 280.235 381.316 279.819 381.316 279.221 cv
381.316 267.194 li
381.316 266.606 381.246 266.19 381.106 265.948 cv
380.965 265.705 380.708 265.511 380.335 265.366 cv
379.96 265.221 379.411 265.106 378.688 265.021 cv
378.553 265.021 378.485 264.905 378.485 264.67 cv
378.485 264.438 378.553 264.321 378.688 264.321 cv
380.832 264.426 383.027 264.479 385.274 264.479 cv
387.538 264.479 389.737 264.426 391.874 264.321 cv
392.069 265.638 392.354 266.939 392.729 268.224 cv
392.729 268.393 392.577 268.479 392.276 268.479 cv
392.13 268.479 392.039 268.419 392.005 268.301 cv
391.375 266.295 390.032 265.292 387.973 265.292 cv
385.396 265.292 li
384.408 265.292 383.916 265.803 383.916 266.823 cv
383.916 272.5 li
387.136 272.5 li
387.994 272.5 388.576 272.306 388.881 271.915 cv
389.187 271.524 389.399 270.831 389.52 269.834 cv
389.52 269.699 389.637 269.631 389.87 269.631 cv
390.103 269.631 390.22 269.699 390.22 269.834 cv
390.22 270.259 390.193 270.795 390.141 271.44 cv
390.089 272.06 390.062 272.566 390.062 272.956 cv
390.062 273.356 390.089 273.866 390.141 274.485 cv
390.193 275.147 390.22 275.692 390.22 276.116 cv
390.22 276.252 390.103 276.32 389.87 276.32 cv
389.637 276.32 389.52 276.252 389.52 276.116 cv
389.391 275.08 389.165 274.354 388.843 273.938 cv
388.521 273.524 387.952 273.315 387.136 273.315 cv
383.916 273.315 li
383.916 279.602 li
383.916 280.608 384.408 281.11 385.396 281.11 cv
388.178 281.11 li
389.19 281.11 390.194 280.782 391.19 280.122 cv
392.187 279.463 392.918 278.641 393.385 277.655 cv
393.419 277.579 393.492 277.54 393.603 277.54 cv
393.722 277.54 393.827 277.573 393.922 277.636 cv
394.015 277.7 394.062 277.779 394.062 277.872 cv
cp
@
410.414 268.911 mo
410.414 266.424 409.329 265.179 407.158 265.179 cv
406.443 265.179 405.901 265.237 405.531 265.352 cv
405.161 265.467 404.914 265.649 404.791 265.895 cv
404.667 266.143 404.606 266.577 404.606 267.2 cv
404.606 272.885 li
405.099 272.953 405.721 272.987 406.469 272.987 cv
407.839 272.987 408.839 272.663 409.469 272.016 cv
410.099 271.368 410.414 270.334 410.414 268.911 cv
cp
416.922 281.726 mo
416.922 281.963 416.854 282.083 416.717 282.083 cv
416.402 282.083 415.887 282.051 415.172 281.991 cv
414.652 281.946 414.308 281.924 414.138 281.924 cv
413.89 281.924 413.502 281.95 412.975 282.002 cv
412.446 282.055 412.059 282.083 411.813 282.083 cv
407.947 275.77 li
407.404 274.899 406.963 274.34 406.627 274.092 cv
406.291 273.845 405.619 273.721 404.606 273.721 cv
404.606 279.221 li
404.606 279.808 404.681 280.225 404.829 280.467 cv
404.978 280.711 405.242 280.903 405.62 281.042 cv
405.999 281.184 406.541 281.297 407.246 281.381 cv
407.392 281.399 407.463 281.512 407.463 281.726 cv
407.463 281.963 407.396 282.083 407.26 282.083 cv
406.689 282.083 406.009 282.055 405.218 282.002 cv
404.462 281.95 403.825 281.924 403.307 281.924 cv
402.788 281.924 402.156 281.95 401.407 282.002 cv
400.625 282.055 399.949 282.083 399.379 282.083 cv
399.243 282.083 399.176 281.963 399.176 281.726 cv
399.176 281.512 399.243 281.399 399.379 281.381 cv
400.085 281.297 400.625 281.184 400.999 281.042 cv
401.373 280.903 401.635 280.711 401.784 280.475 cv
401.933 280.235 402.008 279.819 402.008 279.221 cv
402.008 267.194 li
402.008 266.606 401.937 266.19 401.797 265.948 cv
401.656 265.705 401.398 265.511 401.025 265.366 cv
400.65 265.221 400.103 265.106 399.379 265.021 cv
399.243 265.021 399.176 264.905 399.176 264.67 cv
399.176 264.438 399.243 264.321 399.379 264.321 cv
399.949 264.321 400.625 264.348 401.407 264.4 cv
402.156 264.454 402.79 264.479 403.309 264.479 cv
403.826 264.479 404.464 264.454 405.221 264.4 cv
406.012 264.348 406.69 264.321 407.262 264.321 cv
409.156 264.321 410.623 264.717 411.661 265.511 cv
412.697 266.305 413.216 267.42 413.216 268.857 cv
413.216 269.764 412.873 270.606 412.188 271.382 cv
411.503 272.161 410.576 272.758 409.408 273.178 cv
413.332 279.584 li
413.674 280.147 414.112 280.559 414.652 280.829 cv
415.19 281.094 415.887 281.28 416.742 281.381 cv
416.861 281.399 416.922 281.512 416.922 281.726 cv
cp
f
410.414 268.911 mo
410.414 266.424 409.329 265.179 407.158 265.179 cv
406.443 265.179 405.901 265.237 405.531 265.352 cv
405.161 265.467 404.914 265.649 404.791 265.895 cv
404.667 266.143 404.606 266.577 404.606 267.2 cv
404.606 272.885 li
405.099 272.953 405.721 272.987 406.469 272.987 cv
407.839 272.987 408.839 272.663 409.469 272.016 cv
410.099 271.368 410.414 270.334 410.414 268.911 cv
cp
416.922 281.726 mo
416.922 281.963 416.854 282.083 416.717 282.083 cv
416.402 282.083 415.887 282.051 415.172 281.991 cv
414.652 281.946 414.308 281.924 414.138 281.924 cv
413.89 281.924 413.502 281.95 412.975 282.002 cv
412.446 282.055 412.059 282.083 411.813 282.083 cv
407.947 275.77 li
407.404 274.899 406.963 274.34 406.627 274.092 cv
406.291 273.845 405.619 273.721 404.606 273.721 cv
404.606 279.221 li
404.606 279.808 404.681 280.225 404.829 280.467 cv
404.978 280.711 405.242 280.903 405.62 281.042 cv
405.999 281.184 406.541 281.297 407.246 281.381 cv
407.392 281.399 407.463 281.512 407.463 281.726 cv
407.463 281.963 407.396 282.083 407.26 282.083 cv
406.689 282.083 406.009 282.055 405.218 282.002 cv
404.462 281.95 403.825 281.924 403.307 281.924 cv
402.788 281.924 402.156 281.95 401.407 282.002 cv
400.625 282.055 399.949 282.083 399.379 282.083 cv
399.243 282.083 399.176 281.963 399.176 281.726 cv
399.176 281.512 399.243 281.399 399.379 281.381 cv
400.085 281.297 400.625 281.184 400.999 281.042 cv
401.373 280.903 401.635 280.711 401.784 280.475 cv
401.933 280.235 402.008 279.819 402.008 279.221 cv
402.008 267.194 li
402.008 266.606 401.937 266.19 401.797 265.948 cv
401.656 265.705 401.398 265.511 401.025 265.366 cv
400.65 265.221 400.103 265.106 399.379 265.021 cv
399.243 265.021 399.176 264.905 399.176 264.67 cv
399.176 264.438 399.243 264.321 399.379 264.321 cv
399.949 264.321 400.625 264.348 401.407 264.4 cv
402.156 264.454 402.79 264.479 403.309 264.479 cv
403.826 264.479 404.464 264.454 405.221 264.4 cv
406.012 264.348 406.69 264.321 407.262 264.321 cv
409.156 264.321 410.623 264.717 411.661 265.511 cv
412.697 266.305 413.216 267.42 413.216 268.857 cv
413.216 269.764 412.873 270.606 412.188 271.382 cv
411.503 272.161 410.576 272.758 409.408 273.178 cv
413.332 279.584 li
413.674 280.147 414.112 280.559 414.652 280.829 cv
415.19 281.094 415.887 281.28 416.742 281.381 cv
416.861 281.399 416.922 281.512 416.922 281.726 cv
cp
@
436.875 277.381 mo
436.473 278.88 436.156 280.447 435.926 282.083 cv
432.668 281.976 430.352 281.924 428.973 281.924 cv
427.611 281.924 425.323 281.976 422.109 282.083 cv
421.974 282.083 421.906 281.963 421.906 281.726 cv
421.906 281.512 421.974 281.399 422.109 281.381 cv
423.139 281.262 423.838 281.071 424.208 280.807 cv
424.578 280.542 424.763 280.014 424.763 279.221 cv
424.763 267.194 li
424.763 266.597 424.688 266.178 424.54 265.935 cv
424.39 265.692 424.129 265.501 423.755 265.36 cv
423.38 265.219 422.832 265.106 422.109 265.021 cv
421.974 265.021 421.906 264.905 421.906 264.67 cv
421.906 264.438 421.974 264.321 422.109 264.321 cv
422.68 264.321 423.36 264.348 424.151 264.4 cv
424.907 264.454 425.544 264.479 426.063 264.479 cv
426.581 264.479 427.213 264.454 427.962 264.4 cv
428.744 264.348 429.42 264.321 429.99 264.321 cv
430.126 264.321 430.193 264.438 430.193 264.67 cv
430.193 264.905 430.126 265.021 429.99 265.021 cv
429.275 265.106 428.73 265.219 428.357 265.36 cv
427.981 265.5 427.724 265.69 427.578 265.928 cv
427.434 266.168 427.361 266.588 427.361 267.194 cv
427.361 279.602 li
427.361 280.608 427.854 281.11 428.843 281.11 cv
431.373 281.11 li
432.419 281.11 433.305 280.833 434.029 280.274 cv
434.752 279.716 435.467 278.676 436.175 277.151 cv
436.209 277.083 436.289 277.049 436.416 277.049 cv
436.526 277.049 436.631 277.083 436.729 277.152 cv
436.826 277.219 436.875 277.295 436.875 277.381 cv
cp
f
436.875 277.381 mo
436.473 278.88 436.156 280.447 435.926 282.083 cv
432.668 281.976 430.352 281.924 428.973 281.924 cv
427.611 281.924 425.323 281.976 422.109 282.083 cv
421.974 282.083 421.906 281.963 421.906 281.726 cv
421.906 281.512 421.974 281.399 422.109 281.381 cv
423.139 281.262 423.838 281.071 424.208 280.807 cv
424.578 280.542 424.763 280.014 424.763 279.221 cv
424.763 267.194 li
424.763 266.597 424.688 266.178 424.54 265.935 cv
424.39 265.692 424.129 265.501 423.755 265.36 cv
423.38 265.219 422.832 265.106 422.109 265.021 cv
421.974 265.021 421.906 264.905 421.906 264.67 cv
421.906 264.438 421.974 264.321 422.109 264.321 cv
422.68 264.321 423.36 264.348 424.151 264.4 cv
424.907 264.454 425.544 264.479 426.063 264.479 cv
426.581 264.479 427.213 264.454 427.962 264.4 cv
428.744 264.348 429.42 264.321 429.99 264.321 cv
430.126 264.321 430.193 264.438 430.193 264.67 cv
430.193 264.905 430.126 265.021 429.99 265.021 cv
429.275 265.106 428.73 265.219 428.357 265.36 cv
427.981 265.5 427.724 265.69 427.578 265.928 cv
427.434 266.168 427.361 266.588 427.361 267.194 cv
427.361 279.602 li
427.361 280.608 427.854 281.11 428.843 281.11 cv
431.373 281.11 li
432.419 281.11 433.305 280.833 434.029 280.274 cv
434.752 279.716 435.467 278.676 436.175 277.151 cv
436.209 277.083 436.289 277.049 436.416 277.049 cv
436.526 277.049 436.631 277.083 436.729 277.152 cv
436.826 277.219 436.875 277.295 436.875 277.381 cv
cp
@
458.169 273.307 mo
458.169 270.797 457.563 268.749 456.352 267.159 cv
455.14 265.568 453.548 264.772 451.576 264.772 cv
449.595 264.772 448.003 265.568 446.8 267.159 cv
445.597 268.749 444.994 270.797 444.994 273.307 cv
444.994 275.799 445.592 277.817 446.787 279.36 cv
447.98 280.905 449.578 281.675 451.576 281.675 cv
453.564 281.675 455.16 280.905 456.364 279.36 cv
457.567 277.817 458.169 275.799 458.169 273.307 cv
cp
460.971 273.307 mo
460.971 276.002 460.104 278.207 458.369 279.918 cv
456.637 281.633 454.371 282.489 451.576 282.489 cv
448.779 282.489 446.516 281.633 444.787 279.918 cv
443.057 278.207 442.192 276.002 442.192 273.307 cv
442.192 270.602 443.064 268.37 444.806 266.606 cv
446.548 264.842 448.805 263.959 451.576 263.959 cv
454.354 263.959 456.615 264.842 458.358 266.606 cv
460.1 268.37 460.971 270.602 460.971 273.307 cv
cp
f
458.169 273.307 mo
458.169 270.797 457.563 268.749 456.352 267.159 cv
455.14 265.568 453.548 264.772 451.576 264.772 cv
449.595 264.772 448.003 265.568 446.8 267.159 cv
445.597 268.749 444.994 270.797 444.994 273.307 cv
444.994 275.799 445.592 277.817 446.787 279.36 cv
447.98 280.905 449.578 281.675 451.576 281.675 cv
453.564 281.675 455.16 280.905 456.364 279.36 cv
457.567 277.817 458.169 275.799 458.169 273.307 cv
cp
460.971 273.307 mo
460.971 276.002 460.104 278.207 458.369 279.918 cv
456.637 281.633 454.371 282.489 451.576 282.489 cv
448.779 282.489 446.516 281.633 444.787 279.918 cv
443.057 278.207 442.192 276.002 442.192 273.307 cv
442.192 270.602 443.064 268.37 444.806 266.606 cv
446.548 264.842 448.805 263.959 451.576 263.959 cv
454.354 263.959 456.615 264.842 458.358 266.606 cv
460.1 268.37 460.971 270.602 460.971 273.307 cv
cp
@
483.35 273.307 mo
483.35 270.797 482.743 268.749 481.531 267.159 cv
480.32 265.568 478.729 264.772 476.755 264.772 cv
474.775 264.772 473.182 265.568 471.98 267.159 cv
470.776 268.749 470.175 270.797 470.175 273.307 cv
470.175 275.799 470.772 277.817 471.967 279.36 cv
473.162 280.905 474.758 281.675 476.755 281.675 cv
478.745 281.675 480.341 280.905 481.544 279.36 cv
482.748 277.817 483.35 275.799 483.35 273.307 cv
cp
486.151 273.307 mo
486.151 276.002 485.284 278.207 483.551 279.918 cv
481.816 281.633 479.552 282.489 476.755 282.489 cv
473.959 282.489 471.696 281.633 469.968 279.918 cv
468.237 278.207 467.373 276.002 467.373 273.307 cv
467.373 270.602 468.244 268.37 469.985 266.606 cv
471.729 264.842 473.984 263.959 476.755 263.959 cv
479.534 263.959 481.796 264.842 483.537 266.606 cv
485.28 268.37 486.151 270.602 486.151 273.307 cv
cp
f
483.35 273.307 mo
483.35 270.797 482.743 268.749 481.531 267.159 cv
480.32 265.568 478.729 264.772 476.755 264.772 cv
474.775 264.772 473.182 265.568 471.98 267.159 cv
470.776 268.749 470.175 270.797 470.175 273.307 cv
470.175 275.799 470.772 277.817 471.967 279.36 cv
473.162 280.905 474.758 281.675 476.755 281.675 cv
478.745 281.675 480.341 280.905 481.544 279.36 cv
482.748 277.817 483.35 275.799 483.35 273.307 cv
cp
486.151 273.307 mo
486.151 276.002 485.284 278.207 483.551 279.918 cv
481.816 281.633 479.552 282.489 476.755 282.489 cv
473.959 282.489 471.696 281.633 469.968 279.918 cv
468.237 278.207 467.373 276.002 467.373 273.307 cv
467.373 270.602 468.244 268.37 469.985 266.606 cv
471.729 264.842 473.984 263.959 476.755 263.959 cv
479.534 263.959 481.796 264.842 483.537 266.606 cv
485.28 268.37 486.151 270.602 486.151 273.307 cv
cp
@
124.643 298.453 mo
124.643 315.129 li
123.287 315.129 li
122.843 311.93 122.048 309.382 120.903 307.486 cv
119.757 305.588 118.124 304.084 116.005 302.971 cv
113.885 301.858 111.692 301.299 109.425 301.299 cv
106.862 301.299 104.743 302.053 103.067 303.559 cv
101.391 305.067 100.554 306.78 100.554 308.7 cv
100.554 310.17 101.083 311.512 102.143 312.721 cv
103.669 314.5 107.302 316.874 113.04 319.836 cv
117.719 322.257 120.912 324.114 122.619 325.404 cv
124.326 326.698 125.64 328.22 126.561 329.974 cv
127.481 331.729 127.942 333.565 127.942 335.485 cv
127.942 339.136 126.472 342.283 123.531 344.925 cv
120.59 347.569 116.807 348.889 112.182 348.889 cv
110.729 348.889 109.364 348.782 108.084 348.567 cv
107.322 348.448 105.741 348.012 103.341 347.261 cv
100.941 346.51 99.4224 346.133 98.7827 346.133 cv
98.1675 346.133 97.6816 346.312 97.3252 346.67 cv
96.9678 347.028 96.7036 347.768 96.5313 348.889 cv
95.1758 348.889 li
95.1758 332.348 li
96.5313 332.348 li
97.1714 335.815 98.0337 338.409 99.1167 340.131 cv
100.2 341.852 101.856 343.284 104.084 344.422 cv
106.313 345.563 108.757 346.133 111.416 346.133 cv
114.494 346.133 116.926 345.349 118.711 343.78 cv
120.496 342.211 121.389 340.358 121.389 338.218 cv
121.389 337.03 121.05 335.83 120.375 334.618 cv
119.7 333.407 118.65 332.276 117.227 331.231 cv
116.269 330.516 113.645 329.01 109.354 326.706 cv
105.063 324.405 102.013 322.565 100.202 321.19 cv
98.3916 319.814 97.0186 318.295 96.0825 316.635 cv
95.146 314.975 94.6787 313.148 94.6787 311.155 cv
94.6787 307.692 96.0586 304.709 98.8179 302.207 cv
101.578 299.704 105.089 298.453 109.352 298.453 cv
112.013 298.453 114.834 299.079 117.817 300.327 cv
119.197 300.915 120.17 301.209 120.736 301.209 cv
121.376 301.209 121.9 301.028 122.307 300.661 cv
122.714 300.295 123.04 299.559 123.287 298.453 cv
124.643 298.453 li
cp
f
124.643 298.453 mo
124.643 315.129 li
123.287 315.129 li
122.843 311.93 122.048 309.382 120.903 307.486 cv
119.757 305.588 118.124 304.084 116.005 302.971 cv
113.885 301.858 111.692 301.299 109.425 301.299 cv
106.862 301.299 104.743 302.053 103.067 303.559 cv
101.391 305.067 100.554 306.78 100.554 308.7 cv
100.554 310.17 101.083 311.512 102.143 312.721 cv
103.669 314.5 107.302 316.874 113.04 319.836 cv
117.719 322.257 120.912 324.114 122.619 325.404 cv
124.326 326.698 125.64 328.22 126.561 329.974 cv
127.481 331.729 127.942 333.565 127.942 335.485 cv
127.942 339.136 126.472 342.283 123.531 344.925 cv
120.59 347.569 116.807 348.889 112.182 348.889 cv
110.729 348.889 109.364 348.782 108.084 348.567 cv
107.322 348.448 105.741 348.012 103.341 347.261 cv
100.941 346.51 99.4224 346.133 98.7827 346.133 cv
98.1675 346.133 97.6816 346.312 97.3252 346.67 cv
96.9678 347.028 96.7036 347.768 96.5313 348.889 cv
95.1758 348.889 li
95.1758 332.348 li
96.5313 332.348 li
97.1714 335.815 98.0337 338.409 99.1167 340.131 cv
100.2 341.852 101.856 343.284 104.084 344.422 cv
106.313 345.563 108.757 346.133 111.416 346.133 cv
114.494 346.133 116.926 345.349 118.711 343.78 cv
120.496 342.211 121.389 340.358 121.389 338.218 cv
121.389 337.03 121.05 335.83 120.375 334.618 cv
119.7 333.407 118.65 332.276 117.227 331.231 cv
116.269 330.516 113.645 329.01 109.354 326.706 cv
105.063 324.405 102.013 322.565 100.202 321.19 cv
98.3916 319.814 97.0186 318.295 96.0825 316.635 cv
95.146 314.975 94.6787 313.148 94.6787 311.155 cv
94.6787 307.692 96.0586 304.709 98.8179 302.207 cv
101.578 299.704 105.089 298.453 109.352 298.453 cv
112.013 298.453 114.834 299.079 117.817 300.327 cv
119.197 300.915 120.17 301.209 120.736 301.209 cv
121.376 301.209 121.9 301.028 122.307 300.661 cv
122.714 300.295 123.04 299.559 123.287 298.453 cv
124.643 298.453 li
cp
@
160.441 299.538 mo
177.902 299.538 li
177.902 300.848 li
176.943 300.848 li
176.304 300.848 175.37 301.122 174.141 301.668 cv
172.912 302.216 171.793 303.001 170.786 304.024 cv
169.777 305.047 168.536 306.711 167.061 309.018 cv
154.986 327.334 li
154.986 339.444 li
154.986 342.411 155.331 344.262 156.021 344.999 cv
156.958 345.996 158.436 346.495 160.456 346.495 cv
162.082 346.495 li
162.082 347.805 li
140.795 347.805 li
140.795 346.495 li
142.569 346.495 li
144.688 346.495 146.191 345.877 147.078 344.643 cv
147.62 343.883 147.891 342.15 147.891 339.444 cv
147.891 327.995 li
134.201 307.776 li
132.578 305.409 131.478 303.928 130.9 303.334 cv
130.322 302.743 129.124 302.033 127.305 301.202 cv
126.813 300.966 126.1 300.848 125.166 300.848 cv
125.166 299.538 li
146.526 299.538 li
146.526 300.848 li
145.419 300.848 li
144.264 300.848 143.201 301.109 142.229 301.631 cv
141.258 302.155 140.773 302.938 140.773 303.983 cv
140.773 304.837 141.523 306.383 143.022 308.614 cv
153.473 324.169 li
163.281 309.291 li
164.755 307.057 165.494 305.397 165.494 304.303 cv
165.494 303.639 165.315 303.043 164.959 302.522 cv
164.603 301.999 164.092 301.589 163.429 301.292 cv
162.765 300.997 161.769 300.848 160.441 300.848 cv
160.441 299.538 li
cp
f
160.441 299.538 mo
177.902 299.538 li
177.902 300.848 li
176.943 300.848 li
176.304 300.848 175.37 301.122 174.141 301.668 cv
172.912 302.216 171.793 303.001 170.786 304.024 cv
169.777 305.047 168.536 306.711 167.061 309.018 cv
154.986 327.334 li
154.986 339.444 li
154.986 342.411 155.331 344.262 156.021 344.999 cv
156.958 345.996 158.436 346.495 160.456 346.495 cv
162.082 346.495 li
162.082 347.805 li
140.795 347.805 li
140.795 346.495 li
142.569 346.495 li
144.688 346.495 146.191 345.877 147.078 344.643 cv
147.62 343.883 147.891 342.15 147.891 339.444 cv
147.891 327.995 li
134.201 307.776 li
132.578 305.409 131.478 303.928 130.9 303.334 cv
130.322 302.743 129.124 302.033 127.305 301.202 cv
126.813 300.966 126.1 300.848 125.166 300.848 cv
125.166 299.538 li
146.526 299.538 li
146.526 300.848 li
145.419 300.848 li
144.264 300.848 143.201 301.109 142.229 301.631 cv
141.258 302.155 140.773 302.938 140.773 303.983 cv
140.773 304.837 141.523 306.383 143.022 308.614 cv
153.473 324.169 li
163.281 309.291 li
164.755 307.057 165.494 305.397 165.494 304.303 cv
165.494 303.639 165.315 303.043 164.959 302.522 cv
164.603 301.999 164.092 301.589 163.429 301.292 cv
162.765 300.997 161.769 300.848 160.441 300.848 cv
160.441 299.538 li
cp
@
205.322 347.805 mo
186.024 307.19 li
186.024 339.444 li
186.024 342.411 186.356 344.262 187.021 344.999 cv
187.933 345.996 189.374 346.495 191.346 346.495 cv
193.12 346.495 li
193.12 347.805 li
175.674 347.805 li
175.674 346.495 li
177.448 346.495 li
179.567 346.495 181.07 345.877 181.957 344.643 cv
182.499 343.883 182.77 342.15 182.77 339.444 cv
182.77 307.898 li
182.77 305.761 182.523 304.219 182.03 303.27 cv
181.686 302.581 181.051 302.006 180.127 301.542 cv
179.204 301.08 177.719 300.848 175.674 300.848 cv
175.674 299.538 li
189.885 299.538 li
207.967 337.274 li
225.849 299.538 li
240.031 299.538 li
240.031 300.848 li
238.294 300.848 li
236.15 300.848 234.636 301.465 233.749 302.7 cv
233.206 303.459 232.936 305.192 232.936 307.898 cv
232.936 339.444 li
232.936 342.411 233.28 344.262 233.971 344.999 cv
234.882 345.996 236.323 346.495 238.294 346.495 cv
240.031 346.495 li
240.031 347.805 li
218.745 347.805 li
218.745 346.495 li
220.519 346.495 li
222.662 346.495 224.165 345.877 225.027 344.643 cv
225.569 343.883 225.84 342.15 225.84 339.444 cv
225.84 307.19 li
206.542 347.805 li
205.322 347.805 li
cp
f
205.322 347.805 mo
186.024 307.19 li
186.024 339.444 li
186.024 342.411 186.356 344.262 187.021 344.999 cv
187.933 345.996 189.374 346.495 191.346 346.495 cv
193.12 346.495 li
193.12 347.805 li
175.674 347.805 li
175.674 346.495 li
177.448 346.495 li
179.567 346.495 181.07 345.877 181.957 344.643 cv
182.499 343.883 182.77 342.15 182.77 339.444 cv
182.77 307.898 li
182.77 305.761 182.523 304.219 182.03 303.27 cv
181.686 302.581 181.051 302.006 180.127 301.542 cv
179.204 301.08 177.719 300.848 175.674 300.848 cv
175.674 299.538 li
189.885 299.538 li
207.967 337.274 li
225.849 299.538 li
240.031 299.538 li
240.031 300.848 li
238.294 300.848 li
236.15 300.848 234.636 301.465 233.749 302.7 cv
233.206 303.459 232.936 305.192 232.936 307.898 cv
232.936 339.444 li
232.936 342.411 233.28 344.262 233.971 344.999 cv
234.882 345.996 236.323 346.495 238.294 346.495 cv
240.031 346.495 li
240.031 347.805 li
218.745 347.805 li
218.745 346.495 li
220.519 346.495 li
222.662 346.495 224.165 345.877 225.027 344.643 cv
225.569 343.883 225.84 342.15 225.84 339.444 cv
225.84 307.19 li
206.542 347.805 li
205.322 347.805 li
cp
@
255.611 323.185 mo
256.906 323.422 258.056 323.6 259.059 323.719 cv
260.062 323.838 260.917 323.897 261.626 323.897 cv
264.168 323.897 266.363 322.942 268.207 321.032 cv
270.055 319.121 270.977 316.646 270.977 313.608 cv
270.977 311.52 270.536 309.581 269.656 307.788 cv
268.776 305.996 267.529 304.654 265.917 303.764 cv
264.303 302.875 262.468 302.43 260.414 302.43 cv
259.169 302.43 257.567 302.655 255.611 303.106 cv
255.611 323.185 li
cp
255.611 325.209 mo
255.611 339.263 li
255.611 342.303 255.953 344.191 256.637 344.926 cv
257.564 345.971 258.968 346.495 260.847 346.495 cv
262.752 346.495 li
262.752 347.805 li
241.375 347.805 li
241.375 346.495 li
243.252 346.495 li
245.361 346.495 246.871 345.829 247.779 344.499 cv
248.27 343.764 248.516 342.018 248.516 339.263 cv
248.516 308.079 li
248.516 305.04 248.185 303.151 247.521 302.416 cv
246.564 301.37 245.142 300.848 243.252 300.848 cv
241.375 300.848 li
241.375 299.538 li
259.683 299.538 li
264.152 299.538 267.677 299.982 270.255 300.872 cv
272.834 301.762 275.008 303.264 276.776 305.375 cv
278.544 307.489 279.429 309.993 279.429 312.887 cv
279.429 316.829 278.085 320.032 275.397 322.5 cv
272.71 324.969 268.912 326.202 264.004 326.202 cv
262.801 326.202 261.5 326.119 260.101 325.955 cv
258.702 325.788 257.205 325.54 255.611 325.209 cv
cp
f
255.611 323.185 mo
256.906 323.422 258.056 323.6 259.059 323.719 cv
260.062 323.838 260.917 323.897 261.626 323.897 cv
264.168 323.897 266.363 322.942 268.207 321.032 cv
270.055 319.121 270.977 316.646 270.977 313.608 cv
270.977 311.52 270.536 309.581 269.656 307.788 cv
268.776 305.996 267.529 304.654 265.917 303.764 cv
264.303 302.875 262.468 302.43 260.414 302.43 cv
259.169 302.43 257.567 302.655 255.611 303.106 cv
255.611 323.185 li
cp
255.611 325.209 mo
255.611 339.263 li
255.611 342.303 255.953 344.191 256.637 344.926 cv
257.564 345.971 258.968 346.495 260.847 346.495 cv
262.752 346.495 li
262.752 347.805 li
241.375 347.805 li
241.375 346.495 li
243.252 346.495 li
245.361 346.495 246.871 345.829 247.779 344.499 cv
248.27 343.764 248.516 342.018 248.516 339.263 cv
248.516 308.079 li
248.516 305.04 248.185 303.151 247.521 302.416 cv
246.564 301.37 245.142 300.848 243.252 300.848 cv
241.375 300.848 li
241.375 299.538 li
259.683 299.538 li
264.152 299.538 267.677 299.982 270.255 300.872 cv
272.834 301.762 275.008 303.264 276.776 305.375 cv
278.544 307.489 279.429 309.993 279.429 312.887 cv
279.429 316.829 278.085 320.032 275.397 322.5 cv
272.71 324.969 268.912 326.202 264.004 326.202 cv
262.801 326.202 261.5 326.119 260.101 325.955 cv
258.702 325.788 257.205 325.54 255.611 325.209 cv
cp
@
294.645 321.954 mo
317.875 321.954 li
317.875 308.079 li
317.875 305.622 317.715 304.002 317.396 303.221 cv
317.15 302.631 316.637 302.124 315.851 301.7 cv
314.795 301.131 313.679 300.848 312.501 300.848 cv
310.734 300.848 li
310.734 299.538 li
332.111 299.538 li
332.111 300.848 li
330.345 300.848 li
329.166 300.848 328.051 301.12 326.994 301.663 cv
326.209 302.042 325.675 302.615 325.393 303.383 cv
325.11 304.151 324.971 305.715 324.971 308.079 cv
324.971 339.263 li
324.971 341.709 325.13 343.324 325.449 344.108 cv
325.695 344.702 326.197 345.211 326.958 345.639 cv
328.037 346.21 329.166 346.495 330.345 346.495 cv
332.111 346.495 li
332.111 347.805 li
310.734 347.805 li
310.734 346.495 li
312.501 346.495 li
314.537 346.495 316.021 345.913 316.955 344.749 cv
317.568 343.989 317.875 342.16 317.875 339.263 cv
317.875 324.575 li
294.645 324.575 li
294.645 339.263 li
294.645 341.709 294.803 343.324 295.121 344.108 cv
295.365 344.702 295.878 345.211 296.659 345.639 cv
297.708 346.21 298.818 346.495 299.99 346.495 cv
301.785 346.495 li
301.785 347.805 li
280.408 347.805 li
280.408 346.495 li
282.176 346.495 li
284.236 346.495 285.733 345.913 286.667 344.749 cv
287.254 343.989 287.549 342.16 287.549 339.263 cv
287.549 308.079 li
287.549 305.622 287.39 304.002 287.07 303.221 cv
286.825 302.631 286.322 302.124 285.563 301.7 cv
284.481 301.131 283.354 300.848 282.176 300.848 cv
280.408 300.848 li
280.408 299.538 li
301.785 299.538 li
301.785 300.848 li
299.99 300.848 li
298.818 300.848 297.708 301.12 296.659 301.663 cv
295.902 302.042 295.378 302.615 295.084 303.383 cv
294.79 304.151 294.645 305.715 294.645 308.079 cv
294.645 321.954 li
cp
f
294.645 321.954 mo
317.875 321.954 li
317.875 308.079 li
317.875 305.622 317.715 304.002 317.396 303.221 cv
317.15 302.631 316.637 302.124 315.851 301.7 cv
314.795 301.131 313.679 300.848 312.501 300.848 cv
310.734 300.848 li
310.734 299.538 li
332.111 299.538 li
332.111 300.848 li
330.345 300.848 li
329.166 300.848 328.051 301.12 326.994 301.663 cv
326.209 302.042 325.675 302.615 325.393 303.383 cv
325.11 304.151 324.971 305.715 324.971 308.079 cv
324.971 339.263 li
324.971 341.709 325.13 343.324 325.449 344.108 cv
325.695 344.702 326.197 345.211 326.958 345.639 cv
328.037 346.21 329.166 346.495 330.345 346.495 cv
332.111 346.495 li
332.111 347.805 li
310.734 347.805 li
310.734 346.495 li
312.501 346.495 li
314.537 346.495 316.021 345.913 316.955 344.749 cv
317.568 343.989 317.875 342.16 317.875 339.263 cv
317.875 324.575 li
294.645 324.575 li
294.645 339.263 li
294.645 341.709 294.803 343.324 295.121 344.108 cv
295.365 344.702 295.878 345.211 296.659 345.639 cv
297.708 346.21 298.818 346.495 299.99 346.495 cv
301.785 346.495 li
301.785 347.805 li
280.408 347.805 li
280.408 346.495 li
282.176 346.495 li
284.236 346.495 285.733 345.913 286.667 344.749 cv
287.254 343.989 287.549 342.16 287.549 339.263 cv
287.549 308.079 li
287.549 305.622 287.39 304.002 287.07 303.221 cv
286.825 302.631 286.322 302.124 285.563 301.7 cv
284.481 301.131 283.354 300.848 282.176 300.848 cv
280.408 300.848 li
280.408 299.538 li
301.785 299.538 li
301.785 300.848 li
299.99 300.848 li
298.818 300.848 297.708 301.12 296.659 301.663 cv
295.902 302.042 295.378 302.615 295.084 303.383 cv
294.79 304.151 294.645 305.715 294.645 308.079 cv
294.645 321.954 li
cp
@
356.058 301.028 mo
351.583 301.028 347.993 302.629 345.287 305.833 cv
341.92 309.817 340.235 315.653 340.235 323.338 cv
340.235 331.213 341.98 337.274 345.474 341.518 cv
348.152 344.747 351.693 346.359 356.094 346.359 cv
360.791 346.359 364.67 344.592 367.731 341.058 cv
370.792 337.524 372.323 331.949 372.323 324.333 cv
372.323 316.08 370.639 309.924 367.271 305.869 cv
364.565 302.643 360.828 301.028 356.058 301.028 cv
cp
356.758 298.453 mo
363.252 298.453 368.877 300.83 373.635 305.583 cv
378.395 310.338 380.774 316.272 380.774 323.387 cv
380.774 330.714 378.376 336.795 373.581 341.634 cv
368.785 346.47 362.98 348.889 356.167 348.889 cv
349.281 348.889 343.496 346.53 338.812 341.813 cv
334.127 337.092 331.783 330.987 331.783 323.493 cv
331.783 315.834 334.488 309.586 339.9 304.747 cv
344.598 300.551 350.216 298.453 356.758 298.453 cv
cp
f
356.058 301.028 mo
351.583 301.028 347.993 302.629 345.287 305.833 cv
341.92 309.817 340.235 315.653 340.235 323.338 cv
340.235 331.213 341.98 337.274 345.474 341.518 cv
348.152 344.747 351.693 346.359 356.094 346.359 cv
360.791 346.359 364.67 344.592 367.731 341.058 cv
370.792 337.524 372.323 331.949 372.323 324.333 cv
372.323 316.08 370.639 309.924 367.271 305.869 cv
364.565 302.643 360.828 301.028 356.058 301.028 cv
cp
356.758 298.453 mo
363.252 298.453 368.877 300.83 373.635 305.583 cv
378.395 310.338 380.774 316.272 380.774 323.387 cv
380.774 330.714 378.376 336.795 373.581 341.634 cv
368.785 346.47 362.98 348.889 356.167 348.889 cv
349.281 348.889 343.496 346.53 338.812 341.813 cv
334.127 337.092 331.783 330.987 331.783 323.493 cv
331.783 315.834 334.488 309.586 339.9 304.747 cv
344.598 300.551 350.216 298.453 356.758 298.453 cv
cp
@
378.148 299.538 mo
391.728 299.538 li
422.297 335.7 li
422.297 307.898 li
422.297 304.93 421.951 303.079 421.262 302.343 cv
420.35 301.346 418.909 300.848 416.938 300.848 cv
415.201 300.848 li
415.201 299.538 li
432.646 299.538 li
432.646 300.848 li
430.873 300.848 li
428.753 300.848 427.25 301.465 426.363 302.7 cv
425.82 303.459 425.551 305.192 425.551 307.898 cv
425.551 348.588 li
424.219 348.588 li
391.248 309.702 li
391.248 339.444 li
391.248 342.411 391.58 344.262 392.247 344.999 cv
393.182 345.996 394.624 346.495 396.57 346.495 cv
398.344 346.495 li
398.344 347.805 li
380.898 347.805 li
380.898 346.495 li
382.636 346.495 li
384.778 346.495 386.295 345.877 387.183 344.643 cv
387.723 343.883 387.994 342.15 387.994 339.444 cv
387.994 305.864 li
386.544 304.227 385.443 303.149 384.693 302.627 cv
383.943 302.106 382.844 301.62 381.393 301.168 cv
380.68 300.954 379.598 300.848 378.148 300.848 cv
378.148 299.538 li
cp
f
378.148 299.538 mo
391.728 299.538 li
422.297 335.7 li
422.297 307.898 li
422.297 304.93 421.951 303.079 421.262 302.343 cv
420.35 301.346 418.909 300.848 416.938 300.848 cv
415.201 300.848 li
415.201 299.538 li
432.646 299.538 li
432.646 300.848 li
430.873 300.848 li
428.753 300.848 427.25 301.465 426.363 302.7 cv
425.82 303.459 425.551 305.192 425.551 307.898 cv
425.551 348.588 li
424.219 348.588 li
391.248 309.702 li
391.248 339.444 li
391.248 342.411 391.58 344.262 392.247 344.999 cv
393.182 345.996 394.624 346.495 396.57 346.495 cv
398.344 346.495 li
398.344 347.805 li
380.898 347.805 li
380.898 346.495 li
382.636 346.495 li
384.778 346.495 386.295 345.877 387.183 344.643 cv
387.723 343.883 387.994 342.15 387.994 339.444 cv
387.994 305.864 li
386.544 304.227 385.443 303.149 384.693 302.627 cv
383.943 302.106 382.844 301.62 381.393 301.168 cv
380.68 300.954 379.598 300.848 378.148 300.848 cv
378.148 299.538 li
cp
@
468.183 299.538 mo
485.645 299.538 li
485.645 300.848 li
484.684 300.848 li
484.046 300.848 483.11 301.122 481.882 301.668 cv
480.653 302.216 479.534 303.001 478.526 304.024 cv
477.518 305.047 476.277 306.711 474.804 309.018 cv
462.728 327.334 li
462.728 339.444 li
462.728 342.411 463.072 344.262 463.762 344.999 cv
464.699 345.996 466.177 346.495 468.196 346.495 cv
469.823 346.495 li
469.823 347.805 li
448.537 347.805 li
448.537 346.495 li
450.311 346.495 li
452.429 346.495 453.932 345.877 454.818 344.643 cv
455.361 343.883 455.632 342.15 455.632 339.444 cv
455.632 327.995 li
441.941 307.776 li
440.319 305.409 439.218 303.928 438.642 303.334 cv
438.063 302.743 436.865 302.033 435.046 301.202 cv
434.555 300.966 433.84 300.848 432.908 300.848 cv
432.908 299.538 li
454.268 299.538 li
454.268 300.848 li
453.161 300.848 li
452.006 300.848 450.942 301.109 449.972 301.631 cv
449 302.155 448.514 302.938 448.514 303.983 cv
448.514 304.837 449.264 306.383 450.764 308.614 cv
461.214 324.169 li
471.022 309.291 li
472.497 307.057 473.235 305.397 473.235 304.303 cv
473.235 303.639 473.057 303.043 472.7 302.522 cv
472.343 301.999 471.835 301.589 471.171 301.292 cv
470.507 300.997 469.51 300.848 468.183 300.848 cv
468.183 299.538 li
cp
f
468.183 299.538 mo
485.645 299.538 li
485.645 300.848 li
484.684 300.848 li
484.046 300.848 483.11 301.122 481.882 301.668 cv
480.653 302.216 479.534 303.001 478.526 304.024 cv
477.518 305.047 476.277 306.711 474.804 309.018 cv
462.728 327.334 li
462.728 339.444 li
462.728 342.411 463.072 344.262 463.762 344.999 cv
464.699 345.996 466.177 346.495 468.196 346.495 cv
469.823 346.495 li
469.823 347.805 li
448.537 347.805 li
448.537 346.495 li
450.311 346.495 li
452.429 346.495 453.932 345.877 454.818 344.643 cv
455.361 343.883 455.632 342.15 455.632 339.444 cv
455.632 327.995 li
441.941 307.776 li
440.319 305.409 439.218 303.928 438.642 303.334 cv
438.063 302.743 436.865 302.033 435.046 301.202 cv
434.555 300.966 433.84 300.848 432.908 300.848 cv
432.908 299.538 li
454.268 299.538 li
454.268 300.848 li
453.161 300.848 li
452.006 300.848 450.942 301.109 449.972 301.631 cv
449 302.155 448.514 302.938 448.514 303.983 cv
448.514 304.837 449.264 306.383 450.764 308.614 cv
461.214 324.169 li
471.022 309.291 li
472.497 307.057 473.235 305.397 473.235 304.303 cv
473.235 303.639 473.057 303.043 472.7 302.522 cv
472.343 301.999 471.835 301.589 471.171 301.292 cv
470.507 300.997 469.51 300.848 468.183 300.848 cv
468.183 299.538 li
cp
@
3.21533 293.186 mo
2.90967 292.725 2.37207 291.18 3.37402 290.799 cv
3.59375 290.775 2.12988 291.214 1.15186 292.104 cv
.174316 292.991 .292969 294.059 .648438 294.68 cv
.960449 295.225 1.25488 295.51 2.07031 296.013 cv
3.08105 296.635 5.38672 298.143 7.97217 299.999 cv
7.97217 366.989 li
41.4712 366.989 li
41.7876 368.418 42.3477 371.073 42.4111 372.192 cv
44.3594 372.192 li
40.1157 341.64 31.7407 310.042 3.21533 293.186 cv
cp
ef
35.6128 262.467 mo
32.8511 257.92 29.2417 254.139 25.4785 250.206 cv
19.1802 243.802 11.0313 239.012 2.95752 234.993 cv
2.40527 234.368 2.96826 232.495 3.79492 232.117 cv
3.58008 232.036 li
3.58008 232.036 1.98096 232.303 1.00342 233.192 cv
.0263672 234.08 -.0620117 235.59 .0263672 236.212 cv
.115234 236.834 .55957 237.19 1.44824 237.545 cv
2.25391 237.868 5.17969 239.145 7.97217 240.706 cv
7.97217 262.375 li
17.9648 262.501 26.4917 262.516 35.6128 262.467 cv
cp
ef
18.5293 295.299 mo
18.2212 295.453 16.6826 295.065 17.0645 296.219 cv
35.2803 316.057 41.397 341.273 44.9688 366.989 cv
50.7119 366.989 li
51.0273 368.418 51.5884 371.073 51.6519 372.192 cv
53.4956 372.192 li
50.228 345.094 45.873 318.551 32.7695 295.484 cv
18.5293 295.299 li
cp
ef
29.625 290.474 mo
28.7827 288.084 26.7861 286.157 25.4053 283.997 cv
19.186 276.209 11.1958 269.803 2.8916 265.165 cv
2.35596 264.01 2.896 262.701 3.97461 262.318 cv
3.99609 262.318 4.0166 262.318 4.03955 262.318 cv
3.84717 262.247 li
3.84717 262.247 2.24756 262.512 1.27051 263.403 cv
.292969 264.292 .262695 265.536 .351563 266.157 cv
.441406 266.78 1.41797 267.312 2.12988 267.755 cv
2.84961 268.208 5.25195 269.717 7.97217 271.326 cv
7.97217 290.525 li
14.8711 290.347 21.6792 291.149 29.625 290.474 cv
cp
f
39.604 268.018 mo
38.5269 267.399 li
16.7417 267.583 li
16.7412 268.123 li
26.4229 276.071 33.4043 287.094 38.4604 297.883 cv
47.7383 319.263 51.9531 342.849 54.2856 366.989 cv
60.4409 366.989 li
60.644 368.172 60.9805 370.265 61.1597 372.192 cv
62.2852 372.192 li
62.2852 372.192 63.0107 372.183 63.0107 372.18 cv
63.0107 372.132 li
60.5742 335.307 57.3374 298.789 39.604 268.018 cv
cp
ef
69.8115 237.752 mo
42.2866 237.696 li
22.1187 237.647 li
21.041 237.647 li
20.6563 237.799 19.9634 237.565 20.1157 238.182 cv
30.1836 245.516 39.0908 256.008 44.4551 266.874 cv
58.96 297.156 62.6934 331.856 64.1289 366.989 cv
69.8115 366.989 li
69.8115 237.752 li
cp
f
182.185 372.4 mo
189.018 372.4 li
189.018 373.372 li
183.251 373.372 li
183.251 376.6 li
188.41 376.6 li
188.41 377.571 li
183.251 377.571 li
183.251 380.879 li
189.085 380.879 li
189.085 381.852 li
182.185 381.852 li
182.185 372.4 li
cp
f
.25 lw
182.185 372.4 mo
189.018 372.4 li
189.018 373.372 li
183.251 373.372 li
183.251 376.6 li
188.41 376.6 li
188.41 377.571 li
183.251 377.571 li
183.251 380.879 li
189.085 380.879 li
189.085 381.852 li
182.185 381.852 li
182.185 372.4 li
cp
@
195.253 380.868 mo
197.644 380.868 199.17 379.247 199.17 377.153 cv
199.17 377.125 li
199.17 375.034 197.644 373.385 195.253 373.385 cv
193.039 373.385 li
193.039 380.868 li
195.253 380.868 li
cp
191.972 372.4 mo
195.253 372.4 li
198.225 372.4 200.277 374.439 200.277 377.098 cv
200.277 377.125 li
200.277 379.786 198.225 381.852 195.253 381.852 cv
191.972 381.852 li
191.972 372.4 li
cp
f
195.253 380.868 mo
197.644 380.868 199.17 379.247 199.17 377.153 cv
199.17 377.125 li
199.17 375.034 197.644 373.385 195.253 373.385 cv
193.039 373.385 li
193.039 380.868 li
195.253 380.868 li
cp
191.972 372.4 mo
195.253 372.4 li
198.225 372.4 200.277 374.439 200.277 377.098 cv
200.277 377.125 li
200.277 379.786 198.225 381.852 195.253 381.852 cv
191.972 381.852 li
191.972 372.4 li
cp
@
202.058 372.4 mo
203.219 372.4 li
205.92 380.272 li
208.513 372.373 li
209.391 372.373 li
211.983 380.272 li
214.684 372.4 li
215.805 372.4 li
212.429 381.92 li
211.524 381.92 li
208.932 374.25 li
206.325 381.92 li
205.434 381.92 li
202.058 372.4 li
cp
f
202.058 372.4 mo
203.219 372.4 li
205.92 380.272 li
208.513 372.373 li
209.391 372.373 li
211.983 380.272 li
214.684 372.4 li
215.805 372.4 li
212.429 381.92 li
211.524 381.92 li
208.932 374.25 li
206.325 381.92 li
205.434 381.92 li
202.058 372.4 li
cp
@
218.569 372.4 mo
219.635 372.4 li
219.635 381.852 li
218.569 381.852 li
218.569 372.4 li
cp
f
218.569 372.4 mo
219.635 372.4 li
219.635 381.852 li
218.569 381.852 li
218.569 372.4 li
cp
@
223.145 372.4 mo
224.144 372.4 li
230.099 379.975 li
230.099 372.4 li
231.139 372.4 li
231.139 381.852 li
230.288 381.852 li
224.185 374.101 li
224.185 381.852 li
223.145 381.852 li
223.145 372.4 li
cp
f
223.145 372.4 mo
224.144 372.4 li
230.099 379.975 li
230.099 372.4 li
231.139 372.4 li
231.139 381.852 li
230.288 381.852 li
224.185 374.101 li
224.185 381.852 li
223.145 381.852 li
223.145 372.4 li
cp
@
247.46 377.153 mo
247.46 377.125 li
247.46 374.979 245.894 373.223 243.733 373.223 cv
241.572 373.223 240.033 374.952 240.033 377.098 cv
240.033 377.125 li
240.033 379.274 241.6 381.028 243.76 381.028 cv
245.921 381.028 247.46 379.299 247.46 377.153 cv
cp
238.926 377.153 mo
238.926 377.125 li
238.926 374.52 240.884 372.238 243.76 372.238 cv
246.636 372.238 248.567 374.493 248.567 377.098 cv
248.581 377.112 248.581 377.112 248.567 377.125 cv
248.567 379.733 246.609 382.014 243.733 382.014 cv
240.856 382.014 238.926 379.76 238.926 377.153 cv
cp
f
247.46 377.153 mo
247.46 377.125 li
247.46 374.979 245.894 373.223 243.733 373.223 cv
241.572 373.223 240.033 374.952 240.033 377.098 cv
240.033 377.125 li
240.033 379.274 241.6 381.028 243.76 381.028 cv
245.921 381.028 247.46 379.299 247.46 377.153 cv
cp
238.926 377.153 mo
238.926 377.125 li
238.926 374.52 240.884 372.238 243.76 372.238 cv
246.636 372.238 248.567 374.493 248.567 377.098 cv
248.581 377.112 248.581 377.112 248.567 377.125 cv
248.567 379.733 246.609 382.014 243.733 382.014 cv
240.856 382.014 238.926 379.76 238.926 377.153 cv
cp
@
251.414 377.895 mo
251.414 372.4 li
252.48 372.4 li
252.48 377.829 li
252.48 379.868 253.561 381.016 255.37 381.016 cv
257.112 381.016 258.22 379.961 258.22 377.895 cv
258.22 372.4 li
259.286 372.4 li
259.286 377.815 li
259.286 380.569 257.707 382 255.343 382 cv
253.007 382 251.414 380.569 251.414 377.895 cv
cp
f
251.414 377.895 mo
251.414 372.4 li
252.48 372.4 li
252.48 377.829 li
252.48 379.868 253.561 381.016 255.37 381.016 cv
257.112 381.016 258.22 379.961 258.22 377.895 cv
258.22 372.4 li
259.286 372.4 li
259.286 377.815 li
259.286 380.569 257.707 382 255.343 382 cv
253.007 382 251.414 380.569 251.414 377.895 cv
cp
@
265.049 373.385 mo
261.875 373.385 li
261.875 372.4 li
269.303 372.4 li
269.303 373.385 li
266.129 373.385 li
266.129 381.852 li
265.049 381.852 li
265.049 373.385 li
cp
f
265.049 373.385 mo
261.875 373.385 li
261.875 372.4 li
269.303 372.4 li
269.303 373.385 li
266.129 373.385 li
266.129 381.852 li
265.049 381.852 li
265.049 373.385 li
cp
@
271.312 372.4 mo
272.473 372.4 li
275.174 380.272 li
277.767 372.373 li
278.645 372.373 li
281.237 380.272 li
283.938 372.4 li
285.059 372.4 li
281.683 381.92 li
280.778 381.92 li
278.186 374.25 li
275.579 381.92 li
274.688 381.92 li
271.312 372.4 li
cp
f
271.312 372.4 mo
272.473 372.4 li
275.174 380.272 li
277.767 372.373 li
278.645 372.373 li
281.237 380.272 li
283.938 372.4 li
285.059 372.4 li
281.683 381.92 li
280.778 381.92 li
278.186 374.25 li
275.579 381.92 li
274.688 381.92 li
271.312 372.4 li
cp
@
292.643 378.395 mo
290.496 373.575 li
288.335 378.395 li
292.643 378.395 li
cp
290.009 372.333 mo
291.009 372.333 li
295.316 381.852 li
294.168 381.852 li
293.061 379.354 li
287.916 379.354 li
286.795 381.852 li
285.702 381.852 li
290.009 372.333 li
cp
f
292.643 378.395 mo
290.496 373.575 li
288.335 378.395 li
292.643 378.395 li
cp
290.009 372.333 mo
291.009 372.333 li
295.316 381.852 li
294.168 381.852 li
293.061 379.354 li
287.916 379.354 li
286.795 381.852 li
285.702 381.852 li
290.009 372.333 li
cp
@
299.201 373.385 mo
296.028 373.385 li
296.028 372.4 li
303.455 372.4 li
303.455 373.385 li
300.282 373.385 li
300.282 381.852 li
299.201 381.852 li
299.201 373.385 li
cp
f
299.201 373.385 mo
296.028 373.385 li
296.028 372.4 li
303.455 372.4 li
303.455 373.385 li
300.282 373.385 li
300.282 381.852 li
299.201 381.852 li
299.201 373.385 li
cp
@
306.193 372.4 mo
313.026 372.4 li
313.026 373.372 li
307.26 373.372 li
307.26 376.6 li
312.419 376.6 li
312.419 377.571 li
307.26 377.571 li
307.26 380.879 li
313.094 380.879 li
313.094 381.852 li
306.193 381.852 li
306.193 372.4 li
cp
f
306.193 372.4 mo
313.026 372.4 li
313.026 373.372 li
307.26 373.372 li
307.26 376.6 li
312.419 376.6 li
312.419 377.571 li
307.26 377.571 li
307.26 380.879 li
313.094 380.879 li
313.094 381.852 li
306.193 381.852 li
306.193 372.4 li
cp
@
319.95 377.221 mo
321.368 377.221 322.382 376.491 322.382 375.276 cv
322.382 375.249 li
322.382 374.088 321.49 373.385 319.964 373.385 cv
317.047 373.385 li
317.047 377.221 li
319.95 377.221 li
cp
315.98 372.4 mo
320.045 372.4 li
321.206 372.4 322.139 372.75 322.732 373.345 cv
323.191 373.804 323.462 374.465 323.462 375.208 cv
323.462 375.235 li
323.462 376.801 322.382 377.721 320.896 377.991 cv
323.799 381.852 li
322.489 381.852 li
319.748 378.18 li
319.721 378.18 li
317.047 378.18 li
317.047 381.852 li
315.98 381.852 li
315.98 372.4 li
cp
f
319.95 377.221 mo
321.368 377.221 322.382 376.491 322.382 375.276 cv
322.382 375.249 li
322.382 374.088 321.49 373.385 319.964 373.385 cv
317.047 373.385 li
317.047 377.221 li
319.95 377.221 li
cp
315.98 372.4 mo
320.045 372.4 li
321.206 372.4 322.139 372.75 322.732 373.345 cv
323.191 373.804 323.462 374.465 323.462 375.208 cv
323.462 375.235 li
323.462 376.801 322.382 377.721 320.896 377.991 cv
323.799 381.852 li
322.489 381.852 li
319.748 378.18 li
319.721 378.18 li
317.047 378.18 li
317.047 381.852 li
315.98 381.852 li
315.98 372.4 li
cp
@
331.547 371.077 mo
332.424 371.077 li
332.424 383.581 li
331.547 383.581 li
331.547 371.077 li
cp
f
331.547 371.077 mo
332.424 371.077 li
332.424 383.581 li
331.547 383.581 li
331.547 371.077 li
cp
@
340.901 372.4 mo
341.981 372.4 li
345.425 377.559 li
348.869 372.4 li
349.949 372.4 li
349.949 381.852 li
348.882 381.852 li
348.882 374.196 li
345.438 379.26 li
345.385 379.26 li
341.941 374.209 li
341.941 381.852 li
340.901 381.852 li
340.901 372.4 li
cp
f
340.901 372.4 mo
341.981 372.4 li
345.425 377.559 li
348.869 372.4 li
349.949 372.4 li
349.949 381.852 li
348.882 381.852 li
348.882 374.196 li
345.438 379.26 li
345.385 379.26 li
341.941 374.209 li
341.941 381.852 li
340.901 381.852 li
340.901 372.4 li
cp
@
353.214 377.895 mo
353.214 372.4 li
354.28 372.4 li
354.28 377.829 li
354.28 379.868 355.361 381.016 357.171 381.016 cv
358.912 381.016 360.02 379.961 360.02 377.895 cv
360.02 372.4 li
361.087 372.4 li
361.087 377.815 li
361.087 380.569 359.507 382 357.144 382 cv
354.808 382 353.214 380.569 353.214 377.895 cv
cp
f
353.214 377.895 mo
353.214 372.4 li
354.28 372.4 li
354.28 377.829 li
354.28 379.868 355.361 381.016 357.171 381.016 cv
358.912 381.016 360.02 379.961 360.02 377.895 cv
360.02 372.4 li
361.087 372.4 li
361.087 377.815 li
361.087 380.569 359.507 382 357.144 382 cv
354.808 382 353.214 380.569 353.214 377.895 cv
cp
@
363.729 380.475 mo
364.391 379.692 li
365.377 380.583 366.322 381.028 367.632 381.028 cv
368.901 381.028 369.738 380.354 369.738 379.422 cv
369.738 379.395 li
369.738 378.516 369.266 378.018 367.281 377.598 cv
365.106 377.125 364.107 376.424 364.107 374.872 cv
364.107 374.844 li
364.107 373.358 365.417 372.264 367.214 372.264 cv
368.591 372.264 369.576 372.657 370.535 373.426 cv
369.914 374.25 li
369.036 373.534 368.159 373.223 367.187 373.223 cv
365.958 373.223 365.175 373.899 365.175 374.75 cv
365.175 374.776 li
365.175 375.667 365.66 376.167 367.74 376.613 cv
369.847 377.073 370.819 377.842 370.819 379.288 cv
370.819 379.313 li
370.819 380.934 369.469 381.987 367.592 381.987 cv
366.093 381.987 364.863 381.489 363.729 380.475 cv
cp
f
363.729 380.475 mo
364.391 379.692 li
365.377 380.583 366.322 381.028 367.632 381.028 cv
368.901 381.028 369.738 380.354 369.738 379.422 cv
369.738 379.395 li
369.738 378.516 369.266 378.018 367.281 377.598 cv
365.106 377.125 364.107 376.424 364.107 374.872 cv
364.107 374.844 li
364.107 373.358 365.417 372.264 367.214 372.264 cv
368.591 372.264 369.576 372.657 370.535 373.426 cv
369.914 374.25 li
369.036 373.534 368.159 373.223 367.187 373.223 cv
365.958 373.223 365.175 373.899 365.175 374.75 cv
365.175 374.776 li
365.175 375.667 365.66 376.167 367.74 376.613 cv
369.847 377.073 370.819 377.842 370.819 379.288 cv
370.819 379.313 li
370.819 380.934 369.469 381.987 367.592 381.987 cv
366.093 381.987 364.863 381.489 363.729 380.475 cv
cp
@
373.828 372.4 mo
374.895 372.4 li
374.895 381.852 li
373.828 381.852 li
373.828 372.4 li
cp
f
373.828 372.4 mo
374.895 372.4 li
374.895 381.852 li
373.828 381.852 li
373.828 372.4 li
cp
@
377.985 377.153 mo
377.985 377.125 li
377.985 374.452 379.984 372.238 382.766 372.238 cv
384.481 372.238 385.508 372.845 386.453 373.737 cv
385.724 374.52 li
384.927 373.764 384.035 373.223 382.753 373.223 cv
380.659 373.223 379.093 374.924 379.093 377.098 cv
379.093 377.125 li
379.093 379.313 380.673 381.028 382.753 381.028 cv
384.049 381.028 384.899 380.53 385.805 379.665 cv
386.507 380.354 li
385.521 381.352 384.44 382.014 382.726 382.014 cv
379.998 382.014 377.985 379.868 377.985 377.153 cv
cp
f
377.985 377.153 mo
377.985 377.125 li
377.985 374.452 379.984 372.238 382.766 372.238 cv
384.481 372.238 385.508 372.845 386.453 373.737 cv
385.724 374.52 li
384.927 373.764 384.035 373.223 382.753 373.223 cv
380.659 373.223 379.093 374.924 379.093 377.098 cv
379.093 377.125 li
379.093 379.313 380.673 381.028 382.753 381.028 cv
384.049 381.028 384.899 380.53 385.805 379.665 cv
386.507 380.354 li
385.521 381.352 384.44 382.014 382.726 382.014 cv
379.998 382.014 377.985 379.868 377.985 377.153 cv
cp
@
397.183 380.868 mo
399.573 380.868 401.099 379.247 401.099 377.153 cv
401.099 377.125 li
401.099 375.034 399.573 373.385 397.183 373.385 cv
394.968 373.385 li
394.968 380.868 li
397.183 380.868 li
cp
393.901 372.4 mo
397.183 372.4 li
400.153 372.4 402.206 374.439 402.206 377.098 cv
402.206 377.125 li
402.206 379.786 400.153 381.852 397.183 381.852 cv
393.901 381.852 li
393.901 372.4 li
cp
f
397.183 380.868 mo
399.573 380.868 401.099 379.247 401.099 377.153 cv
401.099 377.125 li
401.099 375.034 399.573 373.385 397.183 373.385 cv
394.968 373.385 li
394.968 380.868 li
397.183 380.868 li
cp
393.901 372.4 mo
397.183 372.4 li
400.153 372.4 402.206 374.439 402.206 377.098 cv
402.206 377.125 li
402.206 379.786 400.153 381.852 397.183 381.852 cv
393.901 381.852 li
393.901 372.4 li
cp
@
405.296 372.4 mo
406.362 372.4 li
406.362 381.852 li
405.296 381.852 li
405.296 372.4 li
cp
f
405.296 372.4 mo
406.362 372.4 li
406.362 381.852 li
405.296 381.852 li
405.296 372.4 li
cp
@
413.842 377.221 mo
415.26 377.221 416.273 376.491 416.273 375.276 cv
416.273 375.249 li
416.273 374.088 415.382 373.385 413.855 373.385 cv
410.938 373.385 li
410.938 377.221 li
413.842 377.221 li
cp
409.872 372.4 mo
413.937 372.4 li
415.098 372.4 416.03 372.75 416.624 373.345 cv
417.083 373.804 417.354 374.465 417.354 375.208 cv
417.354 375.235 li
417.354 376.801 416.273 377.721 414.787 377.991 cv
417.69 381.852 li
416.381 381.852 li
413.64 378.18 li
413.612 378.18 li
410.938 378.18 li
410.938 381.852 li
409.872 381.852 li
409.872 372.4 li
cp
f
413.842 377.221 mo
415.26 377.221 416.273 376.491 416.273 375.276 cv
416.273 375.249 li
416.273 374.088 415.382 373.385 413.855 373.385 cv
410.938 373.385 li
410.938 377.221 li
413.842 377.221 li
cp
409.872 372.4 mo
413.937 372.4 li
415.098 372.4 416.03 372.75 416.624 373.345 cv
417.083 373.804 417.354 374.465 417.354 375.208 cv
417.354 375.235 li
417.354 376.801 416.273 377.721 414.787 377.991 cv
417.69 381.852 li
416.381 381.852 li
413.64 378.18 li
413.612 378.18 li
410.938 378.18 li
410.938 381.852 li
409.872 381.852 li
409.872 372.4 li
cp
@
420.375 372.4 mo
427.208 372.4 li
427.208 373.372 li
421.441 373.372 li
421.441 376.6 li
426.601 376.6 li
426.601 377.571 li
421.441 377.571 li
421.441 380.879 li
427.275 380.879 li
427.275 381.852 li
420.375 381.852 li
420.375 372.4 li
cp
f
420.375 372.4 mo
427.208 372.4 li
427.208 373.372 li
421.441 373.372 li
421.441 376.6 li
426.601 376.6 li
426.601 377.571 li
421.441 377.571 li
421.441 380.879 li
427.275 380.879 li
427.275 381.852 li
420.375 381.852 li
420.375 372.4 li
cp
@
429.743 377.153 mo
429.743 377.125 li
429.743 374.452 431.742 372.238 434.523 372.238 cv
436.239 372.238 437.266 372.845 438.211 373.737 cv
437.481 374.52 li
436.685 373.764 435.793 373.223 434.511 373.223 cv
432.417 373.223 430.851 374.924 430.851 377.098 cv
430.851 377.125 li
430.851 379.313 432.431 381.028 434.511 381.028 cv
435.807 381.028 436.657 380.53 437.563 379.665 cv
438.265 380.354 li
437.278 381.352 436.198 382.014 434.483 382.014 cv
431.756 382.014 429.743 379.868 429.743 377.153 cv
cp
f
429.743 377.153 mo
429.743 377.125 li
429.743 374.452 431.742 372.238 434.523 372.238 cv
436.239 372.238 437.266 372.845 438.211 373.737 cv
437.481 374.52 li
436.685 373.764 435.793 373.223 434.511 373.223 cv
432.417 373.223 430.851 374.924 430.851 377.098 cv
430.851 377.125 li
430.851 379.313 432.431 381.028 434.511 381.028 cv
435.807 381.028 436.657 380.53 437.563 379.665 cv
438.265 380.354 li
437.278 381.352 436.198 382.014 434.483 382.014 cv
431.756 382.014 429.743 379.868 429.743 377.153 cv
cp
@
443.365 373.385 mo
440.192 373.385 li
440.192 372.4 li
447.619 372.4 li
447.619 373.385 li
444.445 373.385 li
444.445 381.852 li
443.365 381.852 li
443.365 373.385 li
cp
f
443.365 373.385 mo
440.192 373.385 li
440.192 372.4 li
447.619 372.4 li
447.619 373.385 li
444.445 373.385 li
444.445 381.852 li
443.365 381.852 li
443.365 373.385 li
cp
@
457.825 377.153 mo
457.825 377.125 li
457.825 374.979 456.259 373.223 454.098 373.223 cv
451.938 373.223 450.397 374.952 450.397 377.098 cv
450.397 377.125 li
450.397 379.274 451.964 381.028 454.125 381.028 cv
456.285 381.028 457.825 379.299 457.825 377.153 cv
cp
449.29 377.153 mo
449.29 377.125 li
449.29 374.52 451.248 372.238 454.125 372.238 cv
457.001 372.238 458.933 374.493 458.933 377.098 cv
458.945 377.112 458.945 377.112 458.933 377.125 cv
458.933 379.733 456.975 382.014 454.098 382.014 cv
451.222 382.014 449.29 379.76 449.29 377.153 cv
cp
f
457.825 377.153 mo
457.825 377.125 li
457.825 374.979 456.259 373.223 454.098 373.223 cv
451.938 373.223 450.397 374.952 450.397 377.098 cv
450.397 377.125 li
450.397 379.274 451.964 381.028 454.125 381.028 cv
456.285 381.028 457.825 379.299 457.825 377.153 cv
cp
449.29 377.153 mo
449.29 377.125 li
449.29 374.52 451.248 372.238 454.125 372.238 cv
457.001 372.238 458.933 374.493 458.933 377.098 cv
458.945 377.112 458.945 377.112 458.933 377.125 cv
458.933 379.733 456.975 382.014 454.098 382.014 cv
451.222 382.014 449.29 379.76 449.29 377.153 cv
cp
@
465.896 377.221 mo
467.313 377.221 468.327 376.491 468.327 375.276 cv
468.327 375.249 li
468.327 374.088 467.436 373.385 465.909 373.385 cv
462.992 373.385 li
462.992 377.221 li
465.896 377.221 li
cp
461.926 372.4 mo
465.99 372.4 li
467.151 372.4 468.084 372.75 468.678 373.345 cv
469.137 373.804 469.407 374.465 469.407 375.208 cv
469.407 375.235 li
469.407 376.801 468.327 377.721 466.841 377.991 cv
469.744 381.852 li
468.435 381.852 li
465.693 378.18 li
465.666 378.18 li
462.992 378.18 li
462.992 381.852 li
461.926 381.852 li
461.926 372.4 li
cp
f
465.896 377.221 mo
467.313 377.221 468.327 376.491 468.327 375.276 cv
468.327 375.249 li
468.327 374.088 467.436 373.385 465.909 373.385 cv
462.992 373.385 li
462.992 377.221 li
465.896 377.221 li
cp
461.926 372.4 mo
465.99 372.4 li
467.151 372.4 468.084 372.75 468.678 373.345 cv
469.137 373.804 469.407 374.465 469.407 375.208 cv
469.407 375.235 li
469.407 376.801 468.327 377.721 466.841 377.991 cv
469.744 381.852 li
468.435 381.852 li
465.693 378.18 li
465.666 378.18 li
462.992 378.18 li
462.992 381.852 li
461.926 381.852 li
461.926 372.4 li
cp
@
537.777 277.125 mo
495.79 277.125 li
495.79 264.243 li
554.478 264.243 li
554.478 275.336 li
516.783 347.742 li
500.322 347.742 li
537.777 277.125 li
cp
f
564.39 307.409 mo
558.434 298.324 li
561.542 298.324 li
565.74 304.967 li
569.983 298.324 li
573.005 298.324 li
567.048 307.344 li
567.048 313.323 li
564.39 313.323 li
564.39 307.409 li
cp
f
574.031 298.324 mo
585.152 298.324 li
585.152 300.681 li
576.667 300.681 li
576.667 304.581 li
584.188 304.581 li
584.188 306.938 li
576.667 306.938 li
576.667 310.965 li
585.26 310.965 li
585.26 313.323 li
574.031 313.323 li
574.031 298.324 li
cp
f
596.188 307.366 mo
593.595 301.367 li
591.022 307.366 li
596.188 307.366 li
cp
592.416 298.216 mo
594.857 298.216 li
601.458 313.323 li
598.673 313.323 li
597.152 309.702 li
590.06 309.702 li
588.517 313.323 li
585.816 313.323 li
592.416 298.216 li
cp
f
616.798 311.137 mo
618.384 309.252 li
619.819 310.495 621.254 311.202 623.118 311.202 cv
624.747 311.202 625.775 310.452 625.775 309.317 cv
625.775 309.273 li
625.775 308.202 625.176 307.624 622.39 306.981 cv
619.197 306.209 617.397 305.266 617.397 302.502 cv
617.397 302.459 li
617.397 299.888 619.541 298.11 622.519 298.11 cv
624.704 298.11 626.439 298.774 627.961 299.995 cv
626.546 301.989 li
625.197 300.981 623.847 300.446 622.476 300.446 cv
620.933 300.446 620.034 301.238 620.034 302.224 cv
620.034 302.266 li
620.034 303.424 620.718 303.938 623.59 304.624 cv
626.761 305.395 628.411 306.531 628.411 309.016 cv
628.411 309.059 li
628.411 311.866 626.204 313.538 623.055 313.538 cv
620.762 313.538 618.598 312.745 616.798 311.137 cv
cp
f
612.32 303.252 mo
612.32 303.209 li
612.32 301.603 611.163 300.724 609.213 300.724 cv
605.377 300.724 li
605.377 305.759 li
609.235 305.759 li
611.121 305.759 612.32 304.774 612.32 303.252 cv
cp
f
612.364 313.323 mo
608.678 308.095 li
608.635 308.095 li
605.377 308.095 li
605.377 313.323 li
602.742 313.323 li
602.742 298.324 li
609.428 298.324 li
611.313 298.324 612.793 298.881 613.756 299.825 cv
614.549 300.638 614.998 301.752 614.998 303.059 cv
614.998 303.103 li
614.998 305.567 613.521 307.045 611.42 307.645 cv
615.471 313.323 li
612.364 313.323 li
cp
601.238 306.231 mo
601.238 322.692 593.127 335.932 580.125 335.932 cv
567.123 335.932 558.772 322.454 558.772 305.993 cv
558.772 305.754 li
558.772 289.172 567.003 276.051 579.887 276.051 cv
592.769 276.051 601.238 289.531 601.238 305.993 cv
601.238 306.231 li
cp
580.125 262.811 mo
558.177 262.811 543.623 282.135 543.623 305.993 cv
543.623 306.231 li
543.623 330.088 557.938 349.174 579.887 349.174 cv
601.834 349.174 616.388 329.849 616.388 305.993 cv
616.388 305.754 li
616.388 281.897 601.955 262.811 580.125 262.811 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 16.0.4%%For: (Chris McCorkindale) ()%%Title: (14KWS-70thLogo.eps)%%CreationDate: 15-01-20 9:58 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6G@0)sdkL]K!Ik>Q9ZO(J&g4>B!XYP(;BQ/`E%n`*bph6dcY%`>Ap:):XCghr3S46/%SCP1)Jtn5^,t%8U"k(\gpK3;jmHKF%H,mufHJV\^]O<h26=I'?g`1tiMRMW8!*7TLeHB!fW&feF&(j<>[8hIOg:_o[C3G>%rU+ND0W9*Jh>Ue<?hq=]aWEG/iD(VIfke.0%J*+rA`pI9=:tdk3l`G?:hX*NbL3ZcL.X4h@Y0/K#p>*cUVjh:J1N0fR?Il<ZaKko3"i]J>]PLsD5J`VKk&:U.KaON46KR_-6fhl5%lol$:AmW_47FTO4n>/5BV5)JZdn_'$H.,U]Q">2J'lG0'oM$baL(A;%Ems;1o>f*;#)FSK4iF)JZ1RFnH/BMKqi,$bg\J+ugYD8k%Sf7PtCfl/B<V!T!jXo\ramPcZT6fnEYXrNZ?)qZ$FiD9ps#5]99G*Mh(1#a=oBSH%U:<tT[U$OTk"X;U.WC))i"&BMO&kkuc2:nS%ES'P5]U/K4PLb3`OfDh<$N"@XNaLMbr`Q-VA@O2X]+"4bh7I9G1Tu)Mf@pbO2]\puaT,'TrVP^g#cZR-6%f4MM&Kc0%iTpVOZHHB%_5CVGF4rdT<W\HN]W.>Y&nYJ#FZ]&jH=!o`bI3%i]Ll3(PEh+R@6(%`)oh4Mki5UVFl2J#WgZjcCdZD+%mr3R7RF`cet#T&[[)-i%#PG"Y8H2ucT/@U-0H;u4]H]\PPs^B@Q/^a/X5NUNLq1uJ!<Ss,5Xc_3XUG?]WA]J?+EA.Z@^#T/^AR`03QMpLpsXB`Zn2,s?2Ud'%`)U*`DdCDq\rLuWS_^F"nS.]]AKd:LiL+7#P[u#&A_$+@9\2]Mf0pMmrpXXR74?bV./\dk#Z[iH<2G1B<[r?l;F-[r*UhSFQA&,d%lZg0NB@!dtZhC]uYSu2#HrAbOoiqM^&ISDgT*U.!&j9h#YXeJF0\@WJ`-r(fY\14:pk`Y9,Q,KC(nOjOfH^=4IcE@n`BI_$%%F>I%KYi2s-c4C!GYO,-[[c<D@?Ft)5M;7%kH+?XmAt0+G&4]+,6>X[&.8;iT3)^F6.TgpO,Y!*,8BiIN%i-VHPZL6T6Q+(A)iWBXQ=[1%57n8"LS&As)3lngZMLgq5m,b[5sJi&=Sird&W5OAi.^io[2rPtg;W>g-&_;&&E44/Y]k[SZ$5t"lSZ;4rPMEa@e>ZY@lRoCi[;TN%mrARtfn+Dbk#`(O\ciNN=qT8=/SC<bBL2-A(fQ05eiJP.<\M?0[TncIkSn;!6AaE!l0N\=TDc$\1X9O\bf613L6YT55=WCO\$K^f%"i7<)B*g]r[*P[Td(N5)pp<gaK%'Zq(0L:N!F$g'M,4$$&8`0L(%nkQforG9cl[]mWMoAP9k/DFDt\sT%0-6Dp6R:s-G/8eZTm2V%kPdF;Eu]Ak321;Gs-64CNrRB'b%5baJ$ZmpTiu#/r,;:1X0HaGS,Fem+-YkIG502!Q(<ghp'puLN/D&4>03aFm972@=&$rBijWN8%[].CK#tAG!9T;2p:mt[6`4$8pY1;hDK>5BT\3gh<!rc(+!M_*F$r%%oJcDu5;%G/ZW1n%-#ZH=9n^FB/QQ3b'=H6ie3H]ufTD16i%#-QJO2o!7Zq+nf6R]*&hG7=Dh]!5L@#)?hm>h5'G.BFNZNV(H[A60A#eKao&r(m'e!n/-)KJQXmI[_79%UdE!0eXR9Z;U0.lSm\@%f&/=iM0ITTM4V\%%#3RQ'S5:]lD!C;NdV];9H#QR4ntOsSX!i&eFGZ$NEp$G_^A)PO@K0JfFk+fC]l_!W:(Ls(Y07q(G&)'Nu2rT%#g!1hE"'ZF)dU,:iuWQ"oa>RCN%nLDOEQWVS$gj&(bEQ?X+uaC<K%We-ZKCgm250sX,6ck/Ra&=[-rK35>$'RO1-RJ_&m6\d\1cd%c`Bf=_]#dtXX<n]>0-Q^=qAA`C`M)PMt(9:LEjfb_YSsk.$([k,<E$5&k2Ue/YXT%YPV9g,utb\K6i-_F4_=-5=gNZr%`XK<9!J&%O#31Z$pnn>UF@MpfQbm6Wjq*FXa7YEMW`W?%aXJ73S/aIn<3^.-[i"R!jLQKVJp:cO_"$@qIc$U\`DZlT>QINmgrRk2j9\&RGgoK%fseuIPq&-+fQ+bRit:8l49Td.Sf)AVcd[>FCK;8W6J[ND8oRtUiTD!:GoFH/<o]G,E2mk>a^fD%kXdmf7?h!*>&$4[hS2iA<I."0%Al+(`RIp11Lb%E4opuq1!d0WQEWjC7&fHB)*i@*&@sSPsdq(AUZlP@?U)r;GQX.Z2)AOE*g!ac5ph6-`%l%Ci40187;EA'g<0>5R%ZU/+Tc4_,+0(n))Ksuuh)QQBdQ"`F`K8h)<ef&9M<jjE3CLBr8L`Wm<6DG,uYs4t(U(=h&;N^_rY6cY3-#krGZQ?ILfXIdEWn;7;%94*:VCF(@\F4LD/(I7Q&23houKRH.NkqF-/dZ6s=hg4gh(Sc$p8VDb*'Ym?8>9p^"Y3>3Z50`bmk&Iaeg:S4/CHJkPr,[P/ILE,.%0]l^Sjb`g7LPh0Z>V\=P2MGj12U9#XBCZf`MBdH1gJKreK!l8$#U+9p_lhoMd6H276#.c!O2NHhBD>-l]'dZ&!p@L;*h?\eU<Pm9%ICqr%<;+SEJ\u/Z_2<\_SaFT;`n.po-MrsGM4f5I`TLusekq`PCWRY#BS@h%fQj^1UAsR!2%Sq47p&o!,(mB:4M^^nWN"rUZY5o&%BYhYSY'I]idT)S0*jh(J*t)EK-*jbp`JD=.48p,`)i[D5Z\0=U?5'i4cWP2V[q"p4jDp=/&P<;&#"M2bTA&P=lZ''S36ToTfPcV8%S@[`jMWl^B1uZnpH;$j3d\/iP;nX)&NK#.Z*>hFEPshToNsZWO3^/7Rnb1_]m:@I4'sa7-5q_iNM'NdR)e`3#>Q`]Pag8Q'jH_HY%6)M3,oFWD@1/,WTYlB)r,g0\Yme%]H12S/V@;THH*61I<F.S>EWm$[f':IWZ2Zs<T*\752_G_0/a*Pk4B)$O/LCT<<N-E3.8bdlW%^SSO!IU=js6Lq)9E=\?cX?F<6+a%=T=qXl$7C;AP&>;J1IkbE(<]5V+,WZMMb@+0Q*Wm6\83s,N8ji[uf=B\Bn7<j=^\orq)DTM!%o;YSJ^:%K1kLPM:Hu&<:4HE-+Lm#u/$BqF*DF$JYoqnsP_5hUof"&$"9#A.urO_.depL+d>bc@X[Bf,BZM&-(;')p3^A/Gt''8j\%%-L(t>L*-5aKh#n"im_,a#NufJfb*RqE#C`n=JdI%:R3_0*(YHIPX$o9*#<9c^Qu]T7@[U$s5D?lRQb]$pbe=pT7ZYh4S+*]H7g-%_XsH9&Hh1qeZ4GHA0I0$_FkO`,1B1/EZco4qX("Gm/*&9[o=#fQFDl=m<P!Ts#SYH#bR&S#p4"=ZE.[uhTY\[]eCO7pbppNj1kPj%=]C,Q665*@@sgW!@m2XHe',VQ'ah@o*R=#U?^:$mcGU11SBk'Ig[<q)Her\PF4)&Bo[m+YSR6m5!d(Jq;bFT]FN:pUC;7Qdh1#*p%\)7#3bq54K\i7n3H1Q43mC3)D]ZYf9q$e^pq'DILc(F\K[nm'pHSEE.X1+U$>eStW2tQA_4@uI148nDYo2iF$j?LqmeiJ:;gYJH#%XEUMg\]]J:oR#gk+13&Y7R']#]oin0J&%TZ@*1.W^QtS?Aq//0jNo+S&um&T5e<5SU;l[G?Z%eaG6>$bFrG0V]9Zd[aXp7Rp@IDF%bMXOng?l>^@Y;/&deRIcMX^WdFWAd2SPL8\T[B2f5e*[hJ,!AP$UDba!&sqI9<U2+mFH^#d<fQ_7TC">hlDUi)i(ZsI_+dP>D";q%Stml,NW-/)gMWV\4W$)L1(S9:G1Qd=(W47L0IM?.L:7ZuXdad7heFKY*tH)i<p's+s5^"6D#+G&54rmb9`F+Hd;)W=L(AEY4Rib8%Y<hg(_L6hq60]EbE_!^SgMblT5bDlTQY7hm>5l\I[NHAKbq"&k?bX^3bIu/O;Q>k>.Y@g'2K.ES>BR8ieFgCR=6iJ\?E;VV[7[Q+%/(NFD;mU7?c)_d?]r'?0RKBM!<ioCQeT/&sFfS7IoX7aWX%$*mC/q[A<9f`PV-9itb*>lDXZ.'-@TCX0;:-mt7BJ!"HF[(ZQ7M';%\Q!aq:>%7(A[?3;os.V!b=W7,s&uC*Wg(Z&&k2ieP#X817S,7I-+*l1\m'6VDT+3>-.d8[f6/atF:D;q2-4q:"E\BReYtN>0Fh@.%aZ6e>3Mp:G3nW<!>,dMdMd<U2G0+oEa0oj.2Jp@__:hh)YVE8K<OF;Wfd^.-j]Js&=f,b4\trQ0V<#k3=Ym*j`@RK)Ya-9X2D*B7%%?+AVWX/m1;)>4A`@)ZO__o5t2Cua&$pus16T#RkY1N<G?I?rB8U#;)Vq\eZS%><Z\u)O>U=HZ?<n/['=Y"2=]%`YWQC+B1R\m'Q%U=Rk`>#d(f=Y6VUlDV.+WMXF/\uMa0WoOj28-R"".4]p&"o><&$8bG-Z5&lqh9IJF_KEC"1r0sS=EtRo'Y8UR.pRk4Q3TG#^Z%N_%XoV5,lHuu3c"M."4S66]8>uFk4Dlkd<IdU@>o'-X,dag@SKAaj.R+Vj!(uR1<d%I,W:6RP"&,$fgEj]r3ui_%FBJGpq8$eZIi9=W%5Eq\@huVk;Vm0]$Pog`%b5<[X_kk90#7GfZr%N111U^HTG]dIB)ho=CKcMlBm&8</j[Y#b1-\AkTSsL\LJ&>u%\"OU*@<uR10O'j%D1$M4@>@`NR]7$,eVLZd;;k$5NY4Q]IQ2H%r35B=q-i@&cnSLWhMDSr8H4rVs2liEYMSD(P*_5Ekbs/po#OZ@8!$1;_\kK$cs_V<%c:BsVUO8X?ns4c=,=hM>qOLP"s5<f&+19Hm%3:`'OlMDc+/R?CNZ:gXYiR+mn[3b3Tu.-VqT'i4?d"/aJ0YZX+-;)s<#:Wj;6p;h%5T=^Ms'!js`R4\[Ub=\%D2p2WieQ_T_h#U`^`(+e5W(pC(_e]0AN$8lJAo;[Eo:Kf+d&spiWl5G6(`aHXW13FTQJ!NN&(V&0Lc[+%-<Q<`,hGfJJ>tW0:AbFK`Y=uc&"s5r<YRTXBhY3bKg)X"8A,@A/!M]d@ZR/bT<[+g+4KI@_[DHBkK!W7k(#,rR'BKM#I>\Ur"+#U%=WJPh$Y4!4lCBV2`#gdJaL!+97YIG^^md1-%Lm6B`j&"nVU@H_kZBYY/g7tra@6lEKMd@UB]fY4Lo:[>V+u9^W8H63RlXWFc<qIR%e7=PBM!_L!r*<]_19a+\fV4r>.TCDU%(+al^9N6=>i;A4n5C(sWXe[#_Q`:O,89jt#6&[p&'LW(Wh>R@5dr3OW"-D]"J',e5^Bo5%`6+as0]H4?P#c"eF\m6.-p?=)5Qd<;'37@Cesnd_\dC9eK=3U&CYGFE?-o<Wd&'giWq@A$J-s5gK=Wp+mFnq[TEM:)!\1`]WWR=@%5VtOcCD6?K%Jnf_4^J>@?3S#K#Gt@LRWQpN-Kok>#6o\dL-QUbJgqTA\.D"21=O'I0Yq_4Wt&5D-*S^G\7i'L#<l(;r,f/&9X$Wq%YWuHt7*8o"<5C>hkE#_,1;RK%K[hfYm"-Yg<J+FQX4IM(.%WirV1C9)JeESnhd_&+jZR5%8XqECSF\[PDP+%ZQM-a"@q<TraM^:>%qMZA(=eAiR9g'O,E[U%m*+qp:-&E@":(209c[A*^,Aq#8QLd(1E1'FU6WEFcAKu%:F]XC9OiDspnK:4U$u&-!5k6qp=-G$SC#:96%7h0Kp$]km\'.Up0a:EOFM(99X)/-r/3ceqS=:S]bD%j5u]=>d7a>@I8;lIPrqptiIf)YLQ?ts/)RTZMbZ@c#`6\ipIGR%DmT6%l!%:@Oju&[$2>j%MS!$i/%N^i,6WRA1a6;Z=3tJ(]d"Q6TYr-q?96EX[O@J8FTXD>Tt<0,a,eOEho/*_/62Z*&(!A0jaV`BZ(C;LF\g%19MB)R":1W!Ch@]=D#Zl)WaT=?.5&_5&h.-k7.6i'(pVX+rEHugk\uLDAZ!*Jl4U.;>1^<7Nta*pVr%`*B./mS*lol3U`:VS,-2)%s!s)>1fe076k=B[q`SW,k9d[qKB@MuEr/"5^?6iPhh1'<DK>V;BYNXV\)2i#HS3`q%oYf\^MnQFiQ*>%f#BppOdARj17=2.i%uG@%H,YmR"@=FuJBW'H;6"VsOhb&XnSe'r?ZdO:[L!!)DqO71Y`G\?<1be-J#1-!dR#iE<I]I(%Jhl3=o*r$j<95[4-G4QHAhZ"MIsK:%HWIqcMS/D'D:2u?Zp5aYMg:N&b?AT<61>XQTa!.TE1jr%hrCo7=ic*X2`g]Xr%Zu@[))^!\H0*Or^m>ICb*GL:nWS4HF-M8`-O&Q%*QT__,=Qr3aX)`Wm4#n8Qg>D3$$TejZ+jK#W(KQK3m,lJOq(P53KfX+@7uA%*N!oqhP!RI%o)0Lb6o?pk$-poqgVW1W-Cg8*''26%ic(a3OUg,-/H:e`LMpV(dIO:V__lOo7r@Gn3c;#!M$$<.TlHC"d4:%*@V<./%Mu2=>IT['8r^PVUt?U`UB["IoAWR@HBCT8>l'pb%ho!dtE:M8eO[%'>qk<*>fFu:F%o;g,"WkGi.TcOGk_I$i47rC`IU^Bska;8ms#=U^^ZbDHah(hbhOeo7Ef,V2g/J\I-;N<7b0Y(+%787d8qs<[b]58HTI+s=a02?oq_^^6BYloS:o`90DBISrb!5ti>TL#(*NWA"85(I63UV&5K1]OoK5atHN$fY+e!3@ZI=+E8q=o_:&%r"cRoE>qaZ!]GR#mi%il;gia#H<_ftlWrPTU0L$<CBS%YCEZgHZPnAT=$glY2,u@5OP[AVXQY;9(L7TNJUYE`g5_kdoLjoRf*#p"%?S\^m(5?D6O<N;B0V%?Z$n8?5@7;92:9`Q,r?Bs98,FUMHIk,m\6h"mG:`s@H6GZH.j6n"#8tt%(4m9L^ll(OGTk>t&`Y1TMJE8O%gb0OG>RSHT?HA5p8f1=q6&$**_Q[>g'K1u&nR?/<G=r/5L5UV;HR4;jUD3pn?'#'^?j4BZp.Kqm=9V!AePt/O`T8K3P2ZKch1B\l%",TZ7&.jE\>,D]R0)7c4?$(WLA0>k`.Z)uG$Xu=8&&"]s@YEfc@o!Q5Mk[1+XEQ6!.p=LAHIkKfU>[l/G:d&PlTh+FIYgFHHR<u0%m[9`qO`?Lk`O.D$LNs2,>RSH,!K]SB,lnm$XcR@>CPAPi[oS7VH4YZC31"&:!Xli%?HB?WDo:\Bdm11NZYkkU75'<HP'_qBX;dot%P@;G<0WaJl$nJK7@7;h[=E/2R>h8g<Z0[X(%/7tHM_;J-]Zu*_ZQf`L!qlC.!Yp-F5eX=T5XcJ7:p6eU;HXgs6?tdU?oq>9J7eVb%0R9;,s,Bp+=DcmR>;dH!^[mq6kmdQGIr9^L3IgQF=(CAPAfEL84OQ?qF?@8,jd!><?i8+eBGuM?#'JW8rjGN`a\?TW9*IP:;cYe4%[]RUY\p&#p:OT9Mc/2=3Gi."P!iA/;4=b=N0UM2c5%\MN0#l?lWd2X#$.WMh!,SQ(j<?j*Wnan45kL^`q,J;$*T-Zr<$g8'6.tBp%eM#)9c_Zf_6,T?##mgBq2p?61XLrHI[:)?^<#KKb#[H2@dBR*($FU4%VeRuKKC<pl1^Q2R:TB/1--Ld1WXbJjpjLWiF0?^GYiL%W%ZbXU=@>Njb:h:D00\7gJ8#]qUaJk11B#"tf.ZU]AWJlkmU2>FY!0T])r+mcV"^;JoOt<'aC1+OfD9_b.#(cl'1p(HU3bt3Z,?T%&%=-dOH1<oMr#*$P25X,^W"(7:]MLji]R&hu?jZSsX@:GG9a=Gt&CD^;qTFD*1Yl&C-+C%/?j3*ur0C>J<]gP0KG>bmN$YUOF[`NIm%gnTL&-lT[(+cmq+/tcU3\Z_l91fZ4Dm@rS9mFT.DF-49q@JjiLq?3C5rPF(+d%,d.)I-_/qi)V(-5;.tHeGt6?$'6(nHH\#`'I)n%+>CA:FjRL<+\ojXKn<"QD\J3O#]bViSC_?r>6]@U-f$,JRFoaj&A1WBKiO"NLf(PkPQI*N;S:./@S/KX"DB(2UA@jSQpO\q5f>_s%'GNn$Q<=sC7><P]+j1<oB+d@2V@R7d"Z:f3Mn0!1+I[0[;F7Lk<Cmfq:r*WVaMNIJ!CZ)o_5EEOod,_M=t02A@j4kE)Pp<[6ULql%*E+R`F*V-RVQ5Mqdhe(FOM%8a7Z$5">.=Q3BEh*rMGi7a-"t,lUSr6d-iiccK)cnlce:Q'@(A`<!uBI+pf%K="'TPp$<!9k(QI!:%?g1T&aHFL:'<<0-(dYH;Enlb5'07'^aq"&<7k.J.BH.ESB`Q<G06eZJ0jn2!51eF("^m]WokD2qU^L'l.\]@2B2E_?E8V/QAC*cq%YAZh\(k_oa1,9CCRMg!&dYTE^*%qFH!$lhacP$YX(lrt**h=E+@H>,,F'4]si:o@)9u)P0))2b'I+"+d%[!^qAH=$%M,[GU\fgO?%.O5rd#uT[d)J'Phq@/3g1E;#U&DN>@$lpmH.+,7%S:aZf&64lE#J)fr86"\ce9(L?#@n^:j,g$oYEC7e:c>lce;0RH",!Kk)op!=%/HLSu!HjGTeV]@5LmK-c<l8;IWCcq^B7o8::k]@A*lNioYnK&G/>Sbc+[[L=q?<Q-W<Pk^M,ZWG2-F@*[VTQOGqd<lRMM-G0HrQ'%Vug*eCc"Un!*bo6`^od,K`VBeM+RbP9G[Hp$AC?q0:ELfUF8\r!];^`#`olZLj[%Y,eKoWV3,&jA8T5+@'Gur-t0&FF?HgL@PY<4%K.&T7)5Rg35\7m7#$5]6MEiC&kqHKp=P.-0a@7K^g<ZSJ,\(-!Q6>//63^%9a=M=Yj32Y^37G^:dK0j_'*l&$jJFD??o6jOAn+D'%Yb4*$3FV:=U<=]SM:EemF"jIQ<B#_W+ug\3Uo<pY^pSd>N>CL-(a7L#Mt1\9\2$PP)Ct$V(o%S!'m)mo#Z&AEqAALrf]U8gD1o$>%gQ"&`!A8'S".3ooEt]S:#heG"m`7jY2o!1?%GBW8Sn*@m_]$=BQ8LqLVDU/uZ/N"=$rtG^1YJ_4khp&<^]t#5;CNN_M<QFRfLu\:%0$\4Q'3oaL3/IV;mJ*V&3N2hN@c3X>G(:":Oi,VhpNpADL<_B=M&D6j">M0XBnf=lRZ0P#KD^&0hIsCibIR*GMMRo5BfihS8J1\f%aA$`qP8-YtMGQ0]C[na($I40:<;g;p+]#@sUfWRr'/a-nC)iej<^/>HYYCUq<,iWoirU#u2pdgg?!o?G[5C"q%H+C1p5imT/e"Rc%JkHCCRB>-"`T]Eg7+n?gTJ@8CV[?oFI*il532T$J5rWUA%qMbnDF8Zl`PPjb0Yeba<E*p+<C+k:%'A_1iO:\..+>DNF4!ghp]KG?%C*q5CW5(>7Hkk8O$5CZ=nC5uf(J\t<&]#[p:1+hX6_X</C,pB$`Tkej"f;II+9tl5Cc8Od10SKDdC%>q<WLUi5)*XB5HH=QCCj`k%;*)N)-m08GqD?T[E,9FQ)DnJp]#%ne(si@u/6M!jGQpW><?9C+:!lgdi#4'ZPF;p^KNA5T#<1$Zg+#W9BU4ZW]==u*APc>F,aUfk%eeIcWKn6=V@U.*LVOKV&ZV9Wk'Q8O&JTJ^c<VD5T<,aZn$qqd-;0$/F5i>c^(P)C]o0DAfAE<[oC9\eJ+L)B6XBGjJO,muD#bY;-%Fbe8iOQ0hAj.l0RK2JPWFD-PD!I8,76H;6GJ./Z='rL^F(b9>b8gbY"f[?au.+.NJ7Olbd`MR_9dLF76CNL)XHW?nf+5L=''UVrj%.TS8`I>M`)M7-/8SuQ@1;o&Ybs$3?Y+!>Y6.e?/(P;SuDJUX&j&E]ro4P*8d%@1ZG:lUGp4?/uf)Ha/["s&fh&hCiObCcQ?Hm9rW%K-9)p(O-AE@MbD)_c[:MA`p]^)Ce-cBGJPD-,7:4HU*T</ffI`f7@[e%9s_p?43\dA-k_-@$eDN&[6$1E0?>Y[iNKZ-m<]:H4\[n%OXOe&K:s%$THU"-&HW:[3Hc@qc;l3`#He(lTVbUE)LYUUk!p"O_?bQNe8n/%)L'l>=.j^NRhNP.NiZsYCi&$uV?4ZP2'P7g'*4CU%kZCQ#pp;#!)f,o,@\a3&<l(f_E"8ImSH=irK]9",T$n]0AMbJYA1/n,_oee5-)slQRg"%&dH2Q;b,muLcXE.["[gfiMFFho$+GZV%cn$BJR#MHAO;N"j[c")dX@P/K:gSc:<>6\IJ@L9+5hn5WM&JW%,AJ'*bWGu6_Ci(u":\T!L6uck8U+ns:eaS+C3=YO?>MH'kQ)B@%RYfMD..)+G//EqOLk[D7Y]2K$=#%YXn6'Pb0)UH93e0ns;]F#-QW99C-m]=e^UP'!A\I'a"57%u(<)K!"#6p_G,i@R#`&ldG]60J%5R:8oTFC+9`[I)H#+Ga#X._Y.l`NUG;N\O?N'qXf47"aY14Gup:rtM:nCtsE0icQ3!J5r'(gJjr&k/U&YVma:(ioj`%pJ+p/9FL+%LG8dTLNIF<iY=6H>a,OsZ=<@LfGkUL8W0A#0O02qj-6@:8_(G=_a[nm*/gC&YrLBb]K/ln,gb5N2EKj/BUY\u7#8FkRVs]+H0I/)%BS%-\Z(Q[%OIgH[]E4QDr?0T'?m?emD5"*5iJb>b\Apl/b3KPY2DCpA>phs]E!BNT%$/;?X/(Jl<=g!Nkrr=/;k&X.Ye1Qg#a?..%"%D0?ZB[MW-H=A/TIT.m6UMG-E/mAX1DR'])GR1].L,We8/r8a5]>lOiJV?R2R6(-3BiE'>sX$tJd*fDi!:)n6G('E*31ge8WSDT%6q.P,<?hbOpDa<YU9J$cB&M)LBT'kf^<$d6'[gY>6*p%rW^1aB%#=@2W(IdRS0!4^Kb6]i>WYYg"]HX5cN-='Tfh.S\];f]#G",8%28mm^YnROhK??G1:h7G::cesmrWoJ**<hfs^9=428]/+)i[b3HO4+nYZg]>MN3R>mS$o31N)JJ?Z3G\V$fqKAU2[APU1K$o#:sJL%65d4_oCsHI'TLAMdsZ,Rcni`H/h(YnVWf*;(C"=\-lPek1+9QX-ZZ`XK55Fa?jr=_Zj[mNL3$-A8>1R1L$&XYUD<2=R4NBS)o1l$%`T4=I=utAQ=9e?%c4*mU#(,VpbddsN_3l[kV/q$`3qLosT7V<+E-XZS,BEpT9%jfH:XmcEBQ9LjBp>OfLq&1oRRp5[%-0S:3DSUs%ae80e]gl%*-/oa]8N(&`Z@,H;p&Y'n1QqGCGUDef'$@%YU4J8Zd4>N5SJZ6X"mJjE":0\R(FSZW$JU[liYB9]6N2e;.HEh-+A\-&%8FUD.HK"AQU_U$a6acAdJi5L,@1bPidBB5edQeou2Z\hu)T+<fTjEkN?0\)";$>!O-5\Ih8Q;d2kCmt(>D$E>h2]LbV@lo1pNf"S%LP1&,^6<R=WjhNt'D(S4Bd:n'g<go&[=R:rEoENO`k43p09B%&"CneN!uu"(Blj\-c#$RR3GoZf7(Pm35gKn1'@UBNOR&bul-5hD%h[R7%<$XL`)PC-8XrZL47"BisULOZfT%l8^Kd6+K9LN?#*u,0,$5igiXCGAL>sK29r?`5G2KRh*FD?m^5X(\]#m-Z5=VS/"EjNZr%3*^oA392u\)i$6=L)<gBq/HCE@@3Hp%=jg;:tsJdEog,r![S5`N*JB-U8gjM(:eGi>0eZm/s7^i,Xuq`YD6@C,VtY[\E(f#gnd@S%(gT.t.F0DdaH\Q$(epGi+BK&O>GLVbba$)%,"c82QB<[&*20$6-P11TP!=XkK4LX3^6.jZ^?!FfUbNjYArok+TqF\p8%jJV*#=*W%NfPR@/JtW:hoB9bVFG'M1(ZT/BXt*]]7VG$O;FV`VFFDcZDb%)[S%3#o%%bq>uPut3qME/Z5B%Pir+C@P)2)<QVcT"Hn'Gcgll0u%0Z7?q:_Bg!<$WsX=`WT-<h13/]#'D6BUNQga\.X6C+o,o<T_BM:ta\]jN-;!>#_N>"rpln`ga+P(`9M"Y)*o9LbW:_o&DD2XeU+s%Qlei]girfR6%5>T`N/V>$"]bki-^Fc&,L9Z1$GL5LAX$$U*HsAQm7BkCf53jF6)i)`lB1?L<]kQMM%r0Gr,_8.*-.3Bd@tFVMZNn%*p)=DZQoo1QdmJ-BfNT;eee<*F-pd@7oUH9BG5,W*&2Q&0fhoW9"9Pp-ja&aUmFbqi!^=9(9j^^<^`*/^e#>!R[HO@UFh,IkXaRW%$Pi*FWStGP9W@6_=GV1Mir5>LSg9Tc3Z)/NE4qltL7h#Z09@dH<[#AJlk2&`ndUC'$fBD6%tM5J9JR;IopOUId:o.1?\i=!,&o1@%3YDYK<mh*0P-@)OYQ^rGd4></.h68n(V@U,+Q$"7Oi^:0Uja8]c!oZR<@jT+gaRA'iXZjWJ=n#SD$V,9RL7;;OrgdN`P9Sq.):K0%N?L0=`"n:LR`).UE2a1".[U)no50j9iB(T!"%cFH=S]66a+[j`70*N[P&TJR0#2TD7mnqfOhBle_GDV%>SKPc+@VZ2'r+23AY>YD%A--u?O?g).'Is4&kq3j3-CT,qJt_f;N1W+rE9],DJQAg`O:.hW.t\KC80I-UOH$7qYCh0s9[%RS8`q#$iX@lgfEP*mW.sIrg9sK"%1beR_M/!lp5T$krd-X5n)J;ZZ>BiF@;Ekd,``'-R<!8^q)Yn6sD%k%4elC*O"(rq\KYee1b:(>-fZ9bcKME:<S16S[dZfQA&PS0b%g?T5Ub=*Xc1X!m,YKQW$K/s?I$j3ORoO=dX:?p26g?`(s(YBTmob^VtU/3Tnq@aE$@@%JWgYjKCE9V&0NN.=X*A(t+^6*h)BJc*G%RdfQ\h3j9-$hrm:U/3)mdog>s=ISF%JW(hT$_P`(Z<2;8!6-9_JU;OJb00qGf%ET3g_(<MSW.W.6PY%j:11WVbp1!K2OIViqfMl@%:71>BF\mbRHZ_;V$&Ak3FU/#H&Pa@LH*f-IoBL-*,7&V2X0^4#F#D:EZY^IM&RHK\C_Yhp@H\qp_0e$/lYno,Z9>Z,X+?rO\90\g%pk;pb@uO8^4gtnu#c&GZlen6!BU\,9+c\[_%Os2=71VA#2Q[)/4Km&MfT*(Z?6(Yqe9Srb=(`c8l\=TQ!D2"2Wd.nkc4m#o+a\?t%b:J/%eQF:#/]72F":`IZ*R<o\\fn^I,We@p4g,@A5u@fu3ZqcC7S>^`5k'L7/JDH]Ku-TXN-f\l%1.PHFVY2?RHQ#rc9b$(o:9N/%(e1A:hlF*1ag2H&X2@pMY,I)#Fgr]UqTHQ5-l1#.__4>D8&,CTFZ?L:qG&&G>ME+?V[h7Rl'!GSFdBo@c[@iZirLFiq/f`5Y0/F<%G0aUhN\2=r9[S"Ndc&UWMgMA=V8FSj%a#1IdTIu`9f4#Y6UEt2F!C6efPgGOKB8Wt$a_D;Kcp=KY)Ft;E>G)++t#WiSoCcF:q;0*%ER*mC$-5B6dM5-\&3=H&UF`M\jU=$1"'X;FM\^^Ce"D9..Ko16'7BA(ho*J_?Af@[>`aMU6=3Tc;T&_V#gF#)K$NH38@O/-`!%"a%<0^DeSHTqtL<:&DA0=hS4p7D[Rd#Jd/2#"/+KU/8()I,#"N39CEq7in\Ej\^mpu3;]/drLI->\Pm*H%qF/d[RG!IT-bP@-YNMgB;%/[o`JHKqo-!Wm#h'i*JD\H&&@7'8!\PnT-%i5Ju>KC*OJ-C<Vg2LiPeW;:FO[IMZdrlA@E0gATf[UWNO"<4,U1ktK%#kbHdMW1C#%]*ZAFNB"MCP4;ZNFprR"_gV\Zi!6EV\/=;D=*$m@h@ks\V90RNXrl*T-%16X:BL."$t'?o+:'+I<_%($cPKTqCk75;IP!aB)6Cds%WMX>59/4>\W%9CT"(H\1/#-K)2(AUhZJtd#Ms)caV3rJ0#r"`Z#ClmpVC5/n66LoqA<FZ$XOKKh4UgLESKKU6g]ubd"B6X3)lnsL%P?MTh[a&<8Gu0O<$hJql2`WHSZ9aLqXbh:b!e-I(@CXJAcu(mn)?/J=M,0&C:;#bc(J?)=ke2k:4XgZHr.'L>]q-LGbdc8q5S`kU%(rZ%4pa-aL,Ms/roT5[gQJjhgZO@q8=s'#-5^88'(?68M)4pRr'4OCVeLAn<O^C.!I6@K#Z'IV'\S60d1!R=X"j?fo(OaKe<6X;)%IW53/d"MlmbHBek7qGIE$J@@u_DqVd-]@d4R7dO`d;5i"DR$=QYaGHO?\X/!(Lmg8D67u"?Z;c-[e&JNL,^P<^(F9/)]+87+1laA%aI@,=97K+44)fNeP^L5go.n7X?=Oa;^[_?$LaeQA6/=`3g3<L-LV[["NIAU$G8EJuJ)c8lG^!kq1V!FZd3$"%I?)h3\IX;kd:g9#%=M-hRJa5.a3#HSU+E7%h'Ka*kGL0>I"*+Bu-dCU?6:3egAE^FN[Z=fl`\goe?b:[^fY#DU2ZYq8iLd@KC1?WfNGGS7dr&b@r7$l,%ho+`JIq3/6"T=+T(qY"h1)P2,r`Mhd5=^KuK*JniW:N8rA0o:rEP?t3r"h6Prsr?qq"<g"Yr;T:fjN0Eh>V>Z`N#arH@FnafkAEM%oZu+En0-!EEkm0*ratHD6aLq8O@<>tOT0-penrI4dQ7&FQN$g\cZ]O/[AJ'-Y>!C*TC*%WOE.h"d#FO_&BoZWk-*aAIZ$+C:@H`s%1]IV.T4HbLpSEAo/E9LOs1$>Zc1FdjiMehRgjobgBfk)VgG*om@h)Y?9*,T"0Esc4^Y1Z\ctW4F]mb%Lm/PJWGQ2@MHPlMp,X68&%DY<S0>r2rhb4hD"^k2IjgZ8;@4je0VL<]_o+3e$FQ2IN,DKKbbQbFIumohA?q;^V1gOA*iENaF[OIGnF/RW>,o^[..g`pY30^h*1%Wi68D;qcHeLX!Y&rg50RrJ-!j;DmeI>mWX`l"/Lo)5]Nkpq7Y]gd.]Vs3eDqk)[):giT+)ZPq!RB(PF-Q-?d'W56*Dh-TG2'GSBQ%e;R#7gFMrdN=ne"5FNgK+tP'4-A.>pfm,(GW8#15i*PT5NaLMb^+>.0("Lm.f5CM7f]YQj@4V#+2r-t'0!E*)STS,F5^d+gV"##`%5:R[p&ok>W\uS@Z+#hrPh.'J9[Gn,HBOQPXXsP&ri<m!:O/X98hB.OXo+9s&;3hq.KXrT0QUtFT,7qm=h3VOhA#b/i^\]Ei[upeT%D#P_sO0HkGOSU?Lp0M57A-X@.m-e!\;L;mr&%]602YL7-PlXY-Ohk3kRqbMhD01N7I&#M4n1GTME^+=4#JDGri,6;PG>1J3Dqm6D%SbmRdW*mNIVk*n<I.e!Om<*t#]:D+,7+5Xs/'W87V"Gg*-mZW/5fX=$UE,)i\%CJqVdI1C9b&&u:/^5f`bfM4d;55J*n,+^4Vfb&%dr?Bc!O1ofSS$hiNHiP#IT,I"pi`qqaUQcXgTk=H-"t&mZ),mQO&r@=07t%:,_4#XEtV!9p=I[?HT2";9X3)RBaBk`-C:_XPuo)i%d:"_jR)="K;.3A+E?6MRZGV`n!2oG"nSS2L#F"5sSf'FK_9%HV*Y[_=k+<dX5pHda/WT)7770u.O/;gO9=ld_j#N>*<P[EIaaq>G%&fb>*W-dr0YAnb&&m8"i_.-"s%sm'9?iqQ!C_e1[mWtuZVZVD0[bL4sZEgj00>.e+SnZO[Pt8oFYdj7bSaPki8G;t0^FP]Q;4oKp%/fMW>*[EFnrC;CoI':p"krWQA]sJ`m)5;CgLmoL[)kB9u!J]b(hb[tO%\Q6(E?>]]Jo(eD%K-BM9S8c[KbacVZ)E#+7FPZAK(!4[%NIY!)#,ZuE%7l3G)SkA=*)b."V:#+60p)#u@/Q%<fmF-Q4(#U8%3%7.[O:fc9U[4:9OU+se9+rI#8hfE"Z(3Q(2sBlFd&4@i?E)^%N$?(6Pb*pL?68leCX?O]7M1e-njnFps-R>\mW\)fJ(7d%6(/2l4`\u`m<7oNrFl=:0paC@:=)On-,3sCfg_8Hq@a8hPq_1LqIO1V%>TZ.MQlK?7Rg":j3FN%?q/oV5;P.m%XS\baA.s[92d!q6[t!#B)q>SsNK;n(i-)mn<4+j0F0Y`MfX5qY=%r/pfg?!XX+RH<%h\8c%*t$Spk%dI7@opX@9!<#8=&eCB"41Mohq>2n$NEq"4W)1^KJFT;Ze($C5BaH^l9)K[_]jK-`C>3!g[6$(j$;qHc:.nO71*@[<Nqdc%@'p:"j,[f%QjpP_\:+4CRin(&QeW4UGh;9j4LLlZFO:U7V=[S72LGU!9keX@eAV1cQr#4nekJT@hiP5)"1ZN4KW;hpSUtQ5M!;9T%P_a&<W8G:*%L.2^1+*sMdEh)H57En,$%7II'&',dd%_BD['Ia9Y9)BS6]`@[5h%S">@[DpZa?=PWc@6N%)JY@q;:p9@N1l'L6Zal%=:[=-_gCM67OJr88eC6DBFG9Q/<*QJ_PBBH-uip)/Xi!)VUjZMha7u[nsP@\9h&%.9!'Se10M1P*hoqPW&@Os,0^9K?R"\nUnE^B%-5DA?NHiNK5Mi98<r]5XI""AR2Ohnp0=^1(,$D?f"HA./5FZNt(7rNc60NDG`>HRtQd.18GOaM8rmZ*2_F*P/oTU8Cb/&9)TVnA4%'LGSAN3Lo`$+\0$N>`!sQ[M/IV(8JeI'Q&6N(4f/R"MMr)Y8]Qn,&Zr4>'(J7g.gA6?Wmq5PJ?*iQ/qC=JrtEs7CRpnno*&eq0(e%(_4I:J.g-3GYotO6pg!8E3?F^k6d:3\\\s*:OF5E,];$U!-RSOQH58M"Mu@))s;%GYq43ZWZf_bTde;=Z]XI=AO[=7Vr3DsQjln$%2AK.VY\6ujQu':lji,OV]D54RT0LW13]''['66qng^*(*K#)n[DjXjH[+cdH2b;p^H2oKsaoR@^F1L(:W52uEG68\-N0aSOeo*mq%#L*s.JWR@sG2%qN/<*DpL>bS1V&m>?_N0N:pYD>;cEFAr1"+nLaHkYhL//7`#nW+LN%0P<rR59H#3S@c^O?pN&f)O-N<OfHoH+<H%n0kXK$\'$NX5.!KHhA4TaokDR*b)]PL^6[DO46**[__+$&r@sR#c8"?5/uQ0q_H>N]t5Z%h<nfk<:;G\iG9[CpI*M-pNh5tQ7rFA%_e\GQ$F2F%?ia#+"c*ih0i7GP3d_[<&I6s7!qn4SS%f*1>'*\nLL%(@9\571!VjHY^E'cMVNreICC:(2TbJUD2MA;Z+;nMm7<PF5%l%Ho??mF]+:c*Zd/A1D>K@YGu@f@fS\DH_O@n@sZ@/!_Qag:];omk/_bec0h3sMmcLocsP_4;mZf+Rq3OIl$T@5/rmO<"Y`^FOL)%(^t;@`c8nH^VDCFkk>%oBflU"a-XLcd/qjE?VD_/%`@lf<$`;pJ@!IoXAl\oP5@5KmBqXP&LEMUb\\^im1Y3l[bC<EBh\P7SD&s/%3Z^7c6JG(52*8<i-;!8Be,WDaZO%6IB-Q&BN%E9TaU_TCO-T2L)KFIJUcTKL6!9GFMGmo#qqYQc#b#<V0N:rcqGJ5Z>,=36Hdh0h%'#lY>9_`?K"7WN6?Fq!a.qt7W(6IF4%)?1*1;HN,LuP.9SRM&kSLj=K9X"JsgI[QP#W?q<&c<KB#C6L9kT=9Z-up",@!&-2RL%>U%hDb@4NA3]^COkY18>[;Y"*N'a/uu*`Bal^^'g;PKio$L2k'f)e9*j#eio7KY[*9PWaO5Z:G*JNsX&f]\S>E)O61r,r4O$Ac6/G,a%qb_<;$i15FUZfmVA#gZ7+[N4V<f&=9)Zc9c#-cjo9oph-0M!%#!k<SKo_oLL00GhBAq9>.8CnFV'o5VE;@/!7E<ecY.>i\JBllCF%q,=ZX9MfG0_<mFs/hNV/:Q"s$c's*W$i]Kurqk-cQVU-/Qh,\p/-cY"e*BXR?^0mW)"amB,MH*,>C[BSD+Ofq%Nh/1H7mO%/d_$G%a;_p_rcIp4l`XptW7h4$MuYtSr6[V0\#Inn2bUuC`LB_+gjcM$nAPI]0_W?a%,?Yc\IH2(?U=G#FAgfLGKae8nVsBJDOWlXeXc<$%%:s&BE.)ll@Ar3>c$9,2;tk0Wp3tDK2u:haY[%.gmQU'`*H*g8^QcoYn#j+1F_j4b/F.Xe1[?!<a19(2lLs8mR6jjN0XLKBqZK^\%7K(#U+'ZF11!o)J;pE>-Vk;_dhTtpXfIgfZgKL#G2Z)U&g?RY5Qg0A)R1jSLqH2MiR!WHBVY49n=uZ0U&UWYPTt7T,n?)W[UNU*r%Gdk!`Vmkslrr*3F4K;40k"K?s#M4.Rg[<qrD^p_%XfS]G)[#KCMX.bV(rOX-j6&p`%L2n2S&&h=qq&6(A]$K1P'_?-X:1Wqn6ETj%4t\7-$Yfnco#\pSs+`@S$RIkf3%hg!$db-SU$/P`CH0XYIT*l;l-!hGddR,VLYk<d=1W0SR@F(T`DEDD0E%sINsAX$<2EX]_epX/%d^M#*rIJ/97ot#4IQ(lHc';NWWiq&o[DV[)9$N-f`o:P]\l*&6qs%DQ529)8KrU]G?Q!ot^%O`kV+SH!iE]-Rf%bYN^Ut:[l/e1.%s7PmbC5M6Am-`*P"nhieBk4'PHeN0bHF9s2Va%.YFes1YUIqd,5,qudhd<f&YgVX\;-gc_^U;U'W7:$kOOA\Xk*6u>/qti5c)9l6%Xq7VaX7X"'j.UN4;sCoKA_6+qa@`XZINF7oV-7!/Hh7*^S+"ai^7G'SR!WKf7p#PtZFp,us)\fPl0=c3-B*CI?d4@kSZhKG79=5/%?7L)!q&!9!D#N4^5CV$Eq3C(L1+E1s;3.^+RO^LD%P)Oa2O*%*TBFUemOG&<@Bm@R?Uc5a34H?6/%o1p$BFE.c:;B&UUTsqYo]k9%lW`Jd?<=D['rhuE,#u8,lrqGhFU]h.HXZb6q"D*-;lMWe5Mjqoi[V&3,p0;fE;aP59)"r:hu2tm4H?N8jNXD?>Npq*M6?W=!fb=P%ITolKY*Wdr/,c^(r:o[Fnks"pkDPo.fLg4=PD@IKDdrS>D-&atd!H^;l%*/#X1s"n'jYPBrN'?TN(^D/oBY5c@9fY$PV5*?WmR(Q%DV)%p56(Bi<@NmMO&(i6Z$lS!C#7BM.fJc`56gNJkXn)=mQGu=*M"\)'uGC4hI#`i<n]3sXNna`H?lC;>#4U^.a8\4cH#V2R<LmH%CJaE\F-pZJY3g"2l&ECs@[cD^#E9Iu<*S-ag'dWH5l%sr=i*eY;@6G4`Vt<%6@Z$XY&r#rf]&/+G?.'oSb_.;[`g3Q?`O!PV7?Yb%_R9C$CjQAe/WNH"rH6N:b&B`_m`eq:dN/"uH:SUMoo+r*e)Ul4r+>%X;#\c7qi.'T<iUh"g+P=qJpuV'KGD&nH]r66S^#JL^J^08%Lu?s(oB.ROWm/Pk'l;CVftpa51\U7uBD(LOmd:1ECkW\.`M2dQkcHJUgk@Ib=KRBlIlHcA?-?*K7B6ZSc3RKTSVPl+s*e&u*pmlp%O1jjm/&slLmLmOtr^5^\1%sjp[d`rJp?ob3B1IlpHh6LR)\6GRpHQpZhX&5:FnQUEhOY2/h-Z)dDWoc[eWqmaJ#TcD,8`MSH%494%mt[`EFnN!]HhU1lAn*1Q0#uV2n(#[bfVa37Y3bu:]>'+k]tN(1O69^BZbT\]rMR^4p/TmRGjP#@1\U6`c.Kada&q</F)u@5p[l>H%_Z':pfXnQ>iCu*L@ghb5SQRi<l-bMK^UtG*fA';>>:ZGoRnIZdG?7R)%sC'o<Jk]^pJ6;,Y*A"Z`nE/)Pg@P]":qT.gb!uU#Zn7W%B'pRY9^C:W'0YIFi1mNs,WV_2kL$iAbcJR'0@AB6`K)3'S24s2isL6_$$pM`7e$6ma(6FiqQno8f$V(uP0h[?ADd*N^.<]!nHO;#%&k?aX3h8]NA*`+X7-j1@eG&:2=5Ve&C[5RMUsj.^s73M+*jWh2[7m<iV\<".22?Y+\*-GDbHFd.jpG'>W0,tP5g%98P,Ast.B:&8%\4Z4g;U6C?:?MMhJsJ$]8<r$`/BmpTP4e9DWe\rZf"]hch)88j?4s;^q,6WrTMe&EQ53[R=oU4AJj0Ols-:oq]NVMB5@Q,HoF?iT%9%!JG<D*2+X$u@S+hH+21W?.^%i/Y*-&Y*qa236nS)Q7YW_HPo:VZZi/6BRB4XJ!c]t\sfo$g5_d@,ErWa1!EKejf1h/R.+-;+8D%U1ZqtpZKs<@cpi#ctq<@qHUN]S@f5Lr'kI>F3Xa;mOd7cP-^aD@T2$pjgRCV`22!lr+Oj@rDj*<eYlp$H9a/mp"QkUs&_ALnd<G@%L>mio-+!og[aekQ_<;Pi^%001ZWci^Nb+-:#IcmB^f@IIQWnlhkSc>Slj-?&0Qclk,-\tT"YPh3*ZQa7&Lc[FH#FH*oT:XH8Ua6H%e>'W/O$T^9f.W%I\qb(Tif55%d<N;$Vue,JqsdS`OG7lTi/MAUF[Z6FB0uRg0G`jqI=t(/FSnmGe&QBeqT!&;/"n"V6j:Tr=TYn7%N?;WrBVCoP67$0]'15i,.K?Q+MPA0l)S(nQlcj_[b4=d(GX%e*G/$7S`I'GtTeBg1I%;,GKIj8'eU8NnpKSjDZ@\f`GuXE@eUdn(%LB]Z'I5G]rp\Q]I]d<sq\A1L.**6Is49S0_#9$KE@il\7/8RA)]?Bl8OP!=k8rCYXG3s<.CY-'i*[QcGR_EilHC3&:qUkbN^h4<)%)cBt<?;YNd6lek4C*"*+pumbMHOX^Mmq1c[Xq3Ho'((32G9OB1@mc[0IkEB>j"@>d_mItsY&)<8mS/QU-!j5/FB>ql*pn3:9L565%_URY`@Z06@+6:&!;8-hqPPHi!lXWUg)m^>6M.8QDY+;P-q!i3$R\UcD$]p9>[1@_1I2WJ&."8s^qLRj-g490VA>!2WVpA\5emS-`%Q9el4]9+]"hRsfFFn2*O*1h#+=CHd.bnYgtZ8t#lGIqQM/lhOg>3sWS`%%WdRk]d9_4(0X%&kQ3]oG1g]82ZaXO`Rt@l6<]GIp.$%*J(<0Y-3([RtP$,gj(!jW)(IH4\6uke>,'V/gh09(?P&l?@JVWO_41i7^,f^1b?W`^YPZ_h"1q8l,4@V,l]iX"VjY<G"K8#=P.2j%'/NCq^->C*A(UZ.@OrqT`l;+6YjfKsO#X;[m<BcgAKCZVEFAbLg9]s(KBWSWUk71?(Cr;NE_J6mUUbET1HRIs/71NcO67ptq:Lgl%gqtS)"!4q!20LTb(G[rl\O$pP[KiC-:(8F9)hr\b'N4]PI@.GJ;(c1R+h@6BUe$%f%11dTYJWp5gJ^I[+l@5r7Rc/%@HdRB(nMn?%Pl*(K9>8W+Q`0j"g_;31mBpRKBtcJp"X?;B@DdUI(_1>WLlWAWfoImMI#fpZUV%quN?nS;ePHi/pL@=H5j'!f^conO&-7t;h<Ws-%D#\O00p)sS_Dq(EAP)FtWV6'M:?m7q7fTJU[Is^)^?i,M(nVd]s$9F-L>4c08n7B>A5O`9ff+Ye0j-VhX<</]oBtX.@)`P&^CRYq%Um%)c>lpIcbn_HoMC#nGLLe<))%F^-7S'--#;,]fV`6gb$XHu\'k1JDb[&uVr-XljkZh;A@n1tI&ld&X#]JY4$hmen]L-+u)Mf-h%I#/XWV=THK-[.4N)>E[n$QpcJee\r&1%?1#NKo?`,uG501^$P;G;!B')X&:`9_?nrVAdq"1&);<V:0GI=g2pn;Q)ZmHpQXMZPS=u%9Ss!c:kTq-C@G7$ZMAck;EFhCH9\A-`e[*B-MK]Woj4ji\O&'Jqm8^_n!*s)dhiKm_42>s,Do6h"Y^^elJcV_^eRGJV<O\uB@".+%<HU9([4&69^g=jb/Ar+Z]#^g:"klo!'(\kmLl2pRgBe1MY4(?X$cZC\q'AD@'amZG^/UMZ9Jc2a"cZ]Mb);YI9._OT87lS\aIG4?%B*&R-9(@:#ArjX6S?.$4GiE_3NtiFt+WO:7P+_;G5p$.50!$W.?-3L+;k8/fJOu49/O)sB_[Pf7MpdJmcgeuKnoo.$'.R/O,/QPd%O_BBfjUm>-G[/KCd6sQpN$V=%`4UGg<2,pl/`U%(Z%^.h1n`naB99@%E@'>;V1`jQ.7c942.*(P_#$r'<f,s-HfE29>bXM5;j_p.%EY;u:f#gW&\)d-?)j-X(*3^\!>+Rb`fdNG7_3]J)<J]T)N5Wa+g?U(n8+k'/`TOHB)V[$J!1/1ujC05u1@@g>(3Vm*6-/2oLtT%6%5=@4^nc$LQ#&cP>YlKefBMh]uKLmgEag@*\7FII6SB7*_:alF#3d0XK]ppem*`4MoCl!eY5$%(:66>C1*j17*+^A4nhnG-q;Nt[t%a0A8?Z>.91ah!RS75J_s0,a-R-s[Z)K>k]6Dr6I-rVl0L_UiQX*4;jkXX#KQjc"-88!S\lqBjaIe=&d2R*/`0Z8PD-KcpcorV;`4%0LcjbZ[(P,/T>iaj[aF\2j^=_=M\.fnDYmH)+L\=]'^pSM*RnM?)0k>/hSKUF@1%s.-u*3*SE'+\)X1iM6]$qYmfc40&@f]Nb'pY%T?#0IEfU_bHG0tAjcc%[75ZM^&OB#aAZr>%#0aJ=U6[:JE._*La`320.pq)N0$ap/>YFbaTk3c#!*P`5O7q?;VR>+nM[Ibc"NP)T%"nb]Z56'c__)*>]J2)C5'-grqU7gT<`H;qhT+r-Zm$Fu8DcnXmRRh1Xf;+?>_3k[VIl%?Tl*G6uYS68(n1gSP\\\6gHKXnmbhDkm%D.^JW?X_erc-N'+'rI0^Q^g@^1PR7%To5r#c_(qmYES+q-"kTpCr(sLkWGSsbb4S#b@EVTaVf1_>B&RA]&X:2Qu'UDF6HX<1[)Jf%_$P2H@On8`3n_*3,_n!4K+@hXWT;DPB@*p9`T0%$aVf3amuN`$(KcchO9]m7=:]Z9O`%@=f>VA("hg)o-Da+VX6C#$=#(WU`0L!s%/38c,;TS_-RP]JhpKKMRmB[4,j;_Ma*+F47ShR?AMNGcY1u#TEb)d$do*X[&6'UjY?W(=Sl`cQK(W[Icc^`26^QHUfl]JoD[7R?c%O"$3lUaGoCL=s\P8=I^MCML3j,iBo^.Y2?%@4=aMOC9k7f!'.1craJJ<guFgl>h;*WbWi[DGl\S?F(=kjR:!R^Fit8*33Bo:_i.>%V'Wam44I,@M3O=6fYntC]-0'&fn/P0a"/dO"A9c+Z+88RdkW#OafIrpK@;>+L/Qg`)a1ie12ZkJYadS8a*3n*lS(J@#0?AuZ6LR,%EgS+Vi:,.YKu,,)lrcP4@l6hq9u-+QblZoC&BT3*WFja!H$h:*B:QnNJ_d-`^WZk5<q3/'nOYE3VKC6)pr0@j\N"["SKD"[0Ri8%%i%r]Kh!G:jQr,m4RIg3DITfLjBMj=\C8&Kkbn0Q+6>J\D8S3pu@O_:6(e`&>)%0rRBqjWq/G<W\=UGPucBKt7f7OI%p1Rl_@O>/7%>BV:S4";'"SAiKMq/UK',-HI:fsJsnmAG-(ilBA5mbWkEp-S(Q1H9aUH^UG<?ib_r&/5^(+HhZP$]'3gMW_\L,Ft&KpW=*-(+]Z.%Q)m/F1g=@j>rqGPU*I%:5G%6%ApH.Baj"C#rW=0uipu$]d@biO?q5)E7[ETu<JRh-QSO;]U2kZKR6Fck4!@ZSS6[)%+I=3ni\R<`%F&TBbp6.MnkP&4Ba8b!<0>%t'%Z/Tcrg;Z8KZp^B8;$81AgN!_,;RWAR!`FXPVu9)-D=#Pbi<BA"?[Q9)0X[P2-**lj<Xui^W"TV%bgZHG,;P4thN+;#'9RZ#+7$sm&gh+7cMV9o@JkpTUqcqYnq[\gY`uB'@uN7Olk,Y=Cr+4<173_1c:EB&iZZN21GT(7Ep8C:O2tj,%c64,2POujhc\XNFERPCDBIpJ0X2I-MCrWcpF1++GgZPXuM7jF`XCMT)iBYL9:(l%_FDZ(JAPI*/Y)Ti>4^,U.qH/,eBoM\hF)Mf0%X&iG5k#f&\ZeW-JAmNW]Rrn$YU;b9>.@_F^rK-f;.[cH0pc#ibmqD?!Uj+KaI=7M1+"#-co6i>R,B!E:FijGuPIuArHTk[IND2&J%:9p'2b<S^*0:Qg4lD45p_G1SQ`(e[\.+t0d7aS-r_o8^3'$j6#+-%a03`T[Iq/B<V84HjQmM\#+/n/(]-%47bLPtoGihgiNcDH_,%Ns]c>CEfH#>SENC>@q"OH/;8%':G!W#ES^,AcQ0EkqA0d.-Cn/=\B_4N9+Tl,70VJNl+[R;on#,Y%1(0".q3n0Y&f"llB=5T5DR=%iq(=6MW_tAaFOUOTeuW^bD,0nHdLhV>kY&7L/:jfCLr[j==bCtp+e3o::A.Shc]lre<Id`]FC7Nahg4jhCFjI3W%/b]#S(5&D*BG%<s$FT9e1+Lp#moW;r<=a7E*!CEHuCXL5!`^YB$Qd1/cZU.3L>>@c7VL;B)so)3RNHAu%=sDrO+gR57aU9HteTqt"nb;R)a+A>E\K%f]3pL=NWHU;R)a.YCW"jou6'3I7\g#C?@rSrdGX+lOdrX0qGfigBA_]V;r;f_Kf<9_ht&;Vnsap$[Q!UE/Z;#1-+d+:PF.\?TE9Z%>kC+6VO\'\q"BHAV8B(Ja"mL(QUuqjVpF]mnDOO@8Vp4RZ"mA"hZt<:O&_&dDGet&)_B.Up?och!&><*I^@k2D4$HP$tl&7Ls/?'%bW(<?oQFOPjhAlqb'QiYD@SViHgL';(e*Km):X:W&E0d3CJjcp0q^*N[m*%B[a,oEe[`;Y>2>a!GEj].:UcC"ml#oYQ29a*I9HMP%^HAWIXnCS:p8la;Q#cE';CQO3^eG)0H9rJag;,--Lf5uDbKi601"bD:?f0l7cCE4M7l#>nPMP*NIQE^Gc[cKdo3nKbG,?4FGBT+5%luoiM>H(Lb/LP,^'gB#8)f_/B9W3&Wh3BJ_Ej<:Upbl1Y?=1UlDT9Z5J[[FDBG7f,V53M<e7-5)#c<-S^4#SeQXOOObro8ahrBmU%^*R=B!J6r,1@2TMVm2L>*&Jc*i[Sdln&P1u,/2LZa)ASpkah2+Dm!UEj1G4O19/-m]R'Fnl$P93g`%>ql2;Gij82->&rkut#00a,%JJBq.=aWoIDZ-CP<iATpis\Ru_\VTRB4R%dBV@MYe=Q:IWo9mJr'"0-j/oja8?#6dS/OQd'oqr]^6>)E,X8jSg/iC_kgJZiEj(G=%IB-sd,+6(bVOIK*n_h!mKWWIm(/H;JiPsY@0"-8OqnAnD2NkItl$EkM9gR%.cUcVVV(S1]bV-TQn4#e`QFeJ^5XumQ<3tg9NPf;M%VMk!I7ebo41n.8*>.41C]IKC'.OOA]\;S5pj=aQr\TF$J5)-E.U',CPlIg8VBVAV,RS>`g)aZ;mdj;.oS6@gVe3$IDh!9XHFOHP&%\TH4T,ElZe7E&E*pKLBARk?a7AD5^Y);]ElKl"?!>WV;d^,!bBPt`'kN;PZZ['JqjRO#1!VO(!nPtMqK0kVEXFA_'gr%cf=]!rX7%l"8D@mjUAYCqA5+D#A+\"H6&0Rk@'obnRJJU4c?2Nn&g9FA\@%S6J.ICq?PHUjWoRPYDrO>8"OPrmf\D;?<IMJke+k/h29#Eb8jV%Cq?QM\iBZZqJ<_kA44DV-d/BFb,($AjI.?`/uh:u*CMVOl/#AZ^i`sV@)hm6rckVaMVlBG3.QI*m$3E'c]QEmCL'VL^Ub]V@X@q%%A[*kniG#g53(E,Mkf2\?@npX9@?HZTG0de"=jOoR`AT/J'TB3%:M<^H@VUiK"Z')M;.FITSCAh;_os63'(?UImII3/M=l[JeG"TW%8#4JC]p+N$UOlkc]4Ht>FSD5o[6VAa@QdCsP<A_#GNf`0rK&I0.C!YJ/s@o@9&Jb`e,&-^\%2+930Q83Rs:F70d;JgCi_NJ;2j5m%DOat.aDL@^\SmTLh2OLAeGCqRpKZrEB56c`V8g`cpb9+bFn\)XDN&'V!KQEueoENok-Ai#(UNgSN4%6$82odKpb@m`IRUTU;C+3<%0RaU(k,^D`0T9@^36!-t`(_ZP(IuS=4)B1</4.U&MrB%-Htd>occPX1MOX(f4aJ"sYq'ED'G+9eHLT.ZTqJ@6ojaCk6U>/6<cf]B%CaRgoQ-@:jVa@>HOk5/>7mCKDA#d2_Q!Gc$E+#=Qm_Yi3$E%f!8VJH9ek4@G@q+iIkb8Bn2SHR$@UTpdA/ne#%B[l!b[fNEMons?%Q"01TRUAN7YDi>LR#*1WJ+:-]AdSFp1uVCh;o7udIT7SETDNen6%!38A6:9$Kr9`6_>@m*g[EOXNt[ur]Tf3lSR[m?Ksq2hEaHLb%[9j8FcQBX,ep(t1cXIP*?9,p8]GeV@kHTjP@n,B`\\m6:IV!JZ]8?*8]YtVLmou>oLV!uGp_7n]j-btW@)IX<m`+'3mreFo&Nf)K%cA!Q*gr6t!5>-Grp)WS,mJ$Ig*U^5IeJtof-@I`dRWd-E_+>;U^H]c-3OqH\6RPjcpg/)Rk2XClUgnl4Tp-&cg@niL3LSu@r0f,c%B.E_ILIsI3/@D#C>Zb05POk_$4cKcWb=g0"O.,GK2GBJI2j`)bfPkm\AKYIB>,1u/-)NDVQc-8@FnHBN`T#@6i\JAK@]-akd[2qZ%11dCS\Esl5\[drY/$gKU/T,\<;t;Fl1-"d6oJEH2IT#<G-GrZ;.U6LT@iEBAP[9Y(eT*[@**:X^iO=]dlRp3%EP36#b\*0t".tei%2W:^9!Z7E\G)qu`$.ucCl7=j;bokL4WA<n+[kUpDCD;9X41`<_24br2'q1@IlT$E7Pt-@D+:dc%qLn*gq/1O`Vq"9p=/_?BhLDNM%2;b$*G?.L7\%4e*/bl`#`,b`-^=Vh\`U2>.;`kcJQ"%f3=!.h<j3Fo7l#hKAerG(RYao,Bae>`m5&?^RDjN3SE6IcCGl<u$RqbbH%LXP[VQ,q`F[L\jU]_j!,$1E5>;YE:V0DDZJa&fi6p[p)Gd`)0SidFK5hTU#COKd-gOVsc%2d!F'r-\^#WG1M4o$Ygm[U1KNPpR[L%8(-O<NFH_#9)ZZ^UR4Y*^f\GJ=T',(L3K1bl0c2!?g7"A\Z^IY.)uCb'M,>7=*gCDO5PfbfLg]FCULKpE)c#jrgNS>Di".nZF,f$%:9Q&h36!U[8EK$WAgp*(X..pRbu^+Uk=[%9FSZV^0d<Vq8T::a7@/#I,\:tabJF"IC@&gZZ#hdd][[Bn9'K!'i_u"l2K)!IJpRjF%2l\XY>N/."\ie)aZnRklBpEA[6$RZhA.1@`,cR6H$&UQ]Lp;1eSRblTQ74>$]VSU7=_S0m1o7[NAtu9NUfY#(77=74'l^8+n0^&L%gYMDtP!/+`I?dhc_sYq&`#%9haY2J'F]obR,AUeAiX2-b]b2#[[F%-9?KXpGg&!5%^<R:B]rFdHh"!.B\Xp)@-?D(C7!O"T=e;\J%phumdb"8[(^2J(oA@E-E^@Jtg=1,:WbAhk;@2@ds0;8'r'pg(N/BqrJI952p;/,R*i1c?i.FpsO6dBK`#udIjO5-[01@$LoA&;N5%O+XbFj1XddOHo;bHoXI01@1`eG/:,7nN=+-i6ge%[7<>T4?gCE,5s0,=VJp09]Bs$jd%oh/1QkJPrVl_QM2Bo9o@2F\_Bi9*N**$%JL8Wq@cOX`"Vg"k31lMOT03oCD9n]mnV^T*F17X1W0<VdBOBea?"V))/85ok>[b:^6<[qUN2>\-N7"fQV6<h8=Q7QdfGH\(^;gpG%OtI`AiLM)!0WT?[n!3U8/3o%B'6=/kDq,[X$SZ?+TOd`/+q$):r'k],,?Cb'OTh-36cI<.NL9qe+mL7m!9;\IB#t*J<\8<,'unK"%N5B4lgka.Yb*E3u2$YhP7iil_0QHe\aoRInOl*G;N:uPES+=7)8%.qHjbq>RSbf42#uQC*DT\<h-o<:*PY^;]s1qG*jI*sd\P;m]%.h`gYV+pc)ojH@Pi&!R8Dot$$rfs\BP]%hIJ;piIChIKW>&&#$=$NsJfehOp'u-g,=IED#qtc<JDQ$Y)lPJ6^.D-TL\?B7[<%*3d%dWkZc`D@l<eSi<K6[AS*,mP[Ch@5`m?bb+gb,Oan\"1%0?]^FX^TV#8b)fk:3rAbbcfCPCC;l!7rC6G&/,/^0mTOGn@a'9!ij/!8%hK(RR^4+0E'"]s<F_L?J#;G*hnZCs,&X/A,S'/D*/7i2'AF;m%HlDnY,qD$u*h-hM5;?3d]DB53%9+SLqB[ec@^?B)n*?=I$Mrs8%=.%:IIT+=5c`jV1)#NhtYcjZu9%'0/1!1@unNB&\FhE/$P-]+!>#&L5^Y&/m"aBX_,q#m/:/=_"GP)@)]hYf8?d_']k&Xr(/[XHI%3QAd^aU>6r1K%SbY?t9.Q;<E4>#)f8?b1*B-1<!o?b_Q45N0>*+rrCa=2.i'a-X*&>iu"[?Ep\@6n&cG]KVf0\?B8lb7.2YVlmIF%B%tojH"!`nK:QO[^Z>-7Y^LdDhq'N,=$KJ^::RK7npGN6.Y;[7onuJ,1a]]O.p3[&AD*#^EqWr=nP*Frbf'6,B7G9Gke;M6[c34-%0X'6_0.*pJGP+=PRDusi,NKTleSgVP[#:1CCADHOY9c@C2rhW$a_$RSXIjTA^[8sFrPm]Tmo<N#U\jR-A-\+#O']W0SmXds0sYb.%V<-pTI]lP%Vc_h5p@\%00QL5ZWb!YrR'`n97S'D]Y@$ieVq@BbR/?_+]'Y<YWT?7]n*65kDAgApesrX;^N/[hrM!hq^T66+<Y&)l%Osr_Dg\aJ:qPEA4:1IYGjFl.tNVpqIrSl8GoJCnGHU;PFR$,@Ub8`cBhUc[>)s3F_qF-I@R)$h.>oU\Ro"KQelRf$@Y@"SU#gU0_%>i(95%ptNb_l'j)'d&"B0'S^XQdO/4>`0-[-83"BV(Da+a`<@!`/e>DDtRXjOI9ptWhf\&MHsS).N>"KQA<eITbTs#K77/H4Nr=Z%GsAY3mGkjbEUd]uE6P5KR6TK`0.KVcR>os>4[\[&]WZ7_J%2,s<gM=/Q5@`jAS(?0@qkB,V/4D(DqsUHlfYm3l+G]m'c%9D4Wg0>%O-ea?ZY8,TL\6SbLLPbQ4P2N?QB*-6G4&*8XY13_c&_#Yq,6h9r0Pj;;>iY)HMl`AZi0TlgY>rs4C?jhL&S]Eol9-;a.:1pI;.:_%r;*k:^\mXV#8XDgrSH>*Tr$PimBb9*o9nV'e[l^drqUs7XhOR*WL#i6Q27]=pWBYHE89p^FI2h+kKEj4m`N*YQoEo_]L9QaeZFi(%01GiTS`LgIeUDGt$N7g8/oEW2c:,p<5^qseY6WZsl1T0/c"h5*8DI#3jel9a.D7ff+$pa:.T[a75_k+&rOtH['C'A;V[lF[`TGS'%q:F*_q+cF7^7ZA<06?NmR6/V<I4paNB3s/8`^a:;G1bb6M)2")l"NGODr/=\UMeFhmtKC!\oq'CA#iM?<U(KY[1FD3cB<P/<h](^%rE=,Gcj#r(+1oQ0f#Pqhm(889g\:.p#'Y"NmbHi"mE7Ti$IIAWhJJllHnXki1H/.Uq6MK8D4eA7Y!1R,b'84)m`iRATDY%n:?ea)%0IVAEo&Y2*G(-]O^S&J7m33nEXtdD7gUum:kG2o&QZ+h!ooMc)%C<PmI]5sS3<kGp*B:H..-h[^XCh3RE+*OA/q=`7eq_^H;*7t<%W7SCD#E%>9<i^"iQho.erk>tPpi&q:Kc;,"jW!WliS@V4)n?$bFg-2Xh--/;\[%^]N=G\QYB'*f:o,,Cj_)dippf<jK>-]D/_p^%%O)$NG]lE5k.+8*LlJDG#"]`FP]!l"tnV.C6W;EO]m2Y0NB;o_?k'e%"qjH<:LHr??p*Q,4+:=7Db3JBjQARpHR'lR^hX9_Tg-5+;%Da0jkZ'\,[Fq1djMRg^%QKGU:FT\cGdrcO<g@EP$2d"6BSFA]p[u9u2V5)dP#Ls@^1FG@XHHDP>T]6sPFdBGs^%tq_'^(XV=R>4'%/[)9fF*KP!h#6cn\^)!_-SP(ng=Nq]"ad3EPcXh.\U%=k2)\EFj75eYKQ_,*R+J?"[RW/]ed7UFolC:ZiKk"i!+56o0\\NNE1aQl%.Q;e#0;KJspe1@1)6AYJRjSS=^[`#@Di"V2DMVr?.c)gYVD2="gCioLW_3g"=acgDh*+$7b/WI[;tT0%he5qkSp(mNI8[#G\]_eJ%b5&[i[/%8Nk>niT@W_qQi*ekl\_B#l'`CYsL#l*de0"1"q.0k^WST:&L-*%,n=&=F#-:#9T$R)%kEhJ!Wj>s6f+-+IY$Zr[VUE-1%[#e=HqY]*W5O6qEhnGs:Ej#>`@,J*;]X_)eFX<=#hm!tV(V6&4qbhl,#J%BC?$/m%XcT3h*Op+a^A?8;q?/acG3\MnnQk7sqmjE-%kP;"XrtPaFH>mb!%,(M*0"mpkN5ZaBn!Amm"N^Bpb/5F_(m4K>J9Nq7dejTQG+[hBE<.@3j%Q2/S5A4%6"QhOo?7HrI()jBkI<2d%/@2a*/sr+up02,es#Sp4()c33FnP2"kih%YPdMGB@Wp:gYb$5JB;1XocJ&6J7eQ`7Y+f`Kf8H4Iq4Z-HO6p2Ggn*o_eb/b:#>[*-%'6Q!;[X0]4e>hil<gA[#GH3]<LLeZ/[I<RqE36jWr>=<<i633+_s,!l@buJt\a`PU@amG`a;)@n20SZTWj!O"7>$oh69l'2+7P^:%m>hBe]NH;:JHGQ&40WLj(M<.gQsD_kT<?F>9!e$>nIU8t"##@9"YBNSJ9A-$euFF]=KTg9e9i30>B2B>hj1*SZa8CJ]?4EQ;sj=g%\gt('"^EaKXk*r0!>lcJ2)dij>[/86]HUNP!>Oq0OW]u-H>DEqXQp74^8XAieMVLDWlWt4\d$=U]L^X>Nr9f"l\&XhWNM!Wdg3I?%mJj9DIh'+aJm4;Co/>=\ZZtLcpd,G`rW08/pU@kc,E0'T]!0f=M^s6A6]GB$(MY\=Zp-7)MfJP-/"MNA-\[:HPTBCY!ASE6DZBAO%a%tESPQBR,h-K+_WX_e:%Y\3lZKg2;JQ@Q`6UJ)02/i<5D]U&pC>R66[Eh;OMcfZ/fWk#8b=VlVC:+O1MX+fRdZ%KTn1p'i,P(+h%7(]Y`JS:[(N#RS4W"+C'T7%jWMfQMee:.gqCh\>!9/lI_ha7SBHeBsjTf$m1emdCLmGuo#KOV"BGJfb$r0:4pF@1m6?qUl9Cb;4i%"!t+P-(!i3Gtgd^$"&\`;7lql?3rrunKhf4jI56&^,<qZS\Op\6R;`CZ/R\L[oYeOg_h0[(5r8F08ISZ,BuG+U?1=t9(6pcGT&,J%9aQg&`bM^_CVeJ-@2hMNC]qr<#i^7W/7CGg8D"3\P3AeZCkrjCL_af_(8bUofG#pi'J5,+/_CV/pJ!k+U#$7"GmmetX$C1VT-*5[%9$m]P;1a57m>q]eNoXWS(S'go1TPG700%Vic:uCg:A05nK6nMCE3^!*fjb\@_9"kpalFmq_9"l[XtUkL38"P&hK1T:(S'gok6f].%Js1Uj2Hr>T(S'gok6f].Js1UjkfZr<i+*oHGsBjf`mD0_[?)QW`6?fo&n@oppX0[<[N_r#dc2I0kB.rQN$YKXb:HH5/7SJ91Tl$l%>@;B;\-XP3knH<6]1"'L(>mC7^a=KFfpO^DGo.+Cg\m,_`N[F>['d?Qb#`cNo5AC4UK1^d46I\M#^;P`i/KO1mV^e&^(8=3kk<T-%F:H2;p1:kA:+ci6Ll]d)%*1=D-Mr1oo(0,.#F5#*SG%.cQ[Le+jKt[;/:p92J>MZu0o:XLMQsmB_rPis`7=cIiU#u];R$"/kimLe%P^TFV5`fWp>gMj<g!89ZCZZYT[IY?X0C<BO;nmJ4lK$Q;DfQenI8rGrgi_r]B(ND*f<EuBI<fRNLAB*l7d6_S^[IQ?k&'jqRAZ^N%q9u6rFft0-C&iP=,d9sm$&Rq#GP?)qmWbd0rM<b:98a(s7pYJP50p;nr!(blB(`T7Qs%&8q_kdXePBeCp',;WHHBD'(4M)Khu<hJ%Z<$+fc$oJb[X*2f,p_WobB/6*mVW(&IOR4:he`eiheqeG^4*#0Xe25ugDDDG(0P'Co=1/K:#>Abg]KL<j(Pl"k>m&]?a+Sf1Mc/T%[@+G?0,HE;l]#%2DmTE;AnJ`P+3gm*/6pFN\(]Rml^cAZ&J$Mf\Ie<kQ0.S,6d6m^bS?3nY9XS.R"+s-]E2niBelM`^:5N/^FnTG%#R5:Gh=KVuHV:.kEL%1/mbS9u7U2F7QM;Mr:?4e'k.RM`TG1Ol8UfDro(bed>?]_p2`=__`i<<]^@bIDp:E3^QF=;EYUsb65or%n%\p^5Bd@VQ%&Z>C],Q$oCo9oH4l5&=NFoM[5qp#7-9V_^DTrM?$Qh>&@F'N5=ncF>\&7gcb.a!gIrH2O/^8u:N3BAQ$&A:dB:6--S%,:\)riTULr(-&3jj@7%7ELC$[QhrV&:eO6*j"&YU7B/d041b$\H+!RNnmL!4Q.sTS,B4Y3/M8tiKnVsk=@<2O*H1`7jU0HbnP&IG%[*H*</#BS+2a8f'p4lu=[++n<$YBoSXo*%tMUCn`m=hHj:NbQdON7+X^aGBOY\"Kslch/R42M_cbNr;?p7)7D9l"[<OAWZfQ+uU2%./tqlRF!TNZo@_+nI%;1+4#f]?;Y.\*82cVh,A^e^i5PjhO;K>-?8,V<,f8jDVZ8'WF1%#\^>WHl?bjDI9j$o1u9j$hKKa]l>LIX%mh"sJD"qYW"H79%,$+J`F4"o;C)h]W+Is#00!2?b[I<Qcfe9>\_g@rW;*6qiRU!]*qR"kWr[J=Ohn@jV0SF*1"-h:&B4_D4$a%8I%)+DAunqt)i"]-YoD)\%,Ir7?T_)6onLC5o]Da,-_)&LUr:f_5kX3OpFDXQGBpG;i9]m&;[[7@C;Y+Y6WNF2g%@Vn7jP;Zmj*ncG1%Q38U44@"u:j=T&h2-[<hNs4Eh\CN-m`U7pO)u9%LJ0Bm@p"Ffhn5*+9(@1Jas22VO;uFNtL)Bm4.:7T#5QAEhs+gXBDr#1g-.ZH&%pV3mHK-=)Il];(c)#I,/lK;W`9cG?o"Af%=3*#\/oT0%65Pkhf+b0/$^\VQj&j"4#Q@Jq@[/>>./^HN1ep)Y)f*G]qi4JL%XT5N^%TQpolmCu[#k]sH1r21uPOko-R-fN49HJ(3QWcT$0ZiADpD0tukpi^#`Sn1k#djZl04OdN6c25EYn`Ngoq02iEqT8cqD<h-KNI?<I%HaF395Q(9U!"/Xrr;P9&rlV%l+9#D&4l_suci;j?VX42PIf<^FU?r]Wf*:hphfe/Q\"EWK#4kpYEhqRfBas4.biNb-ql(%eYKZ+b%?2CHRR(kC.H3<>+@k`CD/q<cO:Mhe8AM+4IrNle#=6=PP/Up*>q(!C;>pk)!KD@$=q:j5EC4l>_1%7Ke-T.:+17(r*qah7ZYKZ+#%<pV1fR(kDC4&c)RA2&LE0)o`#rdSi?Iq:84oTc&a@/e;.bQJ>d*r`?#%a-Eq?Xb"@DY[5B8A-bgdj4jT\k'Li%XSl@s*)KAjdc"m%\OaCh%a4\BVf\&IAK6G'_f)g?m^VL_<o!^9]<JiQr0R0Qhb:oebp<5E9Z$fo0a[ltH%c)m#f$4KJ+K#`lML:]T2"BrrN#tnRt$J'%j]DKSYPue]rL8k_ps4H_[r:52s7ab;_uFZ84iI=@9*+M^rqKQ5^Ve([iHO0DroWT\^\[nYo!eYh&,ttjs7gO4YJ9mk^\uLIrrCD!%s7kX#s6(!Ms1u>$rbAn?L[Vu6L\(FY[\!Nk]<F0mC(Bc8DpS;FRK*0Ghn;2HjnZrHSq$Yko0<61K`5k<q>HB3s7cQRH2gMor3Nli%UU<2&qQ6XMhg`<3deik;j6_'ijEKL2^71+#0g=t]ZbKSJhonjqFT1ad]]JlPILAsK<m."T:>oF%Z-M8*o=$FNNh_VkVJe'::@pL:%s*g!#CVB^nrn!des8Cp2o<#\*h-1`h>;&d#c_5b[Z%`"K$[_a6mm(&PE?b)1BH\"f\X%kqkO5!CRr;<@V,7E#TDYfT73.^BnOMhJ%cTMgI:OWN[6c]>g!#!&s&KQIq`G_H2iEM"SH*litHG7o@e+L+4^=DWUeGH_;R[XMC<*Qs]2R/W/,hFNqjHmq4>Y+g2@jTHXZ_nWZ%O]o&>Qa2UV[ZG?jGs%3kIqE&Tb>U4:g#r*%^6(E9/W.GLNYpsSem$&5LXlGrH/]s0A*Nntrg)$/_]89WdcP.h&.>lQ,;k.Gk#tKR%SA4po`1Ddl'F;o'C[<O!.k)`P@mi54V$W!"7MCX9`m`s6n@OD!@J*43*.l)&VDF?09'ET]D<sFTHWZ#oD$[Dk/HM)VcoB4=+H]Jc%)jj:*Nh4?g[L28E\lQM)\`sjmPFIB8;UJF24nX9m<gi$:ZJX.%XjqIZ]0eK!36Z%A4gj_BCjrRBS'C)o`X&.R1%MPPZ(j><pkdD\%g9pda_]KNtTf:"Y4a\cT`f&4kp@M1/X63^4Xe1X-^p%`HCQl#pRa.!5.)/eAlA"CMrL2KZ9"`p>')`_oA?DZJ[,.jU[3Oj=BA_j-%C+l#Y)uS7]QKEo8+e8XJ-&YN-T#8U+4EDY]kCIf,Uk`u.E`q]#7],)pp,c\]CA0Jpf8%E+S3d\_AP@@\l)bXD:Tp1,I;YG'BhVh9%G>9\hco<qWPshF4co%:?#at7)XDNg%'C.(`mRq;#VoHe0\[>%Tc6iC9=iab9M+l2:2j/J\f=jpp;K7).rNsN9Fl+C;0oAk(X$o]I%T#iaCjNqs>ajsO8$1)rSqk;gK\X'"cn:cZQ`!<3j@[5Ek@OV8i`H?N,Rksf[2ugJbD(bRb,RO0*H"=%Sa0b!C-gcilhV(%^Yt<Ma%LF3]rW=DlM!BEKW."sE43-*_^'dO%T4gLE-=goBKKI6M,-gXF`.<kuC:s(*`V\8Tc\H3k9j8![3a7NcR5Xpt4D]oN5Z]ecA+/'=9%7teg*.+W[h<=<1>hGe<g0!Po41]dn#oDHW>@aZ\P<[X(2BFm4lo(1@[,OqbL]%U8@H6HRIF&#P(oXd+D/RF@Kf^Akf')!VaS_jld%dGC-`j;FfM4$<>6o]#+CSrY*!:Fcq.']h$D]@g+?^,"C^;qbBD9u0b`L^rFui@BZuYQRa8(W/oU/IcJA[[P9N\N8<2HJP*,\/9<s%IDk&Jc#nH+Cct'T:1VkpqNdYCb%?[Rf@6K@+)"aLYR:`3?#uK;CtB"ZM+r-&<V"47993f+d?=Ub'RVO0FD]ia&/c[Eaa'=ZD&cN<%'Ttp*`P<e.DJR[@0sV`u>&rgNeQto/im*5ok=+/29SPZ/fr"a4GS.b&7m^;KXPspXW0QPqFiJP03A.O>p%_CW^2&.ToW5%W24G)$%%gV=RG0[Y\jptVM*2;7AekqD'78(N=f_uAT,Q5e[jnmfIHMdN1j)u*RUpeD>rYBQ`<#pM=!ZG5,"cs@;odWL[k0]W=EigZDcciV9%RJ=uPkk.huk&"suMgZ(=&V+9,V;=&l4>kW3?"8CJFX5kEbiPtGoeWSMpMtb"b(nB%)\GUdAO#C7RqB702OS@QEjs35PX6sb7r4SH%N18dPZ41m4gY7T_eXFD/HqYm;fT1ajA?snX)A^mH4R"7r!+PEU-s.9p$J*%RK&n[bY_[7tQ@]9N?CQ[NYV</$,#Z282O)_;JI#d.%Lj!NB`cIa9kZ:#IC$tUV.s8eG=jMem2.,q86;6ZL(hM1H'BRj=4d0oA?;@Oi;G2Zb_E/t>;!/JMLOtk35'26Aph#90BX,bFBJGeP%gu>t&W5Y<Si1#MXoJWWE<g!Z6TffWHdplR'hift<IrB8_4JmmrJo1&uGq%D[_N^kp))o+amTqQ@!Z1JtGYuOm"sLg+D_b+n.mbnG%X4]Qc0;.m)ZU]rjoJ9p6B0L2a:0lt0GKq^^%rMB[@[Cm5f._iF0/SrWcQ/JgDPd+i2O>`ESX4P:/mWDSgp+E*O52d^,f)D"lK+!A%mug7L%KUc=be:<OaQu%7PNKoFM8ptV#AJHi_YQ('K)H[g*Ft064"?86X]gYJ-pL:RW-`9)ouZp6e=ra;Xn+b$[P-CsY6<5'r/X\A%1A1juengq)[u29'+Zf!\5DX<ZBK;E3b[8<n5&m\gLf&S>^MGU*ZpU$BjuHh\7]@BDe.q[g1Il7uX<K.BjSTf!6qM_'9\;)a>Sp0r%l9'i3da8W=7>JdFrQQlS5c.^i*OSU0L[-+l3/P#0h,)$JOZ)cL`"lbkHZ!;^=A@<`l%$,g4)O%FehQDD*N#a4Fl8k[SRX['1T[-J%)#<4;GKdOT>7&+$jZ-oir;Eu7S1YE:D6Tk[Scaol\5ne(T&*^BP8J<^pW"V_@Q2Sg-E4EprLbND5:tbkS&F(@VcNW8?7kci?:p"+%K(#<)VX3c^Xi";nU=2*aA>W7oS]3CHL5VMP39D,ANL$cEE_Ib0&=pu&&^n"7-Z%3/LW:0OA6eGPk8tZaU"rs3`CdIP](+eXa71G$%YO(cmVdgsg\2jN(]dgO!@a$kDjqnG#dQ,bg*Y#gG_S36D.9=&9'StGaH9,j(qI^.A&AXB@KCp$FRh0Zl#s]L!'BqB#8K-kT>)sr"%R,-+oX4Xb?eFF($6D::qf$O]P!J:eP9/%6_&uk\hi\4p[Ig4b:f=6s,81LP*Zk>.<\8IqsfH,r,%m`gSGkH_Al_Y?JkAX$U8INgZ%-Vg#+5#OgJRD8cJ._-4n5`:LR;$<8QnX9P22JgCghh2)ZWYjW(0SXU&QNoc]mik?C'ju%).U]MTQ"Pt]+u+^6aujX/@=-,B1=mo;%En%>+;^BVJm/BiNck%uS&^8HlAH",U=k-aIXlcal=1^^p4j"Ul8Z!9A],;F:7j:()ad4`;D_4.N:.g/oc]bR^(I6r3eeVXlHsp$P%nhVqnF'W2^*K=tR%j!eP15D%c]7\?/:CW`*LVUrgan&Glde@:FTI!.d$d5+WA<WF-e$g^YbM/7PNUn[RmLS-<b7$1mfer)G(mlgb%PWXZj!,9^NXC]>&?lS7+A_gLk$?#PKrBMd5$L]b:\keXOcX9QTb9k]Gla<4!V.OB``>Lps(q!=!3TUkl>NO"#9q9BeFZ^cu=&YYT%jndfQV@k+OI(CRlTSd)a,G?T&Ljg+S#^<>IZuC0[`0B_o_5:0("?K=J:<n:l.[YDhO`W<(V$sKfS:PK#8LA#MDQd>(>KNPK#:5F[%&CGSK:\V!62\PqPVqCRem.U6G<+UM]dOQ"[2j;=(VnmC'0(WQ9O[GQB_heC#_k'Eo&6_FH`_l:`$DOabVTCu5OU7bdgp9bje8V*)%a4d!u&Zs4RY\s\C$-<<CYUuL!QYc4`pCKlf"CX)@SqrJ)1t<5TFcnL1ip^0nGKMWqgsp.4]A:pfs.!olGS';g7e,NYUfROfO10sf%gl4OdH[7B(eSZ(oClY:Tn6P"`eKMXkX=%_dEl7e>V0o['c,D2?'76I'9T+->M/g%c.\:P4rO%Lff7&J(-6r3GeZ(MF5C?AC)Yj9"%>MIoD(<Idoq=9o;0D8BCoaBYM[hTFK._0)f?";g;/pEL`$B]0^,ZAK)Xk=q'5[Qd2hX^%k*pY)XpI&a-;bem&XIB:ZV#YV._<muV%,3G#!-JB;3q[f_\eYYk/Q^GB;HV@cH;IVb@W),WH^.(/gGqAad9Or$4F*"MUT;#K%f#g[fereebebS%!q!7K=BK3_L@QOYXrL*d9%7B]O7AFI1KN';D\Mh]OO%])lNmG!1q9l2DfoDT-UH0gfDd<0:r$R"uk8I7+sUZk2+;]LC]6-#srM^J#UAO^6$\B2eg^/WRe/$'o=%6Sgp^O*[h>jaM(P7d#N,e^P(`>:#?3[Ifher:I@>ja?O`?/=oVlO#G1dHpG%/'OMiU?00r@4G$jdG,IK,#cbMmL&!:`=<i.<mu[Q%X(bl;^9+7I1>ur6eT>7HR6<h_'l68o77\2s8jhWM#/e__#]=/*>aTqjOiFntb*h)ZJo9W(?M&*Mo>i]YGtc4ChieJ'rd2hi\-_<)%=u<VrPah66)0;#)2KisNhNs*okjI`@g#9;A*-6F0I-&,PR.#uK1$BMN@Uh@3c0W'm('o8`4L3Pe@p4$4PO4>+hVLI&;7dYU.T%%.%2$3%H2k5`c\?<;>/$Sj&]0:,R:$^66=m)^"e;:Q1WD.c9G<f3<+@UI(#`h*gSPDkiO^g@6VaI#u?[4]&;re,E=Qs4*W^"N>=:#e#%F1C3.0RmbkU5hLC;US_%RU%ZUQP=(HMH[a9MK,U&h4>R3"OFR=ZF!bKlO%M[[]ZhnChj&a;]W0QhI/krXsYG<pUs:997o7,QBJS2%G,mri[(!cV).;c0Rn:'Nj]H6_B;a9XiHA"$d<"4"g>F%&;Af/D[oVaj[rkL(9)@dY.$(IkoU$EMpS<f=hcnho#M#--eL"eaOr[2m%cKY!a_BjI^j]7n@#EWFgTa:+VQ]Ieps&#F4C)mNml.L;S8&dh)-Z.)l<$'LCKeGoBK@!I"5H.HAh1W66S5.$`j`sYp-g+A%chVmi%"mZlr<sK%_0,KRgq+,`YU[;Su9L>BJ^^jltft#fXGk=1>R9hsK;LqBkcEO0MN4t8.9o<u0lZd^1,B8AU!M+A'"uOOC`3fqoHT3&=%Y1rhrf9p+Tfft#)+#TO>DRUsJ/60]"[QqI&]nlQ4DQ1[hZn?,FQ.>;-"_EjPlU\?DlS:T=2^U3(!a>?_:*SL`%fd99mgr'dF]-._%K4d>5p!C)r:GXplHIZ<BdXX7<`:h"k]ZQCdq$cLUSM,%$6T'T*O)/ZTrE8T5)8qKU1c#@Q#Th372"Ln93gnph'A'd]6K(O2R@-0-%Y8-bY^\6VWLUC2RJiI;a)2FV:E]oi/Eo1)AD2u<F"NB7e(q8I[,%%W%==:pKWSU+o!Aj<9VUdK9Q.&HR-N0f^I1-tEJqnX`;h\%Z%ZC^>b,*M&-pV:YXpbR\*=C6TS9YKi0f7fTuQQc(5Ob.KT92:`IVP\X]!GQkAT)2dd0]rb@'>Ba'34CfO%Ukd_#G/PcH[<Su'QZog%LAR)t)=sWYJ^fQpBb#]VhSau,WJg7$MOs+':!Ya&2DkFo@LtdR%CKr=!bbn#q3W"gVIa3dS#*J[8;T@E;!DKqB?_-H9X,IL4,os*%g?Z"CE!B#^%G1e.bYXt<JL@aj%\hkR>3"FRb4ouNZk<$q_dMec`>V:@(HYsQCi@;qKk8P`Sp9rl\ea6ZE[4NF'_9]?B["1%qB"AZ%KUF'^lY16Sn,@Bln>jcMB2J49l$bBMF>!dR=m_g:'L5Hu0km1*je[($VBPf,Xgr4Yqr2qUaSB(KO9nD0;C-%9fOS$dnEhU.XP#''%!)R4)#V7F!Q)<^H)E8BHA^dM"(C_>Wi@r2"PRqc7l]=(g"%=?Mg/$!LP6_alTTRL=8aJfd?0q?o?Xdf>Ng2S8FF'Mb,Wuo<i=M"-%8%)h@4I/@)fMfX$p/=Am;^9@h-;L`CGA.@(cTQ[!/:jp4aYKNTH%dH*WnDZSk]\fAqGq/mTV8:_'I'q4lT6s#=ed>hL/=$OD:KrL%iq?B?EJdM;b]nnaA#`^/F?IRi(*\f2G.o(BGcA0q]dZAiaH*<u!C)LT_V#=Y'S@'5An-M$LPl[lLLW^7CR]'(U2,9sCNKe):n-:l%>+keK.$FnZ,dT0i8JfCUD+7tDMs91N<?eJ6LSujE`333=IXY:u#3;aP^MC5C'q'_1=ln&;Bq:#3`Xq(6q-5'q`8oT*+R`r]5U%Wg%W`&5VO@74NYXt-jSeM$2$<!#Np6bt7NYVj5kAp*:F1&?bhi4Tgc>T<[Ji9i]!V]$h>F?Z?XEFuUTXkB('rMXi^skga;7CZ'R/Z>6%[^B(Bk&7V2iMg>#+0qYPlI%EU.0rK,5:jgeaZ1pkaL9*V(7i=tS)A/W5aL#QqO,rq(bS>)oZUTs`t8B&5Ml%#SdsB8b<QE9>\6qX%Hr)r+j,pa&*n*0FVrcC$Xha[?]e2=%?<&n&gK&Q!R>\2uE,&(a2!Fc,?n2l%\OMed'dt3)cCBNbMCZVSMm`g!9\/R*6!kIGGo&@V%)#P=lDiJqLbQ?!]$9Fg?B##YXp/82EM+c$`b%KZck]Z'`%X)FfD%OT_9fd=W_$`!ZpqisLX/Fph%f*eah>%*5)TU[4\)E8N(jIt!%JQWhs%h""1K"GEZ3-AeM_@iiF;01iFM8%M>MK?EkR[;BI8$,T_F<=.C3DksGq>mSg\SQn>UFf@V0CK;]4:l\L8t[1UlDBYfSd,X1%U(B!LVI>K;Bo!L6?4fA5RfHp(8^a9/XB!p3Fg*PVT_d+B2Hj<$SPUBd3G-$1)!tC+:Kdr%]tFd;m"DdhGdabm4V9AN/]MJ+3g?=U%r[?J>"KWm;Hig+Fn#]lM6<["NXW$'qPOF?GDWC^;1n1n*)V']o4X32SoU;@9bgjcVpfaULC4T;$aqQV1gpW>-jBcqE,8nX9n[=R=%\$L&,7T(j^&QpH?Pg(CpjE81agZBMp/jOL1>[X)ZY)`^0K,CaE_2BL<0>c\f;qs1.#F9%HO<jG^AkD.VYp5Ya-@^YZ'1lp'*KQ2K%p&lM?gRFqj6rIdh+@sO"![J"`'*1q0q*:BC"PEYAHH>RO=W>C*ir394g^kjV(LjfaofCg3L%*h@n8/Ql!7Pnq&5GR#@G*t$e,G`"%gMA$<O0gL*5qC]:FscR^Z;)2%p#"bXD:+[C%TpU)6'CoT)rgtnZ-=_]&0A/ZaF]P?5sp#,hkamm=koP1^d;_Ke^Pq`1-)\1N88<Z%+XD97f!^3]?)%/+a:89;H=FDN+<H^e,Vo_]gHfFIX^"ngN%80bG8i`&+"Km:K2sXl'dVfC`o<%m"i9!:;k,EAo4RulZ[uSU[Lpcc%+Q2;:6he?cMHI?\-sAnV@TJSC*/b%i7X[b?YrR^,XWS04%t//X'a+fe%*f2HJ](K,=[CL,!Eqr(!43h-UVqkk:Fo0FFJU_`#*?dd%X():knhk=g!MVi#hpY'gpGQVQ&0c)l>W*,pJX=St"6&EX/B7r]7)I_q+;\KF&;QY_`:YApM#5u9JXeH_$,d;-9HXgJ2Mhg9iPM^[%))p>SDA.h1n_IsKb3m@plZ80<*4VD%8-?6l/JAC=-.M9u+J>s<f7[W9+jJF%AQ^r3ASrHCUYotk3S:Tf36Z1]LLZVrj7(U(JRB2"%gbo^@[C:^#C\fc:9[:'^`rlGm+UcIKJRhlNBF@uj&01W0P6hBE\4e"Y)18gE`f9PV0=EZf9MBB%^6Pu]C_I'c?>,?*"KmrIS_,8#%YG'#?njR22qFlNrlB?Pl\1oE;5[njP4s6Qr5eB%B(+hd[2hE!Q3VPWH(q_#_bNcZ:W(e[V5I5Wb9l5dCjs((]<8Bg#-I`UTP'edm%^UJU=UB'4\mdIS!52lJ8^&_%kO$2b8qd.!T[l)A!(46`V]r)Lu4E.Ml5DJ2BJ=MK0MDW8C!KlXUm9`^GW?UsubG5DF$NOFC!&SIj%]Zg#P!W6Usk>h&h+sLTLKG%>VO=nI,IdG-&?o\`r:(c.^7/"g+H!sD,I^9*AS&IojMlVfqBhm-XY]\dT6b#m,Vkc1N7bSWU=aFVX%T,nX`Z7#)TaR<D[C\0^agR_I9fY+ZV@@>+TA^"@c8tLDOb;Q^VXA&T,olSSiTpo<YXet08m5R5*dO[#rIB>>s07-7Z(lcAbM%]_`%5@5;dJfK/-&Kj15=KCMF[?_l_MP$KkY+4sO]n;A\Z'7W0@1Kqr.[Wb5:R?u?0]d,rN2!8&(q]&WS:JP`hS;jRT9r'd/7flY>f2jg%muaHnDp53Q#?se`HQUWaob[e[,rqeC,E3J5-D_ci=XG(;op@MZF\\nhmFqtVQVNULCSoTRVr'#kFS`Z]>GpA*[?Z'!/?Rc=;X8a,%;X=;UQDV@[m'Krl\8Tfb@,66X;t[kiPO^A4+8jNYqgM<nlJ;k57e75#@`RT/@c&EVY4u:_ML:uM,t6VX@smgY\LuULh$Wa0caS2K%acu9<=eKN7@?)(h#TIq?4?[F<gQ0S:#JjQFdq`I?:[q$cA?$eN7[^@^T9C`*A[FU"'BgI+ocQbQJ\u#Q$"c3X0T-h#,5sslqUrK4%DP/Q2.>pB7'S^FI:8sZq.G\)V6e+8rCmVK>%c4ebmS'd'S_("&!,K](AXlGE1>n?^?2B/+b878^)Fo&PK/rpgJ6n-M:guA=`OU31%B$Olobga#KF6a>Z!Z?1/<g,Og$WlP#cCJV#@ui.ae=j3em\PU^GIEqfA2hiAr+$fXEI$c%damkR2WrG<fSahI6FtP5EffeX*49sQ%=-2#p[S,W_AsICeJHh9%hcZuA1,W'e8-PE]C%8<uQp3p7Af?I6^'`fK.+*qYX'=:f=.rAH@BDKV:V=Gifp/<U51m:"i"i=$BB5'p%2^Z]9YaI<s1'g)I0NHf7!>#dSippgT5q(6'IanuMA)?P:fH^=,3\h-&(KmkN5Jh7Ienol;f\Mq9pGY#X_g_RH#/5P3-F\=$Z34fs%aCW%U%PbH9NuLaanGlH\I`3:#!UIoFY#(c&>BX4?>*3BSpOJArID>\j`-]Z6ZE9Ig'a`AjG)r*#%k6*4=A3mUg%UBKP]9/,&4gi/%,mn^foZ0,HJ%Z/;#YXlWW(6]^gWH\N73Elb(La5UoH`d-`LOj%PC,sI)s!gefiOMdSabEp0g'V`p#C@7Ni+hS_'SipKQhFMD7I&P%Ge(2MmoDQDcJ'b[Hq*CM>RBY2R"K"Qf;*G_peeCDKIh#%'1k5r-b#/I@gU8/aM-"`&3l#cK"[5m3uAkXS?c1a"o?:@d1*tW'u4;N%:IC[+rrQRr"X#/rOC+a:,I(e"-R0dk4SJ1WiH'5e9-*Pie.F!=FQY>I7*]kO28$'h!sGL58R'77#jX$$aoRfG4Zc5h5`21Y4Z5"1%O3bJ7NKH<@BpHr;I!S,*Uta]f+n+S8\jg8^SMTbIYNC:WN?Q#;UR[[F_c?9K>"aoJ!CTFfGf)1ri8)^:b+18DcJLl<[Q,dO'!iP-%`'bKO.SqE5F2Wga%YXAOb0g9"j?_oGX\<CE`dgH"-!P-!J6Xkr>P@QZKO<WYNh,0_+kr(12T\M7pgdu,bO@Qn2](GNp21\kmK)0&%_tb:<0lf*@Zj]5K7Q-G`4[qJ:8H</#OABE0O)MRVih8!0ig.825J+m&oEI'X^r8^WP.aJFM1@]]p61=qZ8^WK7NVNlfLA1e1IAk@%$u]Q<.j(WI0*hL$Nda4OHF(NCjm]c^$Z/U^R;K/9fdlmU\M5?*FFkA?M:Et#`-tHq([fUD,qccQ=ibNfhqPYlR$[Q=*O,'Y7sZA]%3am(Q[[J"%2Bn<Y]70kGlRcS:V!oihh/`p]b.3o:,:7rkn]4YWqUokOA-rhA5.*lsd"F?*+GEU;>=G(IZL'$VA[-?Mo!U[8&I)OA%@<8+,m,?tbE[3m3Th_)G#O$6urQScm?HO@g"i[X@cjJn@j<ij;TZFG,<XNT&`T>`e3b5G)_rRd,6oXIKZ2rhj.on'WC;9(O]cPW2%3YCs:g:L[%U:t<9SqFg^6'[Gc;d!=C3K=gN8`s^h$baJK-QNZ:P<KW,UoW$"q]QM34U7bi1o>k,Kp),1Rq&n&Jae2G5)C#9qWSG!%=KDGB"O`XlQR_#-.\HRn`i*+:UZakAJ]K8+Fi['*Am6Yb8^urP33d0g:UT%3\ZAu"&hV(0BLAgUjfSI5UqSrQb/rn0f[6VM-!9?G%]LKf9+)ql!V#2q0TM2:BA7:=\5e,Z)0aBh>Ug6LDQS*r0.c9,'QK8$$>:t4VG+]LQr3S/6W:7M[5YCLjcfRP04*XGN$9`[<)?;qq%\2F18+ZE!dXe>S$(PRX4CqIial@Aene][Qg;]RE8KnijEjn[D2T-sClor(X::Gp0ps0ZGV'[N/8bHR;Vgoql_p[#K)'_tf,Y%0s!%q*sI`>H(i@cLYRd@AXBU],rXuBhn&UK:bM&eq7a;QVg.o=X9XW@9gfV@'QmD6TYK%]*A\7o0$F*)nLgDk$)!$dHN'^YZLS,TXXGS%U.9ceDU?^r(CT'[l_dcFHd^Ai^6,3"$Puk9-BDui_qBS8]ju%>AebA*]%P(l%;BD:%$opZ?<!5uRLXE6>r:uhV088/lo*Kt%TJ3K%3RlA51_eg^k@rZcA2PgUHj:]c%8Soc%?jS;aI?W_B<%JcF2En_'.]/3n?3G$P71ct1h@nk<%A<5$;t4idM6-erU%Hg@EseD#*5F6%Z&B#?pQM^-XF<1?[hL#r]pitZ4L0.WA(kQ<fCPQ)Z@1j@r@W2aUl/$a@:e(2jsWGp1ma=P*6'$q__IT7Bp1R*ehAJ\@toh'2&>'V%fre4m*JO;$Hh-!"@nrnIL(k1Ti7!Z7Ptk$)ggD_Y-/G]OH;CsX%M"?<n9/6_/;KftW&i1q,_pPU?>',/p#KUE%'0+0EDQ:aS&E?$%n-i#Ef]++3lY,Zi`kdqS0J`eJ_\O;i2T"q@dpeXBN^r@F@>4ROo(R^K:VNcnB*X5QK'mG;Y[iOCI&!shDBSB3OV>cYi>I[b8W_aB%_/!-p`(YCcn5s6<k&3Ai/#c*/Dj=l-+T5kDiKVQ8D%<_nDW&\p%:fj1/VL\=B'mk5#D7`SIQfr]D48Rj'XWEo73n\'<h@"h9*.IP%Ro[..^\I3:AO4RcHHIQr/Nr-JamBVb;;Hi4R"T,/``KV=SQ%0/a#2bsd^`S27O$6#'j5uT@/A*ic^7?_KAF\r#Xe]QC$0-Q`E<9[%XI9O(qsN7+->tJKcgCLl9/rrG3BdHoTiV3:@&X['@k82_^YHB[Egc:#meP'\#K5E&P_@<_4%&&E:.2sQ0gh]s%jErEB[dTf:XR7'%Y3Zg"0TeN"YH0>bBe@/a_O[UO>iN'_g4LgcX#4CJW`Zr?%V=%._.D*=)$$]ELIg)C7`lMo9k\aX7,Rgo&We;"^Bh6)-ObZk(=W6C%:4\\2UH2*TXtA2%JBg\DFU@p?ZckDmi*1?9,-R$bPI".dY-6ru?Bo@un9XZI-RYgdqS<m[$nPJP'H9R]^?3FhXHiFFf),*Hp>gVi%C`L*Glt7S29LU<,Ya?;l)b"jXdG@t+$aR%!E$/"Y1'W`M^F_J+6;D:8N>PH%]G)X;2L-Y`36VQP`k(/Pab%S<f"B<Q&>eQ1%*msa%Y5$9Nc`l]p4*+/_\]s]$AYd-](?B"O)5eHZ\_J_h,7l<3.kbDX9>s#M)2[lk?\oYO-pVcFa)%I":5%cMXBMcd=acR$nH.8s4c8r9%=W'6<a8?"+PnD)dI9)e)bdK)*ThHCJULf2.Ko8'6-^4h%mQ8'b_4b8uAQDS1<#;aa61>D%M*,HE\%IJH.HB$daBbqeSoAq3DuXug%6"ptV^HJ@5$"M_UIliaRI@7&pPa:YrA#i^VE\:!d,i?)W:,_]fnBi`598?\fT"?BF>2>Hd!6qRTfCA,552:PROi?K)';(ng(8('A%*B()TXfU%@PiBb[oGAcDO0gmkFIRCo9Ist&ldVlp\6nK2_>C]HVRC7Kej-Cgb;G$1?MVi'k!I9Lk$Z4e`aS!JUY^o?5@XV<H66C`%0cXl4W,I"%E&,\*Rhq6Fco+On@@f2YQY9^r$?sPEXisC)hbTlHmq3HFd:Mdr2S+-D)-o?OUPnS4('jTEAX7l,aAS_rW1K,ZBB<&,%#9rD.::Ee+:(q[;hlZIlH+nT>e_D5%pKCiUD=Vs"$X$aQ]"A-dlbY<9G7W*[*C.bIP)R]Q5V+AFG'W8[oR=/O+Y9<[9'T,qkGUHp%n%_Wo24&O2XZtZ^*V24:ff9o-O^dR^f=:kdS(=&*@I5E^Q6,K)0ou']*:J%V&QKtC=>WD0_B=7$QF/m4JLL'0nT^sfdQQJMhD%;V%!\Ka_+B$@C$i5S!NP6RVFELI[5\)]60(3%/HBS))UQ9NkZk<$q_p%558@;+kEG^]`*?UntI]lk6"SmL&X^MLUkP[`kkM9RI!7U1(%54@o\gZRB%b+.>E^s2-"+j18lK'96&f#c_#h.gi*GIQ_;Q0jLqBd;e^;HoI943<!WcfOdo@UWuij7EgT[ct)2-(7h^H*]Tdgck1e%L:>M+_2cjR_p%<BnBCH.hi)\_hD'hke8fVUkBs<0)>;$E(jN^>PPUap)_uneYdt_#c/0On`*D'@hjoY?9$qDQm_n;p^AQf<kfn-n%Z=d3GMo#;&"&f[Chb(KPnok<_2r3li%]FLXk>t?Tf3%8*r`+_6qFu7*kH>ba08sWI&[+b+Y^/95hZ.7k)0RN$j]+/CrpCZ-Xt(lP%r7qCAUTZ\j"5,\&V=3>.p[M[@ptZENE35@ME8?qDLE_4'cbV8CHOPO?Od[Js>!GuM7[4XAe"r/tL<543^H4.*-'lIGgcmkqQc"/^%!A(:NBb'UI*kjb*_u%)nSfeR_M#0H-V=SogaDlFu&A?m#A4D)%Dg*=8oOU27q^Uoi2,dLXL6R-8.krI`":iNJ@B!s3F!PPi;W][B%@-MR*nBD]1dcAnEXATMa"?#2DQ:o!baO3C<-=)m"q0P1ea(I<F;+_>c)El86h=_e*5Q0'=]oQ02_C2=7pTh9]:;lE$*"mqnh!tZY%<n3]lG"5J@B_Agep>nKHLQkl)^`#';fO^[b!'eXW\mW!>G1kVcjH6j5*n,G-T%9L'n"$":'u?(3rgnZo)X-KEgJJ<TbW,#b:V@f&%Ft*&(C.W0,6JkYr_Cbmfk^bF[a]@UgZ5!.p3JIH?9;-"e2)p:2A#QHNVJ5[N,qIgjIAa".;<Tap@AT`b6Jm\i_eb%@kMm_hdqGqh%e*-NiClNo4e^iqIZ8?lg8Yc#C8HekX/JWW]fkIiW):tA>-<U#J\Z'niJ!0AN%P[EC^S5)S7D=k8(i;9sWMb;h-FY',Gd[kG)$@>@%YJaiIj^kZ.#A:LB*H`ok<AI?oLj#hj[638b+CmZe/PgR56]\A3l0aZ#l$fkukmiBS\[SIu50*I@7s@5'RG5"Kj"SWPRFBPH1VZe&%hU*@!>BnBU@#jZjE_\BP8\H*l70T-T]/s?.V`R[_;hs;oI\"r89Yae;_O]GB8jMsu^.V=rAGN6#m)K6>BO\QIj65nbF*,IHT@&]9%4#Yq:g6\QrTGU_ti25OlX1MZnH%7JrH#n*UU$\uFAY5g8Qg4j>+61/<QF4e=h0H(O4MtF[pW:$0h%-a'R.^j#rS.E&%D_OUc`B"8%b+2EC@;</(+$Xt2\q9lUX)npL\RX=ZGMCFaR!m<Ygs:!o5PM@NEr3B`4@(GS>S%eN+Jr3A49`V.<Uc6^1;*3%(l6jdO*X@kL_Z;2%ALg=KZX05JHkn%Z]"J7/A`,Zk=t?CIN:*[N^r`R$CH]bHRd8L$8*bGf1qhH`7]mP>7(ms$KYP:bfV>S&j_![.:I!ruB]fRTg.F7M%4*Pu$gYoGZ(V3G^GV%Ye@`R?AcEZOd9?@N/L)nIkb0N4O$.s:1!`Sg"AGJ,;:bt[IQ<57UB(mj1hn]k=IN-Kj>NfC+;(+R$c;L3S%mk!\>cD%L`mm?Br].fh'=&5(VfD"WB^o.t+H!5@^iE.H9[jKrd?<EQ*cU+.&+ME'e3$U8AD?I+QY99T;n[/mYfW4-%BVb`NT*rb-%1%q9ulID5j'*g^`<d_Usr%9(H`SG:1`'dcWO0%I8QknNPUlFp%>MBsUGpa-3aV_R`Jq1Fdm33:hG@qpkOUI7@=u81KR>d_3e;$SC%%%);?>N%pl(9;&$%iqs^%Nk&i'-(WX"<c6t(pjZYi3IACHU8$CS_`uBaKi$"[+[1,ro@b5/>N`U:N]7JGm!<tMe/,ak$[.R8BR="%r#nsRP+AUs)1u8@kO2O/bDZf#&1mGWkq`9$&!hd5qbdpp?*]pum_4s6LjW"@KRqI'oeYiLW6Kqb4kE!H$F]lUdGTrjW;`SRhH&Rs%LWA<s$lP88jjLsAF.FPtb@;CW6]')T,mQ5?iV:3@>tMs3U/hgtJTo%Y#.79m6N+'2h^Y]I7&q\7k$rZ`pH93*Uhe<u'eG'h.e@?3%#MJcs*!WltY&!pcmCeH^#!^^34EhDH'6e,:k_c<r`ITu>"/3?KRGRI*i?D*iX@>3P*80a.P6o;&3@oG5IgQYMCs*akQd&_agsh[g%#1^o1XW-RUIgSS@<m\[?L1^+sO`%Y\nAf#D%fI:RdPgKH^^Hs-p+FKedW-$`Xl;o"B0AuK<I*<i3V\e;5:.(^P^Rogq]KcT2o[3Z%FM9k9^ffT"IVobF&pAXCd/=cK-TUO0G"X0KF<nJ613!Vdo7@mcJ3n;t@4D"3iBG9SL=pARl0QM1p6V?IV!#/+%R7G/#?u;2f,e8P%2fG2n2MZnr?`>un`Fk"VN55[a'uYJtR;a-M]&h>rX]RF&1bnZV)ITQ#ha>dE^+SeMQ'E,'O8L,5Et>]-+$BcXr@76NpI`/F#br<0%d4k'QSBoiUT&Wp(K&YU0/'P>EhT'Y#.tG])a!\=g`5P$5NEHA`Z@/3R&_S2K7_^kT@#O_Um:,1(&qA-1f`c+H&`.E;<BM%piR-"R%9loni/6g+$JQf26_Gu2#rjegTWM$t*=BB7I!R71>;fN9C+Dst6[O@b27E6DC((XZj65\+mUaejOW1t4:`JfR_&'(C[9NYjAeZ)a*%U"pA_OrC+m*nQn5__nI#-YqXIG0X4`cf`=Ih;m;QrKi$0<o8DiGMdoG0Ah5b3;Ik";uYPC*o?pCrn!des8Cp21UXR(@ju$/YN!9W%)sE?8-.nFn0_iI^cOX8C0$N2!&GI,GrOJrH#N?YIqaRFOg+6iuhAb?T<5$)tP0o%7;[m@U,ZYi15*;K7H1]J+W5?j'9qZJJ3FkUC%-ZKtR'U^DpVjn1"OphJl0*K%BN?TY"$<R(3&V:PYn-295-]Y1I7P]H`.j$#0&G7`R8Ut@\Fa"Bg3@SB]jM=b&J$u$,'f?!pC+@-$%F*L3q6gIt$Q623"+%a%if$eGc0agEbVI#:%OZ&?!kg@oLjB7m'qdG."dL0/h@kK`M#nro::mDR'1l%fI6nCq'SNHb.ZEauUQ-Epp%&#;YX-o?Pa94GR3OL%$+Vm73RdkE%X49r[5SHu7Y5TGr1VXoc^e-g!WS*k_r[*]H`"nJC(8X!AXTmUL<q#o52d>&9YggPbK;joKS%'XE#h)Uh#8#kf3A3.)r=*Mu4-(O@VbA;h-gQ-LI+R?-&U(b?fr2BWelr#@MLUl1@dZk7/])`%/aK$$@cNBi%\aM7fkHEmZp$c2<(%d-;N<h+<,RX:5`<j8`YuZ[`*1M-3_-^^US*]J(\4Z9W4Tc]Xqt$]MtBqf!D;9;+'+a4pFWN=FCT_2cOb3_.bnUb!hApG#)PSj`jJ%&VHqd?:KJ4Pbdj.N8X>0/?_eh>YsfTQ5*9@$A1p%s(*S2-^,<mWTKfD;WH@BRHnX/CE.&2jHPijNZo.8>?W,[Xbk&,ANCX;9puK#%$pBfbTS%krYQbJX*!lEQ`HM`_i$om&&IA>%QkrE3>S)=OCJpRg7UleLk$`D'0Q*2`"dATr`9'?D+!opH+R-%RN$N>2+sN)i&sVH(%l5\kra9&5#`ssf".-*hbgrld(bk%cb3u*%7>B2,a)E?lCmQ,B"U"g-\HD*.1-;ZnNK<6[S6TH8[Z"MAE*CrY[r2F>oc/0[=eg12h%(g[`H8[EX'jr.ADMe"$/0Yu4SY"M$$VMNu<6kC_>#E3eoBj#D60*K5!'!%U)LfRAD0EYl/=Q`C^Tu?R8a"G/9!9p%^G#'N6^fX`/%ITtbcCjJD;R>i&g+?RSWK_QueW6nW(#Vu7M?t2%$.e(;?L!(ZqJ9i5$F997,&+Qo#AN.6)-i3A=7ql'P)J)Bm5h-D,ltQn<qs[]h%4ZZtAJ/5n-:J:(_Ys-=GNS.3ZMPXN8(kgrDXK'2m5;Q(;*5"Q1`R73G^h3s'BPE1jh*k,NWqX\)nXte1KmT#J6)H_O9d'4t-[tM]%&?gsR2l+hf4s*t=59*^YE\Lg%[G&^tYllm[qcQW#*j1GsB<>U-]3pJ1jL;sJ!O'8:eB82i4;^n8N,'LuU12JC5..X+O5Z>i.OJMA%r>E?R426brM;^+3@Bao42\8BN<M!?L7)^?*mm(ZY&sF#;a`-MRV9EE%Kue)tO(@?sTHbGpQ;G=0eq.Y=IB_r3BTEum,.52kMp*.3%67jXdn]n5:G^r'(5=AqSlmVoMNJAu\P]I@GOoh\uVklI5Ku$%1Ga,\3@3qb\KQ!+,i4'8C$Wa\":bIBD90%fQafrZ%.9Pl7Qe:7+%4J288>u4?[?0i3Y>+)6l8u*,h<8+F;'[VJj7oI<jTaLJG\0\@udm9'=LiIePbOTS.Hqbjf#03T1\O(pO1;03UDQgMhS/T(6dt^:Q%;?fLnB6YaW>_bRoG`E`1%+HdK_V!:GA[Mu8glmN95&[MNh?h9PZgn#N'$F5Fh@HEX+<DJBOQ&a9KGG1C1Ij!gCS;lfQ%*m-k:3\=%2uStXmnk#d10H2he%H2\/tTcV+tK3(Aaupb%R9r#q9([8!0878Je*Vs)0<#.A!hJaM\nu6Adpj8#&\O%KK'SK*d[=B4cJ3U(qbO<%Yq@pu'&d4gRT'u*6Sagkf_I*+U*<afL#F?6<&BR;IaO!t(70hc&^so:&Ml;7Ln%+.`8D9Pdpn<'K,bK00dOUb-*<?S_VfsC>+di3%5^?C((0@<*F=RbO;JB-c>Cb"d#DFC8`mMV%F/lOH4>BQ+EN2u"W-!Z-=VRj<MjQ^7[<R_-%X(5FF>INbEu7$_;H90nel96ckn-7C%^)^tt:gJR-D7RP&"uVYbHPCY5Z%Qa%k\-J8@U^!X+1mgd.9d`42d3IC2QZ6V(s<o/nf?GR6Yq8E4(3mX*+k^k&(7\i=TJd[c]/eq%:aRmQ]TDXR0qtGc1ZcL^B5%kC3c*8.lRGbAH\n<Nipo@:fOK0Rp*VoeLa;uJG_'F/i%shHJMh%]EZ6ZN_]S#52-t7Ck(SFJWC&$q%B%OE[s8%Gf3mp]YU`nu+;Z<@3%R[tQZ-uE3dZ)sQ^<ZR:Qj6"TdX%>/2-r^0BT'=DlHEJ)c6ZLaK^@0]?@iR\VYMe*(\_<MA"pNk%^W,%u>>1C(E($VEWCmQS4o*K;`J=m;9*0="A2+-Rgh.N<>]cJ?_V7!_KsG776+DIAQ&tP&;E+p)Z8:Nf9Y\Ot<!XEI&uhk[?2+_%%6qOkHg*)7rY$SrD1M=Elrg\-$EaWBIL*08P06\K'$9m2](6*V;'7FqSEjn6[njKb"K2TE=@\(WU7aP:/5<K83Tra>4m8@q;Q;'-V%7OlS)oF(l@n8P!l#b>NI!`PXFdiL'/^0RL](3,mnU@.Q-Lr:UL'[&&a'X8.E8%JsM6=i]GdNVg?5m]d9dORnO80$kt<FlgE,/360%-7ikp^$*Q0SJ;I:Y2)[gYJE7nFp`mUra4?!-O;m8@V%rVY^urT+Fqk,!le_m)^'2`.lgDWC*\57SG3l<!,.OR1>oJeq9B_s>l*pi%fSEG?Zbk%&<U^J5AW$u5`%7*F,o1.E3bMH]_d5%A'Q$.HRNV_2g^Yb?C:"DbH)8\XPW;08;a:e(!OM.h]Ob((D_:3MQAu<*m'7<@%9FG@O$E+7Aj(;l$B5B@=Cuj<f:<-m;Gbq)[S"nJ&['+jVF04dXNb@Q@U:S$bi,HBnI,3131`jhOp)YLE*V>R`\Nt9(_EJr_A;nEh%c6fD4lWH.s3ZnMj`&RfYX+"+S1FWS[)tL>2405UL0sa5pU^3B?!:c^=OA2T;-B62lq3#QG-tppYS"NQM17=J'#MX9Tjo"uHgT^W\%jR?#D'T](d=$1(1_IKFd's-n<l(jP>E2TS-Ws+bTV>u.W4D-7"')[DQj^FP$YK<hp<W;!i`ks)BVToSq#fbWm6(XY9ARk&qF\&jM%(?eu`>:ae+jj8UM<6TWeOlr0eV*_pXh#=?RF"=a@<(2m,f:WCPXNOP]/kh.Ieo%%DB8+[2I<OV?Z48rDo\S8ffK#WaV0Hh?7J)NA%Y=1g&,IrAu5VFqA@bQkeP>M6;=f-.<1>e#kj"F=c+2eY+a(-'e]U4V$oAWhbCJ+o;%0OJ3.so0a0Fs#p0GmpfLqP_U#a:YE%83r$%,Ia?#0M9[Bb1X!EMlBcq](p2g22b6(\QoSjYd6?7`,+hM@HY,k7V+4^%ND@fm72c`gIOE>G7<%HHITMH_[61XPg>B;[]PM_[UTeM%C=YkERWU:tJO&GU\4%N0TKDJ%J\W,nZ"5&[>0?n7)9=!@.=)Rck=`d(90g/E7OO)=.QIO>=47JkK,mBsn'4Smr-%P;`thD9O_hU3%!q9%<&V-[nAe2!XJ>?+AjV!*>AenH.!g#6G7QghBnAQ#j%bUpQlZ%-/6_k7>1]2O'4p`/D`e5D7%6M/_M-OU*o^"[SB:]g0Njm^X%ZJs)d?=K\K)f,Y7Q/&;s"Qp35-eG0dnk_4h*_>c\3dai5<!c2+l7a/^ZSPp`htO/k1Gssrp=gUY/;o#(UUu."XWhd!.*36G%IgLE%dN'K?L.*hpG!/lDO+MIl(q.)s2pu)-I[16UereS@Wr#1H5Z$"2FO/.r"U!O`=%Xa8)oRW;U4Wf-fUMGClZONR&lR),c6naue3EGX%.^9tPd24_nG"g%lnW[d#T4g6rVWn>WOi5$J9:5T=\3b;gRN)fO/-rM$JdK?<>IMK4XW/i"1L]@?;j`sb^GF!#mR7gpbfE^_!>O9u%aXeL0.bKP4V_G3f[2LNZ7n'l'%iG3@BNN5NQj-kcC=&Uf@*?t4&GWY9>(M[?X9*fBGp*SLc]%$U`hLMV;h5fjnYg9*3JF:BF200R%\=@OK9]fe^8t5B_lY\qmbSgW07eMCRZqP`/6l>j,/RuO1,5'SCoJm=,L03R+NDrj+V]e<U4S&97s!.jK,0q,FL?VL[!ocsa,#"gr%QbAD61$uNiWl*-7iJSK:CM<_\Ta_D6\hLd78#MKds4FVKRhZEnijr6/.i]PQ9=M6b<]E.699D(^S3s_"mU5.=lcfYTp6dYT@G%4X%c:FT;-=Z`%Z/@Xd/9jGT'Y>rAbdA#+nnT"'@-4n+f<T\t<],i2eA2qEh:`3fgmF5XX-X(GRL/RbeG^@I^RP]WK;ZcJRc_")KW@cA%=S=f\YgY^Tm!"7>cQg$aZCPlAg[?,fm<8d[dgaLV@$V=.QJiC4">G.J/]sH:@7nNJ$VjY0]fj`nPqW=N>"Q2m.?4L/R+O!eWL0P/%>KOc(89!3*ouIp1\gM>A50WPbYKmdi2p--nO5r?:a8BA/K,oufbY%_b+o'MNYJFGgDH?JT%%fQuL!MP24R[<t(#^t?p:/o(bja5Z%41ooP/i^drPPYBQRGmE)ki(3dRHY15bk'#LR4$s\>W^9U#<Qb^0OpTh\s^AP^.Yo'CQ<7(*_IljfqolB)f9PP>e0QIOEG@A(W^Wb%a$2\pH)*,_;m!e<426K]C4F*[27'p^OX-uX^)71$bB>2bN)T;U_&D>6a\Ql1Dhi/K3S8UiL;U^;Z-GFP_5Z;'fbWO4N._u&b`@!]%#*<CXh=&PkWA0S6'DTeqd"Z(kKm[Jb9UNCr4_,$*QK!4+`&i$KptP;6bO@3hk:7%FIa[hm=Nh9T)EZ/oPeH<FUu4j/Q$WJ\KXmKT%c\H*lT[V<4]egPfSJaKWq9iM]TXL-Dj.\p79=)P&V7A9:aBU$:)o)_O9)be-@0M990'B2OcFJ=a4tk0"`Jq:j]oOhkE3GS-[U,CC%Z<s%@AhVEmM3/eTV&>(OZHc*!Yb:l^]emVm\3=NSi_)(^ah1pIV7FsVbaaF_dL7I\D7Fqa'9-Z!^PL'ors-$i5CXX,_,m5As(41d%je'5/";J#onW;Tl!*,j6Y6\^@mr6cfQ85r_9cegTUXJ.G\JYA+X`pf`#ma*8qT=_Lhr(dB?S9\5H6&E&OROHX<=88p&P\M"p0eE[%qT`dLcG(#ESoC2n9_M8?FK^!N@.o*F/E!QgrE1BHZjD4:#1,NqE&Pg/V2V!98Tk;$-cJL/[U6[a#R(7Er?#qY4qP4JIDSTb@;ob'%JtEtP+,-RalZ3p@)qhaj?:(QB?d)jd'uAWAHHM+:e$X+c@fc<QqN9dj@a`g(Q]:j\gV9=EI,sCGlN?a!r-/S\$dgS%oO&+OWt2'=%`6fHSeb4MLKXq&t;(X"^"9^`g%:`BFX)JiEQNu#\@c"_c=\e5u=P_?&=C_R>UC!GRTeT51$6U(K*J3Y[G>s\3'60cu>A0[63#IrO%Xle.?]?Hde9\)+'kWaVtkc'LonKJ%mC!%ij&UJY)^m)fo!MiIu,SSuE"plh8cVP(^>4jA["9A%RO@1f[*s&+R.&+Bmnd.PAB.Eq>%4Et#$$E'X9-99*M@IE@n=%]s%^t/Pkk%^mB$\Gt)DBCePeL_X,LO'irY93+J%)e[r$:=2Kf[ZDW%N>X+![*F8K4@%3?b[_3k\2"Q%3&l]u`f\_Pcr<mS"PF@W]h*SM0#9=_kG0>H*!Ue@hW2to2GRj/pJc8^G]HU9SuNd@j,Q?mhFj7q+J;BaE]S&bmi^VQL1\IKXC&VB%Q]J[\&#:$j>hLJ9>R[YcpqT"jA\@HbJ15B*%/@&IJ.G&aE"R^uUcpT%9bYQ-j:a'@'MBB75,d"H3HY&;M\0F'oZqKXAK(\_Ne"*b%$&!9=VID<e<@.o,#_;JK*hYaXo8fnl80cAa`KO(V4sCTTjW%`,+[aJrp7L3M@)_Ai@g>9)b]8n(!s"7\Z^%5c[IWl([XdPh<OS#N%^m=M4A>:.[o*uNOa98:iQ3A43*(i?,=X>sh+?8dtA2k6#^pR3$q6"6Y;t%VN:ud*^ot15&FjJ/l,_sGC6UR]=4im`p0V_f(N^C,s%-olum6A7qc_CVZ8<MYK119ETh&Z%%ur:inaML]N+0`"T6Wia4di;b6UVoa`Z<sS)#Se"cd^h+4PRF,6hZ(=)!DUq0];jcpfH@-G.%![ABL0>NtYIh-cXH.L/5G6#s8fsmUjhNpGMl2?+D)_i=+6dU_o8qZ,#2<8FR[SS@ZWR\a9q_'j[io7bdVQ?7LD^a8#Aq%h:$=?%"%Mp-9O)2Un7_+UB?_hBPQ%VeTk4Qg.oqG8\gWBYR+iWP`lX]Q6)Wj>A*XK$B"O"bu9IkPnua^bs=XA$]_OVY6b=.'U*=]FCr,3^il%$Q9ZRKl!^ur,/Z_qq_1U(6E$46_b7[%_^:ts5NEs"St4VTZQ-pG"Y7%_j>>&OVcAuI<_j7GoC"-[!TQB&5^57&,_S67'A>HE>[;'%^HuCm2%I/q]YkBI5u'N5HA/JHrVH:g,(tfaRTkRH.(mF#"4'3h7t_<3ja>TfE(EfRWpajbL'2uJ%YKVM_DcT2^.*OjY`S<kXDVo_%`rBg1DS$tJ(;g\F7SQ,V(_dQ_8)l8*Pn-Bj&-Uc!b+T3tF4f,Ek2Q:&)FT-kDf-:!0u$QG2Vm#@_e`-k?\eXHbI/@0DF?PD\NO_+%@f2f@)\5[6E9BU(-a9E305T7JL;U;l?5PLj)oDUA&0\Z(UrUol?JhSV6Mj.S>5^m##JI?PV@'m:VJ':XMSJ`L*i,C+(\VDLc5ON7%0VtB>qBWuZZ%fD'qn`h+S_q/u?@Am=7W<b`Yns%`.52!',Gd+ea()hh;=9m>Ql?_3X]Fn1p;Q2t='La]G&,=*YSV@KR2?-N/Y;`W%A&]/lb@YhrRA2R0NATD.Xp:2NaKLWEdV/mV=#/I'pR6_Nfg:XYI;oG6]ge0O5PD^"ngDiP(nQ.H<J)#`bZEkH>!<33q$PU6]1-SQ%&7kDcs0>VYHOO(coRc2FNNGW3=LN_e('[AlDjXl2$uR6Z1/,&dSlXdL./'*5=n'L8`!]cg\M0gZDmil,JK)FsS'FKXr;ag!N[MG>%HT('oC<"kJpf,U#5tas6&"34YLW9m'UkY*2'b]SYGS$Z!^ihH7_denGrA!CK2mnb9FQm;p2V0E.#r$Xkm^sKAK9XEY@:r+K<oh\X%$cWljrPDZB/BNl*[jiGI(rqN=1@BK4h`3ug!C!XZ;XL'i/Eh<@K05CUEM#a?Brn\o\g-K*B,7_4e$%m[G(*U9R5A8[:B'UB]Y`6<%SP1N`r0j23jYM:s<uXU6,j'12(q^"ZC@Sh*%U+/7no%r:q(/]+G1fUf2_)sVoNU0.`Z\Z$<h][`)`IsOA6HRe1D$.`b]rC,'ulH&%)uI8PDLM![h+SnuETS>o9[3dB)uH:h$1mQ]F`6b)]oPT1.1GZTmY!2D.P(.F/[o0g>L^Rsp[RofGY;nkQ]q[TRHoh3>?NkGU<8M[%+mIg2\,1F?gKSZ,('VDr4*!i-m:c;>d"@kumG5pe^VnoGM_^j9`7t^dZ+Rq[&3Tl4W`R>mcqf]\4$TTpmFt31HJ\X*Y^JZCM?bEU%HB%=hM>QZJls*B^7RI]FQe7`#T%bd^.rj&0n7$fHb71q:;@Ut3G)W<iV-KjPZ,hpe1+Z*tr=p_IN710iB\JBV1(mM%@@#)hcp_2g%NZJSj5.WI\E%(Whi,^>fKI<5RZ-ul^bJF^(9YD_qbO1\QD_*D]$&H8R\o%LX*m4pY`DrE?Y;"k+(A03Kq.@TDaMDc!b^oPAj_e4\%E+<dgnXH8L2in`2T[hm9MlqJQ/=YI7Frni$?gn5S^fZP:\T/A>SEI,\drg-Xr[fGSMO!fQ6sZdL-`$0$%f:3IJ5fFSL],t/f_V_F%jB.YP`R?U@T.X\Fa_nHWNBEROJgpZHI=%W81>K@SK=RPlDn3fi0UtQ&:1rI\ILPU\Lib<bk(@[+IK@Ga1JNK,F._*kI>,AmF$-c!%V=Ni%%WbPgAu1!6D11n]V@hth%)-gH<dVt^Kp>+5_j5mP:9/1c1eT&UaO.:5G(u9EQ)<^$Jo-M:?qZPJDt29K37a1]Nqf/D/>08s%C+n6-l-$BD.SI<&N=3(D2n=2D1CrET<2g(qQl9bMZ;VTh=dO"/G9;?FRsYCb%=o"`D(W8$AM`o:c$kW6OeEIUpmoGt=2DV)9u0:t%,S6D=.8:JI#2i`V2bl&%g"pl-_A@LVi?MZmTrtP]DZZ$m1THnqJKbFqI5hLd86?',Z0,+"F"0,6MmA2)LmB/<mDWe)Q%G%:P.`!d%)d>6rj]Y-^(<4$-7?N;6(la08o:RBOoHIV.5`VL:GBs,3bu<iBDO$"4'7^4NO5#KdmV(Q;(6LN:_ddakXK;hb[V0h[<El:ej\du,%Z_t_!6gOl;Q,CS(*[>'E5X3JH5gn/n*AKL-[JKA01'Met&<ef3$#7l)U_P1K7*D7uak\EWeLq(m2>.D>3)1pYHnq8VL8R_i2ofj\%$,-;l=4dmH=JN1Z3TIr0fu;cUaDMshf$'A'gU<7_ZX)QV^=3*7XuAg.K'sYR"n?L1W-h;"gC#K>"QdOU@R$"a%(,cMPE08kWBN$Q%HY#3;:QlUrh(KdCdV8'BgmW&+^kMEF4ifNggt5eaKe4L2ZX%[Ik`!=aVqT`CFLT-D)/6>s*TkSATG3-oX'eV'P1`7Ua.'*L=\q"L%8g/W80ceXL'$eJA^;R^bXnl(65M(JZKb3YRH!bZM^76Mj6,IL"1@MQLJ2H@f<r!kNW@uJ]H=P-_IsPItIE$5"q.Hdh!PXMB/"EMm%A]i&+&d*"[6N%%An82,'6-`Y>fUg"#BZ`PFDf,*IimB[S-HX=sVep<fS+=<&rKFC@kM9;o;`.J!cVsenAiAf&C]F)Cp-OQDjJ*(T%rg#\X?f)cBOP*`EUt7@(5#G=8j>ae*:4QIEI9i?MU)T)AH#GaZ^,B8YDG:AA9+s@89_[).Biqh%F(rLPnmr5B%A`QB>+KQqp=rXR%\Y!R'o9^lt$M(m4omDIATjd"Z$mGF>'@rGoY8]QEeXbt&]rt*NZ5_8Dm)"F9m0^6l(nZlNU>S2X6bjX%\"tb<^+$SYKPQ@CQt3nd%7P]a9)[%>hPjIKX[VZRLj3CcpQe8`4\DP$9NX^Tsr]1!:bgFe+gFMV@LER["Za[MUqSGqc36[EI6?b;6`oIG2oVCD@BkA95\pGfU%_sF_TEZEP^rY86!a)m0(5Ot>m7G;]?V_mt5Qg2n-%R<btqik-iom4"q(5oh#Bnu&Mj2TXo/8Um*7B7ESq0U,#:2,_&je#9ubU/dL%QDZR:bkJ#V8Aj?[@7$]089=Tm6'fPJe%=5_cOnAEPW8S,c/"7'qc7K&m@aGN$8*bh._!m-q3W<u[,T#a)]a+SL^Crd>JJ)2DkV+1%rYfk=]Z9RMqeCk]LG<9H*Jo,ZmI%fLlJN\bW0L)j$2u!c8rL]OduC'A]+mFuj<.lLJIX[S##+WrQbVF0m,.%Zn6kQ6O<_j"BkA>4%%n&nhWI,X07,Mb(GWc7[>q;P^>nO5W'g9!+nR2&-Ls\Aj40C]@F*n<jWMfP]7EIL>;r@]%&pe6YU-\)cO<(7[<91BBN^YZn3_o'C%HQqbrnEU^78q`3`-bZ=IEs3B3EnbjH0"B;ENH"5b8F4o.&@%d#=#4[sSs.L3VdP2!SV%7o7pS-rd8qsE'UFA'N<OkW_j6H8$V":`%P]g"AQnOhH`,Qjhh`UX=YqSG%lMB($LbUK3_r,W;H%`iG>^q*/?X]SW(49iLVjGs9RnEEIbF,MI/I+7MMoV.?Ej2CM+A^'WS>OO3%1b[Xuql(XqG-J*\Hl;jcSVR5lGi&JqZ^_!<gtd7aX-d)!h#8jW2&?>.[Of,#YRcL8]L]j'=OU*(`E*TdBPJ[*i&Aa`i*qP=d+_1*%Gd+@rq=WLW`iOX\`Ym<8-'co!5l^?\PC_:n:":^Dr,e-V9%)%t1'`$I#Pl@:h(np\m)*=)DEbl,M&+cHZ.o]pF/,t4NN_At'BIpc%OCNOes8DUpAV.EC%q0'FSC>Ci4Q<Y)<b&VMF!s1/(NKUO9g^:U#9bZjjCW3:(#M<FkaNc]f#'[A%\J.ql7qAs>=G]+VHmA-j#$tf%)$U)Fp-JBX/gua2&T!EP%/:;nDfVm`Zhq$4hrufj#9:fPgZY*T%u2<3'R&8h='Z!1-b1o!*]Gi%L"*8/Mq';XA04`1+`q]+B2K[Y%1Kk?2W([NeNfI*o"M38BWI(i57crkQlr?3Y<bioCM+/IDh*$9A.f^qo&/WN5,Y#X5L!6es#<Y!^nO?\b$P'O8r%#-8Ri!n,;3??Z%nNebTG[-Xlhh(DX`iT%B_J"i/H<B*B/fCD]USU89/7DA;Qpk.93ifXjO;S?ZR:%.m5\ld#c7e$lXO)+E@7]*X422RHJ'#[2bQ9tm%+,k4+TO,RR4Rnm2QZ`:hOSZ(c\eMGqXRmVdBge7^<d)Wf'/F&$b<)u5nsGCS@L"ohJS"X2?L=33P4r(_!XaRrkVqWN[>4J`ZQYel%So^s/>6*%He=98Sb$3dg^G$#E7^p'7=(7J^=C,p((#l4bf2,H1i:Y80(s7PU553U9lk(nU1[-d'=4j+4>D^q4+P--4,'^7Y)gL'r%cj*]3nm0-(:,:"pa+>nqM3G-!ARrM=O29Gu;OX`F_L>.-(QWtchQIe&!AXGTC+)$M2\*I#mZEY4<rLm,-`tq>Qf"@1J8g6VB2oG;%<Fb=f*tq#0bG9A?Xs8sWC_%J@!^eeH6_GNBo5on>D$U[5.obErYjGja@s+o8\U_[/KYKW.16hHRrpIXBmJ_(WGh*[4"TsP\4S1Ho%fFLEA5)j^5RaSX6pk?`8R-[KipT;ch*J!ZcM8+)X86UZM%G%&hU8ZX#!YEn%;aSijBF-HcD<t:/*d]Hj!hMoAFoS%BJW$'L#G]_)%/q39ioYI\H-7CD]nA0!\=+b'1LPCm`3!b78lt1NHn`<M+IX&>E8/:rLJ%IBee;))%Sg`!5hXT*'BoFO,TbJO&(X8j'b>1utMS#Q)%+<r@+eCj)JB2pKG(i'1/S!1aYig:Vt[)!%'M]uh+NJte^Lt4j8oqtfq6jG+d!8$tK*:a"!EH1u9>41i:jGaT@iMQU!lgTp;It#'/%cCb%&qp2AVeS`=R>H@_sh2M#%O:KL'mCu`/XkIteGrkWup\9WXR[s4]*,,H(H4%gBYh27\RJ+rA%6LZZ7"`Shk\pBepfQTLfL:Eh%5_62M.";jEU?<[8"B1S>'NJTDM(jK7-dtOaMh.-(>UpM%Xo`!P64&Fingh'0@)'QA(r9+/LMN;h6MOSSA8n!YWtQMJ.PF_7(qpa?%=BbA\4f\8?^W3@iISASG?_1[^DS!5kEo#NRY#_PoZ^8cYik#RJ:Y+_(jp?]DT_Z-7UTCFO)^Tp8=Hs)fX2%4B(20]<2n>"Yq]]([%@1(D7kXXUR^kfq1ar8LV"sil8l").l_Qjs6UKRO"(L<?Z$!%t!Z$/G;18Fn9^.rL4'c(8$%r`l"!"X,nbbN.:eX3(9ju-[[FGM)F%=Z<r#42:-XKZ`LAA;oL!O>\[h7e1o1/$Z#Y4;g,US5_>!Gn)j"BGAEjX]bgA[Oh!&#jkC-,Adj[]=<d?+FJ#@4>g%1)d3qCl8IHA%M_Z8_jF`In+W$9.AVdo'1!<&M>%MENNhhepkS'R3#o]O3%sOZd'g*EF#Bf+KX7>2U*omju>!4?bIX6V"2;6;fnFqW6lAV`onnW@m%DieJ*?h;1[/Db7-o6f-2,IWs\dYb5Get/C-SXm[Q0N9ms7H(FXg<Z2n0E"-QeJoEkc38JiS($#mE<@94>UGAcZQ)<P=oD)4SjHp"%Nu<ZrBfQV#Ep@+d#ZEP_3`B+F6$i=m_!4$YZN2B5"m-:O<]EF=Cf.keL,#u[;Gf=Qlj;N*GX<N2(^OVN=K;^q;t`QFl:$%q2R8Yg%[<7jCj$JpZo^NbcJTj=UmMtY!L1lOA'%b8SM$P(K2SB\/<ZoM_P$b7@hdr$F,k6[FqVI&'Jm@5;)5k!9N1[9A):tEV/^?I'?i96Q%\%)?N77hILaWkRY4VlVBAj*8E3SuoF#9eg]Za7P4lZl6):aIcLrG7T'7:pN2[%s^80#]&^7@7LVEQDdT0."!IE05D:_B4mW,@/0Y%\^S0JPpKQ52T@Jf?pI,#0e!hICI;[5GaaT67I:bX'u#4Zn4:(ABa=[I=P(ZOg]eU.$p&m"h?Fl%0Nt]30\lpEHIY+<`0bn1hMT`L%HF18-/6mt+8(%*Q`,*3KSIsN(MKMrU"V,_e?3WY9>Q_/mmL"/^P^j"'&3R?[ACHd\N:LAE>b!,**4!mr1sA#4Xq;E[Vse$u/AW"R%`A/iR0W^NVCKRJ+_gGCjaN.ZP=VM4aLr$Pm.W__`L3*fLf^jI;[NWimM\u!d"K#UCf>up?\D#U-O?C0]MZ?23[B9-hH"8M)a0b'o%a]F)Sk7D=eG7TNh_$Acg_((5+d4h`aa3og>\2]N\D-:$pU9[lq04P,?QnNKE61:TpC0V'=O??Lr?l'hGLS3"fXrUM/)%*mna9G:;%$Q5nQ`bK'fjL)inWYUj_9o&Yegd4gj7T%asF3HD7]%o'k@>m:fWl(e\gYYA?W.2O_SC]n<JRZL"F-!jSC(<LDH,e5aJ<Z.d:1BK_%E_`df1K<1BlS>EiQ@$;%*n5:Ab*K.G!=A'9"k<q@iqNrG'WfA<9-a757927s&`cnEpZI_$4?.rpOeh=K*g,_=h:"`;_d;b33A&dC%$fqsPoEB4n>Xr?3\,EkNY8@s:<VPok19"G3<@V-kAVo&3(+V"$l0)5h'kl8]eqKKOFg.WND/AN?7'KEj`r\TNbgE[t&26'YMgJ8u%5=ZoZI3dOWai]3r.:Q#g%cP=M*Pd#iS.O>2\Zrj+>FJfQad`a6A9'i$oQ&jD12bQuCM!.FAb`,`-c7l[DAg1QG>%*nj\CO`<cF%W%>?j\<;qL2koA$!t43t\Y&,YTC:;9t0)OuNPaBD?"C!f^PCLbZah"D1;1V-:%.V.oPTdrj]74nkWXqsrXj_GRhnZ;$6Kjqu7"a,rM%eSY\]+s//dg-k$`oF0EcTUuNp4S*Q&n5WV>l\Z_/pN=MW4h<MnIE0o48j7H8cF;L"b3mneQ#*p9egADR+Vi/6@rlo;]5TAGJka>:%M]+8(-&t0]!:Fesfrg*Tc%:N<a,Pql;8IWVQfp3;`g$,$[1Up<9+#4@>.#-r&aZJ"GS&eS;.VMF*WStg1tghcKUbe_?2`^K$m^YI%+8J-NB/RQ]]0q>U@7$[JUD]^9+^G=3nt!058+s&a:U7o^rR)mZ2a%4fq@LpB_P<!BkH9Z[N^.n.U15OpF3#RDYMTq5p7)Mc4\*1i%+`6]S7rXl;3)&T,Mprs,goD[-L`D5;2(,\k]NKJMBunFRQ8+,Y(1@JqDG#hCeu6kV#DDc6&#FQi:.GiZ#X'31A+k<<*6,7Q8aWn%%\0$4%A%H7,LHiY'*bU(5@EEY9PSSi>SX(m<%PUpSE355)Uc710=queJkG!k(\j7JI;icCc!A>)]SmKbOimipIi,55.Z<#F?[cG&q%]e0,&DY%ho[HM^lQrME$kSeE#OXY;7)K^V4d4$"?7B.LlA]#agB)RbBVYUgaD;IOfQYG^(56rYFmH1\Wf8f3CEF*h/P<?T,<Q;U0%*SV.Fc088ViVX>9$T]8Z$5g"+/$?`O5T\X0;9"lm3r?2_KF*ne[-6P1b-#]aUL[$A84TWJD?K]igG5eIeE@'MW$\")+:V<Ue^Z/C%/;3\%/qg(=ofN"\aaSb]&]5#X<.:F+6>CtF2D?*,G?1k`_es+7[N\SJMXs_<a>;kfI=c=(])/j$$FtESKJ;"q.`hH-%LO6^O%Or^%I!P!%75RFM:;35km`\!4jnW1g^e#,&LrEE]&V9+0En<5*^N_O9:tN$E$<CoP^e:UI%)nR$gmC4EMX']"P@Zgo&W4W/TXte7)RJ;d%@oiot"@OQf*6lW!6rdDN):tl:LE\gXG*MSR+sBic7jNt^+bl,,Lkn7F@Xb,A0Y@f/Rti6k$l/]j,GbY]#OtlI/X5qjK-"/9P#Oib%+[p;*X:?9GDLm!EB[lk*8oSu(CYE8d[&/ELBTGH%k\&`A+-K,`AS\n==FG8?WF^&WOUR8Oj]Vr'gZhHCh8_IK$G0H,S^jb0oi4C1%gBh+`9lK2.,^u'?bTP(6"ILAr9p*GZ+fOC&4s'5p.B7V?5uH8__c)Qd7<7LgnnhQq=Da94@mgpNnECQ"/D^[Y-/*_TdI12.rbBDo%b?%L3::S#nkjthK:M,<AbcG]*3L$6M4dW"@L^g*L=E@g\jUiB3Bbsj-+B1\QUE@FS%[X*j<eX*_O#YBXRiq*YcZT"#S1fV-=$TF\%#b1o@Hmsc-RmRs"*X'LeR#_,U=lPg'(gl;*+O6^aWot93&iEN46A5\b@FiQ@*)>KnHd3h02.:ordu#leWLMRr_P5,Z:6MP.OYT_K%+Tj%96c^Tdc/aLeAbGbs)#9/=VZ`KeE5#On3Oa@H-(gBY4Xqt@1\5i^)?l5pGWQ0Dl&AJN*]X(Nl5LmC4q+@Mn4hlP<?](>XLDjm%9W1B_0%I"Fja?a$=0oJ-Y#Q/*\t5"-d,'NOpY_UK">`Q%MN>GrV$_ZDiKNP\@`856?e[ZS(<Rl!H?i&](HX,GmY/u`gO+cB($=c9%g,0)klt/`m-m3+R/BZ^cknfi&Y6FP%AEXn\lMIMm)-JtWn$nQ:RKsu&<?ph,^psQ(>.g^f;&?Mh6lUc(ZdE36"fIuW?XrN$lnNnh%8;Y`R!d-ONWEj#)=Nf<T.["t.k%9VD;pdGn[5J]!F_%t5o_0s:[S/p#&b!Ec:&oX]OHLf6L"[belQ'O.Yrc,GF?XmsXhm*$HZiop%P31VMR=+Y38+K+%EtPhj+So_^n`1.V[48SukG2im9jK:1rZ'ec>&fmipRS:\AQ[T[MQ.6U7W-ThfDK"`b3a)c>bbr.4CZLu+g(S)%B^O"=gtBBPh&"WgL,I-@!iSa#C7jQah'Jr\jeAt30hBHI7$QjIj,q:k)fleDKcQ(c23'm:;^Ri\R^\[8XEq%iA;XZ+V?tAU<G?!V%9OO-.PD1lXeT`]#;A[qGH'?udc"!,F.t3G$*a'gRO%J"h4Y:1&q;*hT/n/h&N1c2NEflnO@4pP%L<`6'k=2_tgtt1/1UpK*0Wld5%X6Y,PHu;p'TPii1`dWApfh\Xp&C*mnA?DcM[-FQe]efP4DZ>I^YA'?8KEUUo`0F^:8<.l,A_(#/c^sf^]lpa'Rp"kkZUfrM1pmWa%W]Oa6j)amgm%mpX"#1;A-c*'U*XnP8ro)1bYK5[s[`rTK;PNV99:,(nccJX/1=PMLs*1"RG&Fa#=,bAr`(?Dleun/B'ntM1_)]6q%8FG=]^%;HB%80JVS$c2q\"O;bg[6a?Nnr/2T`%#DAu<8O<i4gqJmE\a-gRT\*TCEEeR=Q9GBl)Mg6l_f)VjRkl$<8T9,g!g1556,%HtejpH;""F>#@LI$g!MYS0$.RT:XWRSF<$9lNh];P*)5mJP0l3H.qdZ0Z#,Y40?fR_#qceU.BZUa2]OeiHZ,NK3AK\C5$80.ifB5%nP$;EVbVM2#8C*9gXCcb0fV^0k8^cU0"3j3Kd^tFMa&kU[XV'&F!k(&YJ3#Pq`eF?>Y\35\&l5;d*^nZ0h*u)f&f7d$[4R%*E9.N%m,iJB218s+Ab.N*dYKa2X9ik\RUHg#?L>SpHa\3'X2$3^]:V9`AI4^\.^0VmJ+A?].%=O\pEbT^o&:fsSDDS!_#6:&bX2DC7mZOf%2ir3-pklFd[fE`k_&4RQ56>$\ks$A77Rhl^$C(2j7A<+Pn+GbkOFNck1VZ#;0Y<FCo5)WBl\11S_+3j?8.1U0#_l08O8.e8Oghil%lVN4mF(o4f/uY&Z)35Pms&bj#bJLOui_m/#d^A`t/5EVW^A-Nm_+=gb.OR4rZK7"^9FC0Y[\VX747[3JSQ.-7])hR0DC9HH>65Pi%_c"1MVPs2OL:=9/_92!h@4bBf4pHu-R^neZS]s/pfr:T%]1ID,%XN#.6U,W'WX^?#)gXZk`lWZun#hZ&f1$+](#5sdR@BU&$bJdP%%t#t-XuCH[e9/")M"QAMB4O)MBlQY[e5Y4=)j[;@&'`koiO=!`n"Y8[e4T<,+I96/_LNJ&&;K9p)a5cX>SsIRS')eV8DEu;/*9_4%_RerQ:7C`taf)l=UI`E?)(H<\qTj7(5a_4/0Ulk-*$*$!66L!h'%iGl%7oSDF!:BcY;P1=-3K=@ViA4T)-/Ul,)'q#0L+7YW&>)7%X>ZL"n3)(1_->#F2[-j9\r:s4(IE%-qjF[aE^R")V!L)/F.iFJf.](\AU6H@?`39W@,mQ;n5u_:O1eANq7rT`1do*b7<bkM@pDeK%ESh/C@OW-.5sdh!3+FZ#iC.dl$(K7*+P$ss!CbKnkmkX)_^5GN*-E0?;6aOO%dT*$kR4Ea%(4`BB?12&9'.lj#SG1OOj1C-lpHG3%m-qDi@W.\FQABi^M&1i@-c/(2<=5TFfnNLGC*oD#LVc6Bd2i'Km]p],)C:i88<q2!elIRd%@uF-0R"*RQ^333[:6m,l`Fqk_+B=%%&`HmCPPS%FQQ0DWNBiGrVI"=@rk^>"N72iEKY-WHK5pl,(1L4E0fp:NiKspc`jU]X8VLFK/.a(JHW,*;q?ca5<5k:QgS,[!WF>ob%COh"bkn9X^RUs*E/%fMDPRe)EH7>I$A4OnE2rLnY<`]$)*l0.+cLS&UP5TdI"<Xb*]2b)**t#,NjiLq#1k%*?GNRkfS086^@]fuE%NBYS,$%eQB)4E2Q6m=),MO<5@'<:_DfWN4-<A9be_'660WR*D7)/9J,LXK"rDW,+$]F1Y>HRR&8i:K!:[9Gm"[65Y73/,]];Aq\b%`R=Egb,>-f<`+F9J'i/!FjJm03_gmUQ>qWWR)';K_)K96*N.hTFOHj]#c`R?=t.X_lc:,[rKj*A^#BH5!fsg8VT0&)qKY5)B(9WT%I6&n>&R.[7Br+s)D*=2*1[qqWY8^62-WN]d@q!qBQWdV57flEW0oE))m,ekQ[%ouj,S`&R3ZDMH'5]$V1%e_[9HG!.P#CQuN;Uj3%S&$j:OMr<=`XHmJOo`V3$EpYf4,LMA+42nK$Bs;k.J%`E`=B='50irAC,Ik.Zf$P)Jp_!+OO_g!Sqd/LXgcGfe[r"SXCo3U#8h\l%L'(QpZk8&?#/P.1D-Y4s#^Ssa=uDYLQfqYu3TYL.'U@)2qAd@-HjC0-77keY#Gfr6Z3_]iNl=J2H!PkYN8jS`BLlV6+ll%COOI4O%.Nq?B_]C%(^WOJsA<.TTQqC!"#qLL;;JrN#BSf>&im&V_B5M(!7X68Yo]UuXTsa@2;U"Rt\Re<E/$'I`?C=$Y().XNX2PjVAVW?=%2`DFf:96M,c3D:':(hH6i>#Edn?&-gY$Fh/.HIZ#F_0BJUTujW2tD)hTBZ13>`JZDYD)hI(c\>mBeiSsN?cMEP=ou:OUQZEGiK'M%?'fLJ7oCs_))7mUb"50jO3#V5:E)pYe7EYs"-hk\m<$0t@kh6G5u#^.]a..,e)F\(4^b#;+d1'IQR/'G[uOuoQ4%jT78Q/q5;m-C%&-,lfS5BE3GaP7=)b#;<i/Ai[MIJT4;2!JH6LMlB6=_("M#2P@E^Q?B(UB#Dl?0ID%,n*QgY3R^nYP3'+e6HU0%1Z#=<c;>gL^lQ%EhmQX/6Z.V$/W[`]s(fQXQ;[PhKJ+=H3YummiVr5e'4cir@u>=D0\/q'1U[k%Itogr3a]V_AZ)k1uHGRLRrB=ikO5b$-Ab8GmkkS%PneNj6O<JOM8:,t4@DP-*m.H39H:C2<\?1!mS[,i2G>oPbTOu/NY4A/%$K@c4Z>/&VC$rI11jqj3EPC^BVhr!(!XrFi*hqlEkd"g%.;,&7*4!g3)fm>:#`SV=Ht-:knf*4OYpaoSK)eL)2M4gE<Q6/M)'kX9caJE*(aE<eO:+u*V$n,oHFiG^5ZkVJ=[BQJc!*J9,`BM#%^8HtWmqp:M+@Ks+7M#W[Hp:(3I]g\rN?A?PaHmM"6Hf_p0Je<jNm%dg5.?LoB1un>EPj[RLdSUFikfB>E6DeC%C__Z#3(qr\(]TB%HZI4,*i(ZKDDi&(60c`"6<_2-V)*^R`gG:e)aR#;oQOI#%7coB#i]NB)aOtBN?A]d,KOJcD9CM4jbt<!"N@GuJr$MA&O^upSIHjR%e`>@J+=Ui2=Z2?M44@,h%0X_#q.'R.2D,pSl9"4OAm%(8Z[B!<%AZ,0`Q,Bl$k:Aa!^min@fq;.AFJ@ZiY<0\5ea0J:7Z)jBul?r%f`ar-!"u?En?I.=n!E>GWgS"uQN_p8FEEd97]g8U\EmBOcG7;;0uK24Wh%NRn)u_EWOd[&9k\"cXA:@Z]=/N@5W-1aje_S#>9rqM%h)W1M;%epQn-Th9^+ZuR>LJ*8oXLQWGGp/2:fJo4W.C:mdYLk71e#F!k>@_Bn/,-+,=bX`1_(ZY@j=?JW>!dSPA_]@h87ILie9+D%CCQG!/#"Jt`:MI8>so@1S4@\DeO3rch"hi,2"%7l@(BEF,ZVB84l/bj[YNktiQ`@YF]s,lf0YI-IWj-l4^o>.LI?sbaEn$[F'#@[%rD&rmVc>jV0AH-'b[ZYi:i8F%"SBbci=K-0WW;6SYm_"35-:K@2!=7^b).[<m_2c\&@#.%E)c<DNPSbV')YTk?Q7pS*.0(F+?Sjj%/*.@I:(M'`:If2-cKEL@_*tb6WZgaa#@8Dg9OQ>gU(tm3Rj4[VWZ\aQ]&4nXZ.L#*WV!$jE1!KM"-H++;X-ENeG>.b`I;5c[4bRq%i2H>d6LFGDm4lt$M*e#l@ku5@,Lmi6<p8gGm3f@%etq&0l'eT[dd5QeHd."V_pRi&<ZT`I,>5N?R$@Ksdo,V[pPuu$W6DY)8j%=^%7Bc^1]r:e_b=VMr`a::eS\Gu&Mn6A"OOJSbXnXVWc<]G`jm^5d<D0Z?7S`qYQe)\HKN;sIDUh]"RpPK`_bn&2QL,.[c75VO-BX]S%JCJK!*uVs,dT+ah^GDroVL(:rjXcZrKNFL$JHQ"qc@NE50!^`l_`2^9M@Yt&X@3=OV@H7INK_1:<1"68U_9@`g8VqciEUXHWC,@t%)_@HmcYf;eF^<p*F69"G`@A."UcXDL#uCnT(8sl=ODO`o=R7fg[Ap/?=&A_J2Fa1)%Wb9K9\UE$UTi3)"c%n#L,"lLR_uV4)3Q.=%Z02/Tle?T"8!;oH@/n,iBu#0oK68L9BHP?NiFU(A,^\C,``?kkq!8lnB06:r]bqEMQ-$G"%7-AfUUeHTYqB1IOc^DgREXXL:i"V0%OBKd;>NB5:ZpmR@KZ\s.A4r3TMOh.:09j)$mCcb2=Rn(fm8IQ"]PAaPLDS=?4a)Q7]3%R:B-G_F8@+VS4X2^K\/qKIL;Y&\X>+st%U&'*QC"oMN@i=!B*[5#SI>"Su`Tq/^W[\H(9QIR;PG.f`@iG,EONT7DAuf3`KG8--a="%9[\Kb$*lQ2@l%_@/1*a!gjr%S@F=Y8?%<E[;#kXfg.%R+d_+dpF77r">u5<`!*rKm&+IeT1H8EHUK*cPdEC+$&[gb@H%7#%gPjL55r_gYVVbU7nlgj@4<.j/tF1/)?JQ/b?%%J_"u5+L/k.Q<1:a+IYo!nt'\q83*Gr?(7_eYk>Z&2cZ0k,X?*W@DJFZJ)/TO=):]%>>5RK,)AM6Yo[IeM:Q^Ej>u,?6Gr&fg3^Bf%8b,=_Mc:SG6RF^P@4Jpi1M^m[VH6H86Q03&:Me8QWb63NA"(m5pT(*OZsoid+52k37H&,ucWG[r`inJqDQ]1,Fd<\>(RtG="Z41m%/8@OLS4q^GR!dh)\\J91o;Fj!S4=V1`+mNtU>lpmK]B)">jc<ZBm0^]CUSj23j^?9CIBQ\_].SN8]G;'8<GWD`Fr+_G6]78=#gV=%f<pb.4$WWkRhO5p5![_Fn4?X`%p?At",20/k`S,g372_GQYSV;$*m*GZ8puVUZlNY]KE1P]?]3@\(d1EQS5'WF7`@"]Iu&f)\=qh%cg1\0UF_VTe]O_QUsM."@]-adR5@LSnnG/C;"c2hEOEIpl1>!bL(K+eMf<9=8-SC8[9XSGn<gp_=pO5poW7YK5Q$_OOZN:l@TXQP%1UJUlE'dThFV.H!=MgL]M==FOhB?=79"2=!"'n@P0TW9&e<[`&S>sAYYf#E)##K;j.b7?_p?Qsl67?A`gj8oq<%-l?3C-+AoJm&U%=_L]S#fu-Y5Nbj4eosoWNK,6bC`>Z@EpYd/&.csAI!@f2D8^Z^dkr&oSS+]L-!KN]*(eSU1\W\nq5P0Xegr-"_+^A%PRuaD>3sE1%EL.PE;fEMq2uWNPh(14mh\/n<M8>F[3qo&nRN#_LH,DV"LpWUG?n?`/Qpg;9i"g/NP$p/9'-W9-e/P]Y3ULHFQ_[Y;-rBf<1FT<T%!Z?s_Koq08k5:mrQCV&cg_0(#pt1HiF:OITE1Dn6_<5DMFj?$eZFB'e_@6UXU$F2Z4lZpe]8.f\pNc(Y@;2ah=3,j!ZlJDXKWJKU%(mVIbka7?-[d9A)778>3!=U1]DPf;,$M62K)lY04S+j`R@jA4Y@*R7I&$oP=S_I7/6HRPCm,?)TCK)Bq&7/igIaiPQlBDfVG=#kp%!gQ"iY?PYM5R@6,96:Nm'IS0N]8I]No%S^#1%UD3j=&gj`iru/6ISlJ>8Z06]Mm&plV;`s/9e++*kO/Y35pG>U4On.;[&?5K:(Gj%e17;_ZlcoXP>j;*B;;C*H;b<VCdS\6QgF:@5BsAH&rd%s(Id8ah?WZ1cdO#ZTQ<003=EcalV0"/)e/Uc#qNYg0?o91cN]Qcl;P_G%XWfQ?J?ZaQb_D)OCrhuE.blIoCB,@9kkFQ&'V7is2&1k%;-eLX<d[j_kW[;)TU2Ksi8^*!"7HVDR63+!CM#>mFIt"2m-SN!iZ+pl%HdYqn]8qapYI?T8`k#H`N_240T+=ocYgj4TF[k<K#13ec7&NEHPd5?,h44n/g10BAl#%)Sb]X]$/*G0*$]LnsQ]i5spm96miY4YX%;]X(fgnC)ml^k:p16g4XWoq$lk8!ha;kl8$MbOZ<?31qYb"]R`PMY<;_!C3+8#fN(DA^]$]MgtW-]$)aoqk@blo`KZXoZpDR$0][%m"I]bBp.$-cJ`utju<3:)f%3/57gTgj+^ZLreBrL5cT5(@+V+[2=A/G/j(ShC+#d,.(OoFEig_^11a*3GH@4l&!nK+7:FFql0@_X%X8n[c:jNhTfa4&j`-d$h0P5WQe:sSbaeV`^g;&CiGA4IRA'sgh34I:":.G-pAkX;8jU?2U&'-lB>6"gD$WX"'XK6OQ54m%_M-W#+%5on]tj4Gm7a&kh4g,`/E(OgRNp[eT3>uai./D[;h'lM@P<21^B<DHP4NL!q->]&a($K?Z4h61Q7?3ZDS##qS7h(\!Ln4'"N:.H]D%qo%ajD*$[SNsu&trJhL_GeKub4D"3EGK&QpN/k\t<8C2\nqEVY@$DHjUhtdW*MQD@eNDb&HjC['G+[^6!AS&`M<t:Gd]+Y9dil4[%pO(BQFZ47aGd$BMN#n,`0t4=EU6XB"ocRj>kUt.@(/SK_:X(70f/@H>]=X@Ba@Ha"on(AHopWqjje;sbQBS]b*Qlig:Qr6mqP[cp%&GK%3D.q)LY]oqQ(RCZK?Wo.Zg#Uc`Gk9\1]jNie:e]@EIE!3q[i^^TA.uS33]qiW<Xg6``VPIsjf;AV^]bX5<7<?QJOX&,)4Eg#%+&bA8--upNac/lbZ&a%W2hAt4^bn.cQg'r>:AS3HW/_4[Mt/21'JSW^`@m.V%i7MIM"*0cG[)>[iokDh?4R*HganY_9?<90>Zf-D%\7(V8eD6&KJQ`HH9r!j<FS,snR*Z=)>h9/&,S6rl76n5T11r8VK*5SIAh:0Dc<HQ1Hm"LDZ`f?,`rNaVLW4='1lcL9CnYtn?h<8c%Yqh?.fFb]p7QuXZ=I/WjZRX=?9Aa+B2+T>UX$:gL:#/kGlZ_:R2(sc\X5Im;HI*]!**9-3kOn)UAT&;#:g&A?R]<Y;oBZ(CF3*aK%G34Z$2oIa56gF3OOaiX@>^SRDNU19tL3OGuYW+2-RkJsq%Bujf*M..YH/V#g*+]OiV8#`qd?(0K\.G8FSTWZX[-:4\+=7n<NcQN8%@L>F4CsN5R+I)*4':bW.h6K1j?V9/?Qd)nl9M)<Q"Ri^>-PL+)Q9eSn1LW`q12:*^Z$/,]6^a&RpN0JK"Cg&A^,U;ZZVE#a[mCQ"%)EN>60&mBq>t3[bGao:7,;aEsJcK@iJ?10+aX#l"GP;cn_1@0eC3CnBRbS(C0id8Lc`=i4=?=gAdkL38INI'h;^122EuYfV>cNad%]2:Uum0MbeBpopi*E\G!U-5ZScH/pWA!GP-Ud'/X13L!8D\eU[!t1gcEMSdqhk/"Kf?[QVZ0(^f:-EgW#b7rB=WKc0At'<e,pN1B%c\P<e$u)0NNI71uVo:3ZW#auomp*l+:UG7G"1rjsZ8fHJF1rZ"=P'VLVD1S[YdCYX$81>&o4.:h,ZudL$kW[>N?<4/N#r^8n7*6B%pbBAWn>ZhoY=o#7N?5u\2Tl)531B<AgXIR>!XK<VM&sQPWQ(<<Ze0CQXE:HCmF_NT5!lbbr'Q1m,pVi$adCj9E@:K@XN-$)!pgLX%T?17)&D1ul=0iF35J>mDJm_?0lbBUfY'9;Xg8F_,q0Dl0=I[^q3Ie-3$qCa,dC5\ESe5r!nMag%n_/Oj'/HiMq5EoOq'mX<*&H79%I;.17q]2'GDB&HnY9m,=[CG\I@HQ;G81??/pgV<1pgHtK4tsrW=tGLW$!H?`KdEHTQ4T?(\7&C_dY2,kBsNk\r!l+-,XHnBqD>9e%#mnk$`M2WM`dS/%2YggWh_9*%JTTHEF'^p>q@+,8SK0,8oQ1gRqR8O<,X'I-A%r\FV@$/uj&#2(dGOc4@<r6X4\gpIe),)"dGGUL%o_3GPUVE_I/c'g/Pk!X0_i=\fOMs`)@6FFaN\Y3nlH[@u:S")[Z4E/e[#jpmU7;JK^N1NrStki53F#PAB(=c0WTHnGd8DhX(9p#^%c:*4YUNk2D"'bEl"<%/d9q+R\pUQRAmqBW'L:OSHq)U>3$m3L_(j_OPNV[9$*AZnAVRsCON;ARR6ju#L^=*L0SQ;N"',)bKW:)tg%\6Pj'^0<>S7"#:e7?`+ag!W?<#@_f27=>EL+-tVVlMJh6iM#A`KF.6^Cl&3E&+U1(R6W$%&cf!McE]BZR6ng&C6Nu1U:ti)-sWC\%W:-:7^8C6^mQ6N,,:\$F@GPe8H]ZR=RujeIeJY83Lf3jmruBYtM`ApZ'<C8AYod.A-ldWih.7/6OTP'I^&omt$%L<Gh,4$<^0p-<%GF$%MU70)M#I^leWcR(pR8QAiOM^bIB;WBr.%'H@@Td0!Q*JkX:4*:#cGSIN,eeJg(u%\=Z,fFTF]+Z:ClhF21Y0'l*)Xk2moE-T%<^n0Y`b!r(e*No6Z4lN)iA$[YR1V5C1F-b$2p-o"4KY2Nhl6P/7m>_&ebeb#%ee6=FEZhXnWCquK50(PcX'h?1Z.Z?1-8PB00uY>%VH=Z!:04@]oBs"LS4=?slCKfi/O-hiMo=p%h/a%V<R&g:X.M.VSXCYoGhgBT8j"`?h9k=IN@u7\[m=tl(_o54nA`/=H6&Q7\;)du%jtIoX"a-7+/7E=l!L`VFUu#<2lSIO4rPF_#moYtM?6D2NH9?J!ThVlZO6IfJ\*I2]lpt_OhY?I#c)c[Z]UWUil]3*'H("?^_:c!c%cOb95J#]a=1ZES+`am]AS_UB/kCoVsUF]\^+#IGn5$i;`dmnQ!5rnMB.[]A=ED));/BY@71t,XSG<4iGcd0M14\DTm?t/;4nS,Y2%r,s3jh;bK4H*'Ur!pL_@]@G52Uj)/3STP%)oFBqE7M!po65JfK@7GPJ1-+oroT&*3auVNNJEh"\Aocb]9Xi?iH1)G0g@rg:n#&V3%''C:fAK8ci-6r+E4A/M@pU%gjdQ;Y^0A1QW471Q6:V_ECb$F@pL-Wp'^RMLDL#p:J=RcM61oO^pSG.^hc9'm04-)dBa+q-Sqr56j%X2PqCG1H6e]2:l9HKQ(+m!5km3RZKfa)9O4*8J3tAA*')S=@,"A[9aORjNa/-!gE9,/)$?*H\.^/]rF<#/4/%"m*G(i2G6iD4<F`%q3ls,Nj5bB^UU9I6HXXfp!]Z^au^_mS5J.l2_`DOlW:Vqh?SXoP%Qa3%).NtKkHN5E_VRF=Itk5A2"jVq/jMB,Yc-3ZnA\$5R;%c%(%D#([>XHXJa6PVTgQG,o?,R+,>as)m'=Z>S`8lZK60RfdOa.+BX$>9)q!t@CXfQ.V7EjXl#LieO6qaT7<EVR3HnOGe'fje\/a=W%/?5.2&`"#QncF_$Ddc;+'o4t6VVTD8D8tFpqA,_ZbWj6+.9_!VfonfX+Cr\JQT0F!-g6u@h2Q8qVig@kX.Rh#[sE+(X2ihPG=-2e%]4'Lbd[b3^:X<6l!a<Q"cZI\\$HLk)pg*/Jd0on.I2Cs.Ki-Go9+GVXLWaaS_])E1)S,8Z&?Co*DH'ml-Q[I@r,Las%rf4B1JrsY%m,Pa(l@9a^0jSq55`n)W,Mnt/;l@[,r56JEiq$I.eia+f*uQY+UYu!Tj;N*.^nEkQ-TaSnJX_oej;`C?l#q$X"(ifd$W-u1KJffU%\<%t!*8#9Y,flJ^5\<_^nn@di.bj)Z\/O[VluFF\&M%1UeU@h:VcVV[0o&nWl7beqDQR@SA[se104B^=D5srT\^XkR]6P*L7R1cK%O+NZPZ9Snrf:O0)""B!O`=r's+tY[bF;8R>hsR;O18hVaqUn^0NRL()h>uisH/0-s6NNIE<5b70DS@l(FSm#i92ae(_8+HX1!DKc%]DpEC?HelB!u8Y`d8&epXW3Q+?A(g6/Q65fVW=@k<H0$'^CptGNB(q'6Ua;GK"P(pAXZYf7h$!IWqRcLEiedh(+3Tu.\F*Z?^7$3%J/1#/8MAHUA#kk?CF#,:DMa4e*oKZM(\OLJZFEbMP/GG'6[qnl;5d@^9s!#DT?WA(lX2&'=o+WrRA'Z]+g^RC/7PtYg\PXD&8Jf!%B5NrX59S\@S\VI>HKA.bBf%&iV5n@0ak<5Bf*"mq"4MY[<hWut]].f;5h>+'#RjC#)W%B*8hq+(Vto9@'b5(!G21&?MH4qB<O0bF%)QKhR'76DFHkED+m-.!q6o";Nf\c9o9o<lKc$oM,:Ia0S\T4NreNeM`,J9fC\^-&0=;/"F=d=asP;Kb1Sln_/-QCP0p3Dsa6Rpf0%'amHuh5*3,kZ?O-cU3u$D'#ZV_t<Gmjam2>%E*u_DH!X^X(DJU2YqjYTLidf>\NeDM&j%]/^I>eJF_IG<H'dR4Q"PQgRPan0qdY0%/N,)mMRE?G_l[X19^ZB(G^[q(I'fZMKo8'-7a,SH(hqhL9'Ze*RU$10joT8]SR\+Ke+9...T!NBaV0-IT3Xn4*]Aa4IF4kV1M@"u%bmn94c%Yq+kC%*6&9sGJesJ@/OGg#OEhUm':\E,`:lSV8U+aJ2<U?_o6::'6kfM8mm<S'eIAU&a2t;VeI5dXms)`\=^Kr^=qt@XO%rg;UBe\D+W]Dq`t^O>fnhu95I%KH/eYCHMgFnNNL\B`FPDbs`M(V%hhBp!ij%"p/W,!K,SGoKj,1Ub1&\qU;:n/[J\>*5ie?:F1[%<'PTZ9uE,W5$9k9P`Pr8'i0TGR.lX=D6GXnM!F=6aaS\XQns1H?-4&&S@^4Q!1&=drVmH8IKqMoC$@+;faCPBF%(8V%C8b9DI5W'%*tRMO/.t\<#A$%JLbgk0#XjDa:AEY^VQ)`+onfI2YS/3`fBV>_hKg_LLlRg;m@hp#4uM=="YrR^!'5<YIL>:,TE'A>]__a$V(^l`%'*ke>Dp6]u\.hG-ctc8&7lX@J#2!N659W@N*VZk@/9HrZ8_^C[JitSdq80^5(BVH1I!;gF$f!\CM40QgZK07H<a?o%C8M8EeaCA3%_cE+=,!)>I-Jqo9Rd=Mt]t]lSX&G/%9t;*%b]"q"nAtoV<743SWdke8N:8`aBo;q%C,t*km.%FG+u9d,aW4U<p&%OVm]a6L+oAK>%2\[MjFVB$$]@8_)KH(6kj(=#'*5V(tg@otl<EL-[Xtjlp+ril7-rs0lKqkhR65u$#,N5u!e;+:$^.`s,at32L48)2^aN$8/5!Iu8%GO/k2_e,,b2!ijKb/p/c(]a@s=<acE,+to@76sR(V1Jg95+Fa8Bom:D`cn@]nInW!H:Dl/(abWI'k?nNq$"E,F=6_GB1lOS1F8Sa%3.^R8%\;0FO66r&(oo2)"+aKage:A.LE<sQ*=K-9)Lf.LM[rg!k8ioc,1bU)r\G0>XR,B[qCh[J21`pt>G)d/9TTY29Cd45Srrr*%hbdqBC1j#0D']";R2;N5F4aoc=)9CWe79fnXG2;`X.NI!8[N[h;fu#ML9b+H^4NPf-sYX],9Of5;nbL?P%"6?\MT!j'M89^b#&*C%lPO[<!-%'9nF:b'#\8b\X.L8Q3nn_^.-i^M&>p)YdSOb_Cr7%QbAbIa]_d`S!cu)NWE6;H3eFWrSIejGe%,'>VrqYtVe.&MfcKnm%?j=DAQr>Q'b03su,uAuC5$k>](t"Ar=Fj$T(Em#JeBZ#nN(&'Q_?Sb&W7ikO;*5l)e/OS_I1)FS\a"QPNgG+Ke:UJV3j;R"jUI<+%n\r@fPG*6A*Z:HAoDjO#=ae,p^$UC$\QM@rl,g2_[D[d+I],RdfF^PVYXAhQCIDXT-_CnG,qI!P/3$WWC37p[a0)Li_[R2EmE3S=%K8mb=UG1Y%<qL+7=r5\24r=V5%,/h8Wr*"NXU6i+5#[EC<jVS;@m.AY+F:0A@3KC(aPgqY6b#(U`/.3>EY@U4RLtg5Q?JX*O+^q!%7s#%`gBYIRq&W2D]j@POF*kg_e_O.kODRH22Z,g6c9uOfc_%UCNrV<I007=.lH'>AT#T"j8hut?Yo_E`KXF`6)@okL5PImYS%JZP%`T1mu(2Y1qj\DBJ"S.rWM2Y*Y2hd9S'm(nB,kb>%&r$K$;.Vn6A\5b5OG=94&;hY+?29nh2;"?Kem,:Y;iFs.k[Nq"7!$JSQlD$f%ZMsm>@W!=_n$l/[$L[n1]%#R4"tRO0Wq2FLQF"Q1hk6JB:EGlTPQIdG_UrZJffTfo#cI`(?oU\d[\-S'l^hFh7=mEtI-3ha2]7D<%Y^d2(k$?P%W:*[mp=pKm3"TL$%Yb3krgc,)^1jtVg4iSsFB,X%Ybn3C+P-lqe!6lg:HS#46LqK=gSaS7E9>*O6^t7';:^2/bR]s:%o2'@O=XDGbW?$Lb:Z['5e7'q6?Qk`Sq"-44AQhQ+Z)b7!O'eu0\Y%N+`i3hIOg)44"QjJ.<Q=SBZ\s1%<u@%\BR-]p#!>#>$eE6#%kHp1o>@D\Wgh4=&#Ra;+a[BeTVU[aZr>(YoH&0UFLPMk,Q=/^WcH'0u\:r1qQ^Fg\.r/e",mJ!imN$)"#pbh(KoK$OiCCbX6A?5F%GDC0sOf,4ai&IE)d(enYf21jEB^JX;Fq-%ub>F#P0BO8@2%m@0<sh-*E)/-'0`;uWpH`q.)H).*aoQ8>k][I%Ym-*r%`WCo1H%Z8%drh`@5[41=[[%rb/3kWJL2E5\kZG_GMsSWDN>Ia33!`A.MBZf`Ah1K6gX(q[j\U+^X^$;#nd0mB(Xhc*`DfBq9a*XV:+`(G5ic[?%aaf[LZe-Wm_`o!tocY1@*0VQB-3eBr1%8==M$D]r/H'auA+0ppe2hO4X;jQQXA9%d@U\!1RLC_tURg-d"$\cQTRAR@A5.fod],[/%*F_Oqr#]iXXB<^m*K?<oqTuHB^Cl;"@AkqY?sTfn&=)'[jbtXFBuOM*N)s-kHD'Y@_3kCnCE6hb+$jnXbhLPLM.q[Z;XZ4hI@4hL%qmT],d[%S31$m;)9*S=17@I!L>1Baf9H&V@E(75IfUC=uXKJpS+UT0^BZYN%X9\DS@BbTj!7&GhdSe*]HD##7;7dXXMY);M.XdS/%6;XWFQpL0o$?n2@)A@G1E%F<&0mP3M==b]_FI9>N1-HXnUIr9C#dnXpSk:S$hI#VX#brk*I9L*i,_9[V>U)Q*T>c2iYT8%0;.:R2%k]ql>*0O[=^I*F7P)"U1L$9oZB\6phE*?H>21\34Jt+<3+1pVsW0te%mo:8b%JcXeV/7t5=WW-ND3!7.V,Uu12'j;1jJ48T(YoEs%N-Y;m/4@j-mOfutKZPH];p6EqKpSdL1dU0:1pRJ&=?/ZPPhtIp_9Cqs%&?ha^Y,k1kEAi%T\U7s&.F5F*+pME2i(Fsig5\:,EdCT%Tq?JX^]IU!NSJ[eLFOl)p_MNPkiZjVjcDM0Z84@_q_V*cDOS=p1q=o,o2jSKEb<ofGiZb]i:`.W92Zj%%4bgD=q!"M(.ce`^`C^S%fqeAF2kDq"V+\![k%R8>n>57A74ESn][9[;6TLn0WaK"8jWQVMUTiY9lbSf^5j.6ehNQk:HmJ@YTJQgq[]^5*LFKUufHXh0`WQM!%<d[CeO"p['Eo^U4,M4i\Y<,[KUlEjWc&A.:QZlV%'J.sKlgqbu2?I!BoW#]q@\!ks%dj1j`<dMTUd!q[$->+W8<t$h^t(gT;&r5A%^;\ZA+k]4HnI980V`Y:m0i1H&`@d9%`HA*/r:m)+PDBr5Ahr0a*chOO?p&=+1>8h>%u#5lQL%rG$Y,0S3=o=MPaR<Fa?ofgl$$b6%X:7-t_\.-4GG_9<93t+-C9cU[eBD>oB,=#D9th(5>\]DQ;aOQQc&gK.`LB9ACf@bNrt2s-qdoD>m+h+_@]'YdmF(=T^;JAO]uE[a%:5)*2,mYE[3[%''a7JE^g5HhsE[EJ/\Tf-uQlE99#3_M,XIVGtZmtaO8"Pi]Y[fZrAtKNg'NY.<!BEpH1YHEQ('?'0m[jrEo]Z7[%[DRT0l*E7c&]bp`cdq/=c">70nY0i=O^m;C>;n2dI3JgP82bpPV;GT89]:\a+d+U$9-CeTio9fPOP&]1T"Z.3[]_.2j1A03)``E6%]-S^RY(\0[CLOpq!`;M9=$s>\-eMN2JLSXWQU;n=)o^p#2)\XOXbPFXe*ja]6\KGp>*YhWdTX.A1p)I_Ki,9Bcs&&M]0:JZHs!J9%XJ+Zi@19AB$TSXW*O`A;6^7c&f0Tu2d7.FM3UFdH@kEY=iG2jEYnk&kIBbXr1I+h5#[oBWL4rLHK8Nu[;oE;E.[klAFDIHNYI*p&%p?82dntES[-AgA?:od(jB4.D"TKkL*6u@4jI5/VR+_"%o?kH3E9=-/q*8K7EMEih@N/eM[S-fkMK.;sfEU,+(qGRf<P9L$<V5,ea%4j?EUartha&M)q.@8.fmHFql_UA.&_6:uPd0UR&pJRdQCC,kU`D3ro*ZsA\b[=jVe2)pSr6TlY`qpot:q0Iu!h_"5-Kh/p'Cdc5i%a.Q<W@5q$(?2A:Tq,Yk65>:\VoQAgH@lJst3\6pcMWpogUc3`!c]>jaZ:&8s.T20$AZ4`\Z?K<iq30fQ3[Iel$8e505k0+n_I><`%!_9&R_G#Q'eZ!S7K`YZW?sj4UqPn/%+\4AHR\[;o(8cToNj<d@8^Ro3&Fe%C?PqjNR)KH6HLnHXP:IKfe(eJGOMkd8dkktWRMj8!%O"^(ph<ngZcM@XbAbF%'=]Mhg,n)p&%EVYiac@;Ia'W5U#;hEi:P#KZFuYRX%$57hmTbVR6F3K9i;AO-OKmJ_?]-(J;tfV@_.+Yt%oh^f?)-A^;\I2u_LXn,@d%L$'N&C!\d0t[aMT$FsQNK`_kH+0rJQtAKgT]n.,6;(nXnh&[$,9_Q<0o^jG3WLF0nJ:.D<*'1#ReXC%`knX?0_=N0OYER-oI.(CbSb4\4^d8h\52SY2_0Zg/3Ikbg>-F.C7>@jPHDC"0Mn]F0ore?qB`l-FuNQc85:2+BEttoSo<DZa38\;%99r'YWTF)[.=r=%$guD8aR\Nu`j/PpTSqRJ'1-WGFC,`>D9CNt,IPO1+d=V+4?R$+>q0A$",NF,O#e7l(0*@/S>A%K93k7j<pm<7%;Q`C9R`7'@SnE4_dU6%G2fFj=Upfs:*!n/C"Q!t%-gZqm,ppahrKq/)B9;K@,`],#@%bSeKO3QT^0G)Z&GX1sO0J5kY'0/8$5n!k%ohX,U4mYjg+KKIbYk'_eCgi7+F'p_8&nZ2sY]sbOIdkaujBBcqJIQ'08'IBPeXR+0+04aS&nPRuJ.ak[hXX1R@Y0,BXu"Wj/H$>G%c*<NqAgt7;P3+XKIF`qaCr[0\25;g[XN_Y+I4NDMSrbgF!fOQEf_-M$7GN/r90WpX1Eu6LTZVPI09Z>A8=(]H`LR5RgeE/"L7Oa_%^r)RqSWU3dK5u[:J[OdZ7i6)6p5m0Uep#2%AP6C@DtD*!7rM6Cr]M$\"+%ZJ^.3`MI[Tm)WLt"A,>U)a4Igkb,0tnY];IQ77\0k@%e^bCm4==Z.SeG^uBA@oN`h)7:!%j;PD1nJch1YF(Y0\ug\r'=fa>:oJ'l))2Gm;`$L71W('=&h.$+%]/m\;<CO$!LV4Y%`&^krV<%(3p*mQjVq*nr-%1X=GL@_!5eO,"A.YaXZU5Y0RY0@sn3@eai81+o;2ea13V5i;/aX^],_:\,URKj*1OmE?O?[YIleSH+uPA6AGJm%\BFQ[aH`Z3Z6O%0/SX-&19eDe`Ho:K+Q\FQ.NhOi%[TW$O)X)eC,"clV/7.I%D4Gc4"lE\*L&O6B`lnNCIqtNr4tV^*kd#SFQ*ZV%r8Pc(=98uh@(>0ph#FV[Du?PAmdaJf)[YoeXHjIlLhf^N/<t6u#Z9O?IK*C\e=tkoG^P&-=8V]C?/NADUX7I51T)>r&%+[dq5_NR%7HuETXR@78_^Q\k&FS"en8CAad;Le"=*fiNStB@Re+\oQq&nqnT_;DfrpeT1_89$:0R-be_86i5Q*ck[UUh-im/`QCd/_!flQh"R%1thOD:G3JaD,MK\PQdje<NgmBh_P.\U`Le"igPUB's27G5O?l(i'al<L.Whm#jW\X#_@"U2I4;4LsJcN^"1\)J&,NdRg%-tGm(p;%d!@3?5E78PeKS!-U']%V,1YgZW(F]M)oeVGLCI[tTFbquLnQ1&&5uJhho:o,C)%,)I"3fd5\^]FHjZ>/f4Wp>;jY*/?OKu\P6B0K%kHsD*aR>#_((<E8S>146]\.R>r*c\U[Y1]PX2)"mRD%H;e4FBLc68p,3Au>F:okj'it'VE_,6JShEJ0I?X51#a/@%3*W#kHdVH)Y%Y^JZG%JId[Lcl:B7`Rm<K,pT_g_E&M=9)SK3p!#,3),O@X&og<(0eTK2kBNL\n],$L(Q$MOWE-tNRP]=eGGr(!VH>ui#424<).\u%pFc"oQX;o;,iJj5T\t]==e?kR0M8<QH(7pXJPu$,#BcF%1Y3dT1IV7Rc)fr%Df^/nB@T,s-Y3;f![&Z0!06Gorm?sTFI2@kK>Y+`%`PrT=lEr+!2,&;c^O5g^$Haj-*WXH,jnPAW9:TX0lm.qj(g^h2Or4aNN.D:.;T;o":TIU>WABHD#*Oba>$:>YT_C^S=\C8%"JG(B%<a-X:.g?=$[Z%K[c@`fjke6$GNW"MS"OA0\1P`jK!q88]6dU*>_7a:lrg[^R=YcA9<2;2WeCNg"9[8m!PV*B"BpB9PgUW^@/(r,d%_W6V^>KA7_oNG'W$J=8<lfN!&oIqm#<UaOUP/!GtSk*GeR0Pn(ldqMLXQfrHq@HW,X,<EVT2*l'HKGFH@@D@Q#';Brd=05f?dnkd%gb6LDWCO!AHGcPReTH:tPFErCXLrZKpGFI@@"=.IlY(uU*59<C3\iCdoqB\Dpc/c;=d5hG.ZYV/N_)hJpERWcPFu?R+GH(2T^AQ-%[>r6ENQcJ[-:'-P-:S3[3%1ERG)/ReCKF[O/Xu)'FfPn%DgF*I'8J95T\FGR]."][&*Rr&5N#11@-PgW)1>jP"j?rBNuo;tL]@4Q%?NqJ%B]OT3?$ZDl'jf/'_:,)JK&G&u,2gl+r=4rhYC8o%r"Yo5ghc4VDieaSBY4;'</Pm]Z902u-Ei6?aH%HB69Z'"9!<ZI#2bhU%)qcuZ\j<0[#<"-s(*FF8!USu<KY%@--OWcS[$u0Khq6YoSo&t,7K_[fSt#Yq][lW5.GNj?%HmA,W'ZFLDI$@C/9A3!$q2IGA]Pg.%&-QlQin&*rHBm+4CBbXS'4RdJ4Tb3J4C27jj6!YLfEj&$b4L6mY[2B$I3;)G^r_%-0g.crV-It>n"M_/H=Vc-3'd:po_H^QqZb07%^$iEXd`'#j6;q"\Wi%Dl"Z<h2YRaG?Q]Y^05[M/3db/JLkkVW]=$Qu&p48f]U`lpSlc6-L#-DmOIeS`4HO/p)gm/%?$-U"h$<;Fr%N$]h*,U?`-BDa\b1^2BT30$qt%\'i*)4Ze1NOA<lH1OW:G@0[FO7]V;A.N\DXN'it_%h2]+\.IN1RN%2LcH4n5$Zu75iC2_</L:!%<&"VeI3=3l,9XLEhZGI4+SMRB.gX'M8]?=B%)rc$fkfMfL0=S%GD!L#EJ_FgUqeTuiMC<*d0naERT>3I4(Nd%ctTn+)f,+'D@2W@%?]B(kA3d"?a#.go<mDEel7X:Q=b>30F(eWWN&O4H`F1KootcY''Oh0,=1,26De1e[?f(^[]Q/YDg:1EcH0ZuR1sR%$p_CT*%O5?g%fX:E1at.Aao/9M(/>:2brZogMP%j6>W].^-`"=8FF&g)#-oD,Q3F)Of@LbB*D?H>::uP/tTBobd;:n,Z@QX)$=(;-aFj92%^WU]]%I3q#EWPWDaB7O+j&akd)ObH3X7i,J!*>H7-A43$XTNFLm"g<a^/?L?'MX4p8AJ4FI?>ht77j3QS@ZpgAFJ.D`Cdha%G$hg#RWdgd%5<S"q8@O?h=c_=SbhRf=GEbRg^jb,_\AC^,]+_-BN)ugU#'7;o%=3?fe0@&@5hhe>)Wn!]9j(DM*[G`%aZ_bRBBd'7_,NZH*RD?W%n%Mlf/8(n0&M<qk'lck&>Fq>F"qr&oA4<#9D%c<TS-giM<DCsc^Zt@c_n4.pC(#["Bb2A.S+Ji8()3AMjd0pgGR(&eZ8u*7#K9>_%)d\Xc_\f;tR7uHjdba3X8kiI81A.,ID3)/f)uK"Z)6-a`N;`FUGL3YhnO%=5hEgHrrG>l'fC;Jm?Cnp5/mE4oM^i%npadgpl6Zs-%!N9%V7"06q?GtOOQ08K0'QHqb7u,>"PCU's(/SNTIstpa.Dh,KD:4$UNN(ruAX_nd&7([i9@p.t#2[Qs(i.SeX"to)OrnWG_4V?-%J]A1m-E2Ad02UG]?24?loC7KFJr@p%*(F9d"O#-Td!@^.+5g]3YStmRf`cr"pIJ,g$E2R9l`bB^f\'Ojs)C/(0+u_^hX+RRe^(A3%:Nc/jk_)#L"S9S>Rg$/kLE6I::#s/]r9t0V5>7iZ)Gqc>;mLt[[D@0M.)0^l9(BaGQ*];JERqcR\&6[HiX=aiU\$JNUatM1+oQ)L%5B;MkBaoU)/3t<]`UDaU9MjO"hsM5)1LUl(`"=gWY6F$33oui[",6C_OP+!s,J[nsZ+:N2`Nm6T'T$NAl\_b7:o1tpY5jl.Z_5eb%a;lDPrXBS8=$U@XiD)8b<brm&?=A?BV-$/q?*ek$n+,7fWJ1u>j<rh,.Rd\i?1H-d==Ged@:P#>_[=\pl5J:kDG>br`IN28ga#2>%2n!M5S=#E"@,6P@m&n?j+kq;F3p:S$hb=#0j<>jf%'a\D!Z`3K$7LbkB*Q!nfQsI]q"imuPD1iE:sgML-<1QL!HL);ihMt5-u07Z%b2L,dZ\!F,dj;("+^C<KB+@MrD27]4E"-N%@?[sb'NcE\8am!dID[i'7jgJ?'d2L\Ka*]<^TQh!67JfIY71J"B9eP%O>mUK'nt4X%A!RBj&46H1dC/",WeW6YN4QoU9Vrrr%2a(Hab1/jEePF$cloGU\KKOo)D`';ArpHM5bmD2"+"sM"kGR0<6\-njH=V7+6.))%kFZD%<nY[kS[74NY!]Htq<qXP2s]'P;GA.1Did`%$\Gd:__@!'_:A!,L<cm\;3Mrn)qfRD!i?_gh'gVZWULqM?BkVJV3"^KLX]&mGDL<0%H.LHmOhg'>Cm\rgiRnLQVX[,266;>$LK0?\Ws!$"*9T,b?JH\C"X8WM=A.5_e)E\derd-rV&t@:MO`aUP@u8.Z!er3MQN`(:D53l%L:a\F41_aLY6jH=+D$49Kcamo1L9$JdPmERYC/(Up:R:F(2Zd@%7Gs;NMa?ONDXa[0-Kq'K"PHOM"];h>W9)W]:Q]@c`;UOXIkup%CqKB#ja+rF>Hc)!T\e#YR_,-n=FG7C]\s(*lZq<2fljFJ_RA2p-2AnBcCo2?^U3jZ[R5QWF"_s7ZUc3%I3=<>Qi)'2aID:AVu8Ah%%lmVf+[>$%rQLtOHm@<'4Fr#99YtNa6&#W,r<P0?AZ$Cp.^/lc%Nl(_o>a2apjnoPZ8$Lu3)-#'NZ\$f:S(gWgDSbJ57Su?VIKeP%2q"mpTKrqW)^K<3^%[Ds$rKRjQ."+N@k`jb#37H#ViUNF3dbI+B9.c!SrB0(/E4R22;^kESb<t9E;GL3\`:62pTZ_`h(+3h`Okl6%B.0Eq49lt!Z1iI(T?jJFNl^E7'$'V:ZZjbWSs)Frqg0_\LqV%`niC8'lV2BGfKaA:QAl(D#!0hP;V6r?,Nt9_Ch`pF>4m&l)^!#A%c1Y7WTE&)t4>p#$<B`7o5DO$pq>L\+lnQt4a[\-*^@k?:FjGH[&=_&@cNV6JT:tr7%b^i<)`-m"pVumqfK\%SPRC[H<9HEtre\)e%=!k@O&62<3N9uhbAM-GgT[X(!S@<EtI.X@Mg-YU<lKIINs-C*I^3oCFi/JZ4i5(/CD,`#`'U(&?Ql&ei\fH_38j>FtYP&=B8G+mR%,-R"b&lFdEQH!fsll/"H@gWWJju'5kfo/7\"tsN&YcY'D]%*nR(t8W8!!:*jZ&mF]^j]fKW.6E'`CKYDQ4]UAm4*PIFq(R[e9$\b%[frI3qBcSso0A[(/OS*'%XATmXWg>Gbp[L1RW[Q5CjWa(:mo-e;#Y\(Ys?ml1;r0J]I-rYCGP_+8eV\O)[ZZ4Re8u_IsQD)-Wt8=%5T$AWocGQqEH?C6S-s,<f>-fc@cT9`+E>cQ:boB9K$MWbJ!pgC[m54qAN)._%#4trjffjd*M?qkWpaU_TQsM19XY%`pJAJ^fef.\%#SXM#//*a=+f'i?#`Ku^a50,J<o/h>aKthq8!odrbm1`sNat<Jq^qDJ!F\3'a:*k.\HN"fLi%f.b=D#8C&3ci8P@NY]4FAm\+rOg%Edo<0qh`Yt<jm9?HD[0f3sY`Wm`/qmZtU^D7P5hS'HS@&SJ'M#LJ]'0%-@p"3KABVfHPKNG`BW&p&]SXbE%^6_)meB1qOKY!B$JU%(1.m/9LKRp3oPb*ma@)!S$B6?NPT-h3!Fl$kN6sDmde^2.kX#6WnR+T6ZB^t5'OF'*G0/s2o>HN_tCD'=kEPpdtMc#q12898FlT*%'A;8Pe\07l-+f64d&&@PgFqGl#R:hL_RZ.-r>pm+?>oNIo/B<*JJu]Gh48`:eJ$Pk:?f4l?+0gqRR.YO[YKS-DO=G+:C2^gQ"qgj%PVLg9-3`GEKe%^s">]]+]H:[CrpBBS9f:IUabHMFLXLX>r])l"aR`*lZH)8aUGjksGKcGrnMQPZp2se<=aNhD&K,OXTSH*/&35I%%A4K6AjU?n*$LNpuKmRkaT@`O,'*DTC+j739]@4D;YVrIkIE+DIGR6J0M6?h?/CAKN%-LTMcISpU]M%is,E^r;SO,'R:IOh"rpEZT%_iGEeG4gDR]CI1iEi1jE036*/j!CVcLq98JD5O@!ZJUV8MTpT_IABU.<LYc!E)H43/>HqMIJ"pcDmsY?WK*\3!lW[CKK`!NBYlIf%`OMou*Lt580_?"+Xkrgn,&n_k9n%$9]<C9Ob\=HK=t,]_bcdbM)9jp^l%Iqk2X+V0f;@95JM>9(T.Ze-Mod226V$4.\i/b[Qm#!Y%i^dV*RNq)"AKSolbu-lre&4!>4<$IA>;?k8T">>!:fg#ci>ZA@We:gY1+#>.c'"p.PYIB\7&;F>^0eX\Y_YZ-$l+U7!:,b"[]j0A%/<6PR</n9:`e+_K/I#Hk-iqb]'N!aM_T#YG.::`?%OS82=dZgA/^AoDSr/@`$/:\$n46ZN1/`(8k+*;6MdE.b9i+t^7m=I'975!h%S\?4o3M^?6$q(J@=N(pQ8/Uq)Xtb[#mp]>pqn;X=-OJg_bD'hDbkjJM-*2<E[]kW^UnU-YI`)[9pscaTT!2uQ<m`4-cB;lL86qZ,%H_1K#R3:AH`k*^;DG$@W*d-P-)\#HJ`Du4]5YAk/9J7>:Gj,4T`%e,gZH'F09F*]l:]mOLn!4g`8i#O=q^n,Bg>.X-^;H*C_t"\B%`j)`s21C>-?k_hF)>i,.-W5]!#pM0jip%f11J)(hMAuqUNd@]*@e(e?EII]_EJFmFY(RP?C;9qPaUTPnCU+qq.A9"A"ChEV$#[B0%GqXUEG[@*'?]T^6n^G8K&*(G'h&lXln]Ut.os_^3Rua1jqTlqSrmuYtm?dkCj4E0PIfH<QrpoBa?iKPM5Q:JF5QCSpY5e([pV6\'%Va(4O[pQoKl+d8gY<]7_puOa=oQPfbmlp_(D.l"q~>%AI9_PrivateDataEnd